{"version":3,"file":"static/js/164.a94f38c9.chunk.js","mappings":"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","sources":["Apps/Compass/Components/Degrees/DegreesFull.jsx","Apps/Compass/Components/Pointers/RoseFull.jsx","Apps/Compass/Components/RollPitch/DoubleSphere.jsx","Apps/Compass/Components/RollPitch/Target.jsx","Apps/Compass/Components/RollPitch/Bubble.jsx","Apps/Compass/index.jsx","Apps/Compass/Handlers/handleAction.js","Apps/Compass/Handlers/handleTopMenu.js"],"sourcesContent":["//generates all compass degrees\r\nexport default function DegreesFull() {\r\n    var compassDegreePointers = [];\r\n    function compassDegreesPointersCalc() {\r\n        compassDegreePointers = [];\r\n        for (let i = 0; i < 360; i++) {\r\n            var height=5;\r\n            if (i % 90 === 0) {\r\n                height = 20;\r\n            } else if ((i + 45) % 90 === 0) {\r\n                height = 15;\r\n            } else if (i % 15 === 0) {\r\n                height = 10;\r\n            }\r\n            compassDegreePointers.push(height);\r\n        }\r\n    };\r\n    compassDegreesPointersCalc();\r\n\r\n    return (\r\n        <g id=\"degrees\">\r\n            <circle cx=\"100\" cy=\"100\" r=\"90\" fill=\"lightgray\" stroke=\"black\" strokeWidth=\"1\" />\r\n            <circle cx=\"100\" cy=\"100\" r=\"70\" fill=\"white\" stroke=\"black\" strokeWidth=\"1\" />\r\n            {compassDegreePointers.map((height, index) => {\r\n                return (\r\n                    <line\r\n                        key={index}\r\n                        x1={Math.cos(index * (Math.PI / 180)) * (70) + 100}\r\n                        y1={Math.sin(index * (Math.PI / 180)) * (70) + 100}\r\n                        x2={Math.cos(index * (Math.PI / 180)) * (70 + height) + 100}\r\n                        y2={Math.sin(index * (Math.PI / 180)) * (70 + height) + 100}\r\n                        stroke={index === 270 ? \"red\" : \"black\"}\r\n                        strokeWidth={height === 5 ? 0.5 : 1}\r\n                    />\r\n                )\r\n            })}\r\n            <polygon points=\"100,25 96,10.9 100,10.8 104,10.9\" fill=\"red\" />\r\n        </g>\r\n    )\r\n}","//Generates a complete compass rose\r\nimport {useState, useEffect} from \"react\";\r\nexport default function RoseFull({ TRANSITION_TIME, rotation }) {\r\n    const [rot, setRot] = useState(rotation);\r\n    useEffect(() => {\r\n        setRot(rotation);\r\n    },[rotation]);\r\n    var compassRosePoints = [];\r\n    function compassRosePointsCalc() {\r\n        compassRosePoints = [];\r\n        const center = 100;\r\n        let ptx1, pty1, ptx2, pty2, ptx3, pty3, ptx4, pty4, points1, points2, deg, distLong, distShort;\r\n        for (let i = 0; i < 16; i++) {\r\n            if (i >= 12) {\r\n                deg = i * 90;\r\n                distLong = 60;\r\n                distShort = 15;\r\n            } else if (i >= 8) {\r\n                deg = i * 90 - 45;\r\n                distLong = 50;\r\n                distShort = 12.5;\r\n            } else {\r\n                deg = i * 360 / 8 + 360 / 16;\r\n                distLong = 40;\r\n                distShort = 10;\r\n            }\r\n            ptx1 = Math.cos(deg * (Math.PI / 180)) * distLong + center;\r\n            pty1 = Math.sin(deg * (Math.PI / 180)) * distLong + center;\r\n            ptx2 = Math.cos((deg + 45) * (Math.PI / 180)) * distShort + center;\r\n            pty2 = Math.sin((deg + 45) * (Math.PI / 180)) * distShort + center;\r\n            ptx3 = center;\r\n            pty3 = center;\r\n            ptx4 = Math.cos((deg - 45) * (Math.PI / 180)) * distShort + center;\r\n            pty4 = Math.sin((deg - 45) * (Math.PI / 180)) * distShort + center;\r\n            points1 = ptx1 + \",\" + pty1 + \" \" + ptx2 + \",\" + pty2 + \" \" + ptx3 + \",\" + pty3 + \" \" + ptx4 + \",\" + pty4;\r\n            points2 = ptx1 + \",\" + pty1 + \" \" + ptx2 + \",\" + pty2 + \" \" + ptx3 + \",\" + pty3;\r\n            compassRosePoints.push([points1, points2]);\r\n        }\r\n    }\r\n    compassRosePointsCalc();\r\n\r\n    return (\r\n        <g id=\"rose\" style={{ transformOrigin: \"center\", rotate: `${rot}rad`, transition: `rotate ${TRANSITION_TIME}s ease-in-out` }}>\r\n            <circle cx=\"100\" cy=\"100\" r=\"60\" fill=\"lightgray\" stroke=\"black\" strokeWidth=\"1\" />\r\n            <circle cx=\"100\" cy=\"100\" r=\"50.5\" stroke=\"gray\" strokeWidth=\"0.5\" />\r\n            <circle cx=\"100\" cy=\"100\" r=\"40.5\" stroke=\"gray\" strokeWidth=\"0.5\" />\r\n            {compassRosePoints.map((val, index) => {\r\n                return (\r\n                    <>\r\n                        <polygon key={index + \"a\"} points={val[0]} fill=\"white\" stroke=\"black\" strokeWidth=\"1\" />\r\n                        <polygon key={index + \"b\"} points={val[1]} fill=\"black\" />\r\n                        {index>=12 && index<16 ?\r\n                        <line key={index + \"c\"}\r\n                        x1={Math.cos((index-12) * (Math.PI / 2)) * 60 + 100}\r\n                        y1={Math.sin((index-12) * (Math.PI / 2)) * 60 + 100}\r\n                        x2={Math.cos((index-12) * (Math.PI / 2)) * 70 + 100}\r\n                        y2={Math.sin((index-12) * (Math.PI / 2)) * 70 + 100}\r\n                        stroke=\"black\" \r\n                        strokeWidth=\"0.5\" />\r\n                        :null}\r\n                    </>\r\n                )\r\n            })}\r\n            <polygon points=\"100,30 96,45 100,50 104,45\" fill=\"white\" stroke=\"black\" strokeWidth=\"1\" />\r\n            <polygon points=\"100,30 104,45 100,45\" fill=\"black\" />\r\n            <polygon points=\"100,45 96,45 100,50\" fill=\"black\" />\r\n            <rect x=\"96\" y=\"48\" width=\"8\" height=\"2\" fill=\"white\" stroke=\"black\" strokeWidth=\"1\" rx=\"1\" />\r\n        </g>\r\n    )\r\n}","//Generates two spheres that invert their colors when interceptin each other,\r\n//used to visualize roll and pitch\r\nexport default function DoubleSphere({ pitch, roll, TRANSITION_TIME }) {\r\n    return (\r\n        <g id=\"rollPitch\" style={{ isolation: \"isolate\", filter: \" invert(100%)\" }}>\r\n            <circle\r\n                cx=\"100\"\r\n                cy=\"100\"\r\n                r=\"13\"\r\n                fill=\"white\"\r\n                stroke=\"black\"\r\n                strokeWidth=\"2\"\r\n                style={{ filter: \" invert(100%)\" }}\r\n            />\r\n            <circle\r\n                cx={Math.sin(pitch) * 5 + 100}\r\n                cy={Math.sin(roll) * 5 + 100}\r\n                r=\"5\"\r\n                fill=\"black\"\r\n                style={{ transition: `all ${TRANSITION_TIME}s ease-in-out`, mixBlendMode: \"difference\", filter: \" invert(100%)\" }}\r\n            />\r\n            <circle\r\n                cx={-Math.sin(pitch) * 5.5 + 100}\r\n                cy={-Math.sin(roll) * 5.5 + 100}\r\n                r=\"4.5\"\r\n                fill=\"black\"\r\n                style={{ transition: `all ${TRANSITION_TIME}s ease-in-out`, mixBlendMode: \"difference\", filter: \"invert(100%)\" }}\r\n            />\r\n        </g>\r\n    );\r\n}","//Generates two targets that used to visualize roll and pitch\r\nexport default function Target({ pitch, roll, TRANSITION_TIME }) {\r\n    const deltaX = Math.sin(pitch) * 5;\r\n    const deltaY = Math.sin(roll) * 5;\r\n    return (\r\n        <g id=\"rollPitch\" style={{ isolation: \"isolate\", filter: \" invert(100%)\" }}>\r\n            <circle\r\n                cx=\"100\"\r\n                cy=\"100\"\r\n                r=\"13\"\r\n                fill=\"white\"\r\n                stroke=\"black\"\r\n                strokeWidth=\"2\"\r\n                style={{ filter: \" invert(100%)\" }}\r\n            />\r\n            <line x1=\"100\" y1=\"87\" x2=\"100\" y2=\"113\" stroke=\"black\" strokeWidth=\"1\"\r\n                style={{ transition: `all ${TRANSITION_TIME}s ease-in-out`, mixBlendMode: \"difference\", filter: \" invert(100%)\" }} />\r\n            <line x1=\"87\" y1=\"100\" x2=\"113\" y2=\"100\" stroke=\"black\" strokeWidth=\"1\"\r\n                style={{ transition: `all ${TRANSITION_TIME}s ease-in-out`, mixBlendMode: \"difference\", filter: \" invert(100%)\" }} />\r\n            <g>\r\n                <line x1={101+deltaX} y1={101+deltaY} x2={106+deltaX} y2={101+deltaY} stroke=\"black\" strokeWidth=\"1\"\r\n                    style={{ transition: `all ${TRANSITION_TIME}s ease-in-out`, mixBlendMode: \"difference\", filter: \" invert(100%)\" }} />\r\n                <line x1={101+deltaX} y1={101+deltaY} x2={101+deltaX} y2={106+deltaY} stroke=\"black\" strokeWidth=\"1\"\r\n                    style={{ transition: `all ${TRANSITION_TIME}s ease-in-out`, mixBlendMode: \"difference\", filter: \" invert(100%)\" }} />\r\n                <line x1={101+deltaX} y1={99+deltaY} x2={101+deltaX} y2={94+deltaY} stroke=\"black\" strokeWidth=\"1\"\r\n                    style={{ transition: `all ${TRANSITION_TIME}s ease-in-out`, mixBlendMode: \"difference\", filter: \" invert(100%)\" }} />\r\n                <line x1={101+deltaX} y1={99+deltaY} x2={106+deltaX} y2={99+deltaY} stroke=\"black\" strokeWidth=\"1\"\r\n                    style={{ transition: `all ${TRANSITION_TIME}s ease-in-out`, mixBlendMode: \"difference\", filter: \" invert(100%)\" }} />\r\n                <line x1={99+deltaX} y1={101+deltaY} x2={99+deltaX} y2={106+deltaY} stroke=\"black\" strokeWidth=\"1\"\r\n                    style={{ transition: `all ${TRANSITION_TIME}s ease-in-out`, mixBlendMode: \"difference\", filter: \" invert(100%)\" }} />\r\n                <line x1={99+deltaX} y1={101+deltaY} x2={94+deltaX} y2={101+deltaY} stroke=\"black\" strokeWidth=\"1\"\r\n                    style={{ transition: `all ${TRANSITION_TIME}s ease-in-out`, mixBlendMode: \"difference\", filter: \" invert(100%)\" }} />\r\n                <line x1={99+deltaX} y1={99+deltaY} x2={94+deltaX} y2={99+deltaY} stroke=\"black\" strokeWidth=\"1\"\r\n                    style={{ transition: `all ${TRANSITION_TIME}s ease-in-out`, mixBlendMode: \"difference\", filter: \" invert(100%)\" }} />\r\n                <line x1={99+deltaX} y1={99+deltaY} x2={99+deltaX} y2={94+deltaY} stroke=\"black\" strokeWidth=\"1\"\r\n                    style={{ transition: `all ${TRANSITION_TIME}s ease-in-out`, mixBlendMode: \"difference\", filter: \" invert(100%)\" }} />\r\n            </g>\r\n        </g>\r\n    );\r\n}","//Generates a bubble and its correct placement to visualize roll and pitch\r\nexport default function Bubble({ pitch, roll, TRANSITION_TIME }) {\r\n    const deltaX = Math.sin(pitch) * 5;\r\n    const deltaY = Math.sin(roll) * 5;\r\n    return (\r\n        <g id=\"rollPitch\" style={{ isolation: \"isolate\" }}>\r\n            <circle\r\n                cx=\"100\"\r\n                cy=\"100\"\r\n                r=\"13\"\r\n                fill=\"white\"\r\n                stroke=\"black\"\r\n                strokeWidth=\"2\"\r\n            />\r\n            <circle\r\n                cx=\"100\"\r\n                cy=\"100\"\r\n                r=\"6\"\r\n                stroke=\"black\"\r\n                strokeWidth=\"1\"\r\n            />\r\n            <line x1=\"100\" y1=\"106\" x2=\"100\" y2=\"112\" stroke=\"black\" strokeWidth=\"1\"/>\r\n            <line x1=\"100\" y1=\"94\" x2=\"100\" y2=\"88\" stroke=\"black\" strokeWidth=\"1\"/>\r\n            <line x1=\"106\" y1=\"100\" x2=\"112\" y2=\"100\" stroke=\"black\" strokeWidth=\"1\"/>\r\n            <line x1=\"94\" y1=\"100\" x2=\"88\" y2=\"100\" stroke=\"black\" strokeWidth=\"1\"/>\r\n            <circle\r\n                cx={deltaX + 100}\r\n                cy={deltaY + 100}\r\n                r=\"5\"\r\n                fill=\"deepskyblue\"\r\n                stroke=\"black\"\r\n                strokeWidth=\"0.5\"\r\n                style={{ transition: `all ${TRANSITION_TIME}s ease-in-out`}}\r\n            />\r\n            <path\r\n                d={\r\n                    `M ${deltaX + 101} ${deltaY + 97.5} \r\n                    C ${deltaX + 102.5} ${deltaY + 97.5}, \r\n                    ${deltaX + 102.5} ${deltaY + 97.5}, \r\n                    ${deltaX + 102.5} ${deltaY + 99} `\r\n                }\r\n                stroke=\"black\"\r\n                strokeWidth=\"1\"\r\n                style={{ transition: `all ${TRANSITION_TIME}s ease-in-out` }}\r\n            />\r\n        </g>\r\n    );\r\n}","import { useState, useEffect } from \"react\";\r\nimport handleAction from \"./Handlers/handleAction.js\";\r\nimport handleTopMenu from \"./Handlers/handleTopMenu.js\";\r\nimport DegreesFull from \"./Components/Degrees/DegreesFull.jsx\";\r\nimport RoseFull from \"./Components/Pointers/RoseFull.jsx\";\r\nimport RoseSimple from \"./Components/Pointers/RoseSimple.jsx\";\r\nimport MagnetPointer from \"./Components/Pointers/MagnetPointer.jsx\";\r\nimport Arrow from \"./Components/Pointers/Arrow.jsx\";\r\nimport Modern from \"./Components/Pointers/Modern.jsx\";\r\nimport DoubleSphere from \"./Components/RollPitch/DoubleSphere.jsx\";\r\nimport Target from \"./Components/RollPitch/Target.jsx\";\r\nimport Bubble from \"./Components/RollPitch/Bubble.jsx\";\r\nimport \"./style.css\";\r\n\r\nexport default function Compass(props) {\r\n    const action = props.action;\r\n    const setAction = props.setAction;\r\n    const appMenu = props.appMenu;\r\n    const setAppMenu = props.setAppMenu;\r\n    const [state, setState] = useState(\"ready\");\r\n    const [style, setStyle] = useState({\r\n        degrees: \"DegreesFull\",\r\n        pointer: \"RoseFull\",\r\n        rollpitch: \"DoubleSphere\"\r\n    });\r\n    //Note: all angles are in radians\r\n    //cumulativeRotation is used to prevent compass from doing a full 360 rotation\r\n    //when heading goes from -PI to PI, and makes this number go from 0 to 2PI at the start\r\n    const [angles, setAngles] = useState({\r\n        heading: 0,\r\n        pitch: 0,\r\n        roll: 0,\r\n        cumulativeRotation: Math.PI * 2\r\n    });\r\n    var sensor = null;\r\n    const SENSOR_UPDATE_FREQUENCY = 4; //keep value low to avoid battery drain\r\n    const TRANSITION_TIME = 0.25; //seconds\r\n\r\n    const pointerProps = {\r\n        TRANSITION_TIME: TRANSITION_TIME,\r\n        rotation: angles.heading + angles.cumulativeRotation\r\n    };\r\n    const POINTERS_COMPONENTS = {\r\n        RoseFull: <RoseFull\r\n            TRANSITION_TIME={TRANSITION_TIME}\r\n            rotation={angles.heading + angles.cumulativeRotation} />,\r\n        RoseSimple: <RoseSimple {...pointerProps} />,\r\n        MagnetPointer: <MagnetPointer {...pointerProps} />,\r\n        Arrow: <Arrow {...pointerProps} />,\r\n        Modern: <Modern {...pointerProps} />\r\n    };\r\n\r\n    const rollPitchProps = {\r\n        pitch: angles.pitch,\r\n        roll: angles.roll,\r\n        TRANSITION_TIME: TRANSITION_TIME\r\n    };\r\n    const ROLLPITCH_COMPONENTS = {\r\n        DoubleSphere: <DoubleSphere {...rollPitchProps} />,\r\n        Target: <Target {...rollPitchProps} />,\r\n        Bubble: <Bubble {...rollPitchProps} />\r\n    };\r\n\r\n    const DEGREES_COMPONENTS = {\r\n        DegreesFull: <DegreesFull />,\r\n    };\r\n\r\n    //converts quaternion to angles in radians and updates angles\r\n    //compensates for heading going from -PI to PI\r\n    function quaternionToAngles() {\r\n        const x = sensor.quaternion[0];\r\n        const y = sensor.quaternion[1];\r\n        const z = sensor.quaternion[2];\r\n        const w = sensor.quaternion[3];\r\n        const heading = Math.atan2(2 * (x * y + z * w), 1 - 2 * (y * y + z * z));\r\n        const pitch = Math.asin(2 * (x * z - w * y));\r\n        const roll = Math.atan2(2 * (x * w + y * z), 1 - 2 * (x * x + y * y));\r\n        let cumulativeRotation = angles.cumulativeRotation;\r\n        if (angles.heading < 0 && heading > 0) {\r\n            cumulativeRotation += Math.PI * 2;\r\n        }\r\n        else if (angles.heading > 0 && heading < 0) {\r\n            cumulativeRotation -= Math.PI * 2;\r\n        }\r\n        setAngles({\r\n            heading: heading,\r\n            pitch: pitch,\r\n            roll: roll,\r\n            cumulativeRotation: cumulativeRotation\r\n        });\r\n    };\r\n\r\n    // start absolute orientation sensors\r\n    function runSensors() {\r\n        const options = { frequency: SENSOR_UPDATE_FREQUENCY, referenceFrame: \"device\" };\r\n        sensor = new AbsoluteOrientationSensor(options);\r\n        sensor.start();\r\n        sensor.onreading = () => {\r\n            quaternionToAngles();\r\n        }\r\n    };\r\n\r\n    // state machine\r\n    useEffect(() => {\r\n        if (state === \"start\") {\r\n            if (\"AbsoluteOrientationSensor\" in window) {\r\n                Promise.all([\r\n                    navigator.permissions.query({ name: \"accelerometer\" }),\r\n                    navigator.permissions.query({ name: \"magnetometer\" }),\r\n                    navigator.permissions.query({ name: \"gyroscope\" }),\r\n                ]).then((results) => {\r\n                    if (results.every((result) => result.state === \"granted\")) {\r\n                        setState(\"running\");\r\n                    } else {\r\n                        setState(\"not allowed\");\r\n                    }\r\n                });\r\n            } else {\r\n                setState(\"not supported\");\r\n            }\r\n\r\n        }\r\n        if (state === \"running\") {\r\n            runSensors();\r\n        }\r\n    }, [state]);\r\n\r\n    // cleanup sensor\r\n    useEffect(() => {\r\n        return () => {\r\n            if (sensor) {\r\n                sensor.stop();\r\n            }\r\n        }\r\n    });\r\n\r\n    const args = {\r\n        style: style,\r\n        setStyle: setStyle,\r\n    };\r\n    useEffect(() => {\r\n        handleAction(action, setAction, args);\r\n    }, [action]);\r\n    useEffect(() => {\r\n        handleTopMenu(appMenu, setAppMenu, args);\r\n    }, [style]);\r\n\r\n    return (\r\n        <>\r\n            {state === \"ready\" &&\r\n                <button\r\n                    className=\"compassStartButton\"\r\n                    onClick={() => setState(\"start\")}\r\n                    title=\"Start\"\r\n                >\r\n                    Start\r\n                </button>\r\n            }\r\n            {state === \"not supported\" &&\r\n                <div className=\"compassWarning\">\r\n                    This feature is not supported on your device and/or browser\r\n                </div>\r\n            }\r\n            {state === \"not allowed\" &&\r\n                <div className=\"compassWarning\">\r\n                    This feature does not have permission to access your device sensors\r\n                </div>\r\n            }\r\n            <svg className=\"compassContainer\" shapeRendering=\"geometricprecision\" width=\"200\" height=\"200\" viewBox=\"0 0 200 200\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <text x=\"100\" y=\"5\" textAnchor=\"middle\" dominantBaseline=\"middle\" fontSize=\"10\" fill=\"red\" >\r\n                    {(angles.heading * 180 / Math.PI).toFixed(2)}°\r\n                </text>\r\n                {DEGREES_COMPONENTS[style.degrees]}\r\n                <RoseFull\r\n                    TRANSITION_TIME={TRANSITION_TIME}\r\n                    rotation={angles.heading + angles.cumulativeRotation} />\r\n                {ROLLPITCH_COMPONENTS[style.rollpitch]}\r\n            </svg>\r\n        </>\r\n    );\r\n}","export default function handleAction(action, setAction, args){\r\n    switch(action){\r\n        case \"RoseFull\":\r\n        case \"RoseSimple\":\r\n        case \"MagnetPointer\":\r\n        case \"Arrow\":\r\n        case \"Modern\":\r\n            args.setStyle({...args.style, pointer: action});\r\n            setAction(action);\r\n            break;\r\n        case \"Target\":\r\n        case \"DoubleSphere\":\r\n        case \"Bubble\":\r\n            args.setStyle({...args.style, rollpitch: action});\r\n            setAction(action);\r\n            break;\r\n        case false:\r\n            break;\r\n        default:\r\n            setAction(false);\r\n            break;\r\n    }\r\n}","export default function handleTopMenu(appMenu, setAppMenu, args) {\r\n    //Default App Menu  \r\n    const defaultAppMenu = {\r\n        \"Pointers\": {\r\n            \"Rose Full\": {\r\n                \"action\": \"RoseFull\",\r\n                \"radio\": true,\r\n                \"name\": \"pointer\",\r\n                \"disabled\": false\r\n            },\r\n            \"Rose Simple\": {\r\n                \"action\": \"RoseSimple\",\r\n                \"radio\": false,\r\n                \"name\": \"pointer\",\r\n                \"disabled\": false\r\n            },\r\n            \"Magnet Pointer\": {\r\n                \"action\": \"MagnetPointer\",\r\n                \"radio\": false,\r\n                \"name\": \"pointer\",\r\n                \"disabled\": false\r\n            },\r\n            \"Arrow\": {\r\n                \"action\": \"Arrow\",\r\n                \"radio\": false,\r\n                \"name\": \"pointer\",\r\n                \"disabled\": false\r\n            },\r\n            \"Modern\": {\r\n                \"action\": \"Modern\",\r\n                \"radio\": false,\r\n                \"name\": \"pointer\",\r\n                \"disabled\": false\r\n            }\r\n        },\r\n        \"Roll/Pitch\": {\r\n            \"Double Sphere\": {\r\n                \"action\": \"DoubleSphere\",\r\n                \"radio\": true,\r\n                \"name\": \"rollpitch\",\r\n                \"disabled\": false\r\n            },\r\n            \"Bubble\": {\r\n                \"action\": \"Bubble\",\r\n                \"radio\": false,\r\n                \"name\": \"rollpitch\",\r\n                \"disabled\": false\r\n            },\r\n            \"Target\": {\r\n                \"action\": \"Target\",\r\n                \"radio\": false,\r\n                \"name\": \"rollpitch\",\r\n                \"disabled\": false\r\n            }\r\n        },\r\n        \"Help\": {\r\n            \"Help\": {\r\n                \"action\": \"help\",\r\n                \"keybind\": \"F1\",\r\n                \"disabled\": true,\r\n                \"title\": \"Not Implemented\"\r\n            },\r\n            \"About\": {\r\n                \"action\": \"about\",\r\n                \"disabled\": true,\r\n                \"title\": \"Not Implemented\"\r\n            }\r\n        }\r\n    }\r\n    if (appMenu === null) {\r\n        setAppMenu(defaultAppMenu);\r\n    }\r\n    else {\r\n        let updatedAppMenu = { ...appMenu };\r\n        Object.keys(updatedAppMenu[\"Pointers\"]).forEach((key) => {\r\n            updatedAppMenu[\"Pointers\"][key].action === args.style.pointer ?\r\n            updatedAppMenu[\"Pointers\"][key].radio = true : \r\n            updatedAppMenu[\"Pointers\"][key].radio = false\r\n        });\r\n        Object.keys(updatedAppMenu[\"Roll/Pitch\"]).forEach((key) => {\r\n            updatedAppMenu[\"Roll/Pitch\"][key].action === args.style.rollpitch ?\r\n            updatedAppMenu[\"Roll/Pitch\"][key].radio = true : \r\n            updatedAppMenu[\"Roll/Pitch\"][key].radio = false\r\n        });\r\n        setAppMenu(updatedAppMenu);\r\n    }\r\n}"],"names":["DegreesFull","compassDegreePointers","i","height","push","compassDegreesPointersCalc","_jsxs","id","children","_jsx","cx","cy","r","fill","stroke","strokeWidth","map","index","x1","Math","cos","PI","y1","sin","x2","y2","points","RoseFull","_ref","TRANSITION_TIME","rotation","rot","setRot","useState","useEffect","compassRosePoints","center","ptx1","pty1","ptx2","pty2","ptx3","pty3","ptx4","pty4","points1","points2","deg","distLong","distShort","compassRosePointsCalc","style","transformOrigin","rotate","transition","val","_Fragment","x","y","width","rx","DoubleSphere","pitch","roll","isolation","filter","mixBlendMode","Target","deltaX","deltaY","Bubble","d","Compass","props","action","setAction","appMenu","setAppMenu","state","setState","setStyle","degrees","pointer","rollpitch","angles","setAngles","heading","cumulativeRotation","sensor","pointerProps","rollPitchProps","ROLLPITCH_COMPONENTS","DEGREES_COMPONENTS","runSensors","AbsoluteOrientationSensor","frequency","referenceFrame","start","onreading","quaternion","z","w","atan2","asin","quaternionToAngles","window","Promise","all","navigator","permissions","query","name","then","results","every","result","stop","args","handleAction","updatedAppMenu","Object","keys","forEach","key","radio","handleTopMenu","className","onClick","title","shapeRendering","viewBox","xmlns","textAnchor","dominantBaseline","fontSize","toFixed"],"sourceRoot":""}