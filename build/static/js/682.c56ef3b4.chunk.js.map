{"version":3,"file":"static/js/682.c56ef3b4.chunk.js","mappings":"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G,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE9D,EAAG,CACC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EA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","sources":["Apps/Arcade/Components/MainMenu.js","Apps/Arcade/Handlers/handleCanvasBorders.js","Apps/Arcade/Games/Breakout/Breakout.js","Apps/Arcade/Games/Snake/Snake.js","Apps/Arcade/Games/Space Invaders/SpaceInvaders.js","Apps/Arcade/Handlers/handleAction.js","Apps/Arcade/Handlers/handleTopMenu.js","Apps/Arcade/Components/KeybindDialog.jsx","Apps/Arcade/index.jsx","Apps/Arcade/Controls/Keyboard.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport SnakeSplash from \"../Games/Snake/SnakeSplash.png\";\r\nimport BreakoutSplash from \"../Games/Breakout/BreakoutSplash.png\";\r\nimport SpaceInvadersSplash from \"../Games/Space Invaders/SpaceInvadersSplash.png\";\r\n\r\nexport default function MainMenu({ controls, setGameState, setGameChoice }) {\r\n    const [currentSelection, setCurrentSelection] = useState(0);\r\n    const gamelist = {\r\n        \"Snake\": SnakeSplash,\r\n        \"Breakout\": BreakoutSplash,\r\n        \"Space Invaders\": SpaceInvadersSplash\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(controls.down && currentSelection < Object.keys(gamelist).length - 1) {\r\n            setCurrentSelection(currentSelection + 1);\r\n        }else if(controls.up && currentSelection > 0) {\r\n            setCurrentSelection(currentSelection - 1);\r\n        }else if(controls.one) {\r\n            setGameState(\"Start\");\r\n            setGameChoice(Object.keys(gamelist)[currentSelection]);\r\n        }\r\n    }, [controls]);\r\n\r\n    return (\r\n        <div id=\"arcadeMainMenu\">\r\n            <div id=\"arcadeSplashScreen\">\r\n                {Object.keys(gamelist).map((name, index) => (\r\n                    index === currentSelection &&\r\n                    <img key={index} src={gamelist[name]}></img>\r\n                ))}\r\n            </div>\r\n            <div id=\"arcadeGameList\">\r\n                {Object.keys(gamelist).map((name, index) => (\r\n                    <div \r\n                    key={index}\r\n                    style={index === currentSelection ? {background: \"cyan\", color: \"black\"} : {background: \"black\", color: \"white\"}}\r\n                    onClick={() => setCurrentSelection(index)}>\r\n                        {name}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n        );\r\n}","export const handleCanvasBorders = (ctx, width, height) => {\r\n    ctx.fillStyle = \"silver\";\r\n    ctx.fillRect(0, 0, width, 1);\r\n    ctx.fillRect(0, 0, 1, height);\r\n    ctx.fillRect(width - 1, 0, 1, height);\r\n    ctx.fillRect(0, height - 1, width, 1);\r\n} ","import React, { useState, useRef, useEffect } from \"react\";\r\nimport LevelsJSON from \"./Breakout_Maps.json\";\r\nimport { handleCanvasBorders } from \"../../Handlers/handleCanvasBorders.js\";\r\n\r\nconst frequency = 60; //Hertz\r\nconst frameRate = 1000 / frequency; // frames / milisecond\r\nconst rows = 30;\r\nconst cols = 30;\r\nconst defaultPlayerBar = {\r\n  x: 12,\r\n  y: 27,\r\n  w: 6,\r\n  speed: 0.25,\r\n};\r\nconst defaultBall = {\r\n  x: 15,\r\n  y: 50,\r\n  r: 0.5,\r\n  dirX: 0.25,\r\n  dirY: -0.25,\r\n};\r\nconst defaultFirework = {\r\n  x: 15,\r\n  y: 52,\r\n  r: 0.25,\r\n  dirX: 0,\r\n  dirY: -0.25,\r\n  t: -5,\r\n  color: \"\",\r\n};\r\nexport default function Breakout({ controls, updateScoreboard, isSelected, gameState, setGameState, canvasZoom }) {\r\n  const canvasRef = useRef(null);\r\n  const [Maps, setMaps] = useState(JSON.parse(JSON.stringify(LevelsJSON))); //Only way to deep copy nested objects without external dependency\r\n  const [gameLevel, setGameLevel] = useState(0);\r\n  const [currLevel, setCurrLevel] = useState(Maps[gameLevel]);\r\n  const [levelHealth, setLevelHealth] = useState(currLevel.Bars);\r\n  const [frameCount, setFrameCount] = useState(0);\r\n  const [winFrameCount, setWinFrameCount] = useState(0);\r\n  let [playerBar, setPlayerBar] = useState(Object.create(defaultPlayerBar));\r\n  let [ball, setBall] = useState(Object.create(defaultBall));\r\n  let [firework1] = useState(Object.create(defaultFirework));\r\n  firework1.color = \"blue\";\r\n  let [firework2] = useState(Object.create(defaultFirework));\r\n  firework2.color = \"green\";\r\n  let [firework3] = useState(Object.create(defaultFirework));\r\n  firework3.color = \"red\";\r\n  let [firework4] = useState(Object.create(defaultFirework));\r\n  firework4.color = \"yellow\";\r\n  let [firework5] = useState(Object.create(defaultFirework));\r\n  firework5.color = \"cyan\";\r\n  let [firework6] = useState(Object.create(defaultFirework));\r\n  firework6.color = \"magenta\";\r\n  let [firework7] = useState(Object.create(defaultFirework));\r\n  firework7.color = \"white\";\r\n  const scoreboard = { time: 0, score: 0, gameState: \"Start\" };\r\n  let [score, setScore] = useState(0);\r\n\r\nuseEffect(() => {\r\n    if (controls.pause) {\r\n      if (gameState === \"Play\") {\r\n        setGameState(\"Pause\");\r\n      } else if (gameState === \"Pause\") {\r\n        setGameState(\"Play\");\r\n      } else if (\r\n        gameState === \"Win\" ||\r\n        gameState === \"End\" ||\r\n        gameState === \"Start\"\r\n      ) {\r\n        setGameState(\"Restart\");\r\n      }\r\n    }\r\n}, [controls]);\r\n\r\n  useEffect(() => {\r\n    if (gameState === \"Play\" || \"Win\") {\r\n      if (\r\n        controls.left &&\r\n        !controls.right &&\r\n        playerBar.x + playerBar.w > playerBar.w\r\n      ) {\r\n        playerBar.x = playerBar.x - playerBar.speed;\r\n      }\r\n      if (\r\n        controls.right &&\r\n        !controls.left &&\r\n        playerBar.x + playerBar.w < cols\r\n      ) {\r\n        playerBar.x = playerBar.x + playerBar.speed;\r\n      }\r\n    }\r\n  }, [controls, frameCount]);\r\n\r\n  const clearDraws = (ctx) => {\r\n    ctx.fillStyle = \"black\";\r\n    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n  };\r\n\r\n  const drawGameOver = (ctx, blockWidth, blockHeight) => {\r\n    ctx.fillStyle = \"red\";\r\n    ctx.font = \"40px monospace\"; //change this nonsense static font size\r\n    ctx.fillText(\"Game Over\", 5 * blockWidth, 17 * blockHeight, 500);\r\n  };\r\n  const drawPauseGame = (ctx, blockWidth, blockHeight) => {\r\n    ctx.fillStyle = \"red\";\r\n    ctx.font = \"40px monospace\"; //and this\r\n    ctx.fillText(\"Paused\", 8 * blockWidth, 17 * blockHeight, 500);\r\n  };\r\n  const handleFireworks = (ctx, blockWidth, blockHeight) => {\r\n    let currFirework;\r\n    for (let i = 0; i <= 6; i++) {\r\n      switch (i) {\r\n        case 0:\r\n          currFirework = firework1;\r\n          break;\r\n        case 1:\r\n          currFirework = firework2;\r\n          break;\r\n        case 2:\r\n          currFirework = firework3;\r\n          break;\r\n        case 3:\r\n          currFirework = firework4;\r\n          break;\r\n        case 4:\r\n          currFirework = firework5;\r\n          break;\r\n        case 5:\r\n          currFirework = firework6;\r\n          break;\r\n        case 6:\r\n          currFirework = firework7;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      if (currFirework.t <= -5) {\r\n        currFirework.t = Math.floor(Math.random() * 4) + 1;\r\n        currFirework.x = playerBar.x + playerBar.w / 2;\r\n        currFirework.y = 52;\r\n        currFirework.dirX = (Math.random() - 0.5) / 8;\r\n        currFirework.dirY = -0.25;\r\n      } else if (currFirework.t > 3) {\r\n        currFirework.t = currFirework.t - 1 / frequency;\r\n      } else if (currFirework.t > 0) {\r\n        currFirework.x = currFirework.x + currFirework.dirX;\r\n        currFirework.y = currFirework.y + currFirework.dirY;\r\n        checkColision(currFirework);\r\n        drawBall(ctx, blockWidth, blockHeight, currFirework);\r\n        currFirework.t = currFirework.t - 1 / frequency;\r\n      } else if (currFirework.t > -5) {\r\n        drawFirework(ctx, blockWidth, blockHeight, currFirework);\r\n        currFirework.t = currFirework.t - 1 / frequency;\r\n      }\r\n    }\r\n  };\r\n  const drawFirework = (ctx, blockWidth, blockHeight, currBall) => {\r\n    for (let i = 0; i < 12; i++) {\r\n      ctx.fillStyle = currBall.color;\r\n      ctx.scale(1, 0.5);\r\n      ctx.beginPath();\r\n      ctx.arc(\r\n        currBall.x * blockWidth +\r\n          Math.cos(((2 * Math.PI) / 12) * i) * currBall.t * 2 * blockWidth,\r\n        currBall.y * blockHeight +\r\n          Math.sin(((2 * Math.PI) / 12) * i) * 2 * currBall.t * 2 * blockHeight,\r\n        (currBall.r / 1) * blockWidth,\r\n        0,\r\n        Math.PI * 2,\r\n      );\r\n      ctx.fill();\r\n      ctx.closePath();\r\n      ctx.scale(1, 2);\r\n    }\r\n  };\r\n  const drawWinGame = (ctx, blockWidth, blockHeight) => {\r\n    clearDraws(ctx);\r\n    ctx.fillStyle = \"red\";\r\n    ctx.font = \"40px monospace\";\r\n    ctx.fillText(\"You Win\", 8 * blockWidth, 17 * blockHeight, 500);\r\n  };\r\n\r\n  const drawLevelUp = (ctx, blockWidth, blockHeight, t) => {\r\n    clearDraws(ctx);\r\n    ctx.fillStyle = \"red\";\r\n    ctx.font = \"40px monospace\";\r\n    switch (t) {\r\n      case 4:\r\n        ctx.fillText(\"Next Level\", 5 * blockWidth, 17 * blockHeight, 500);\r\n        break;\r\n      case 3:\r\n        ctx.fillText(\"3 sec\", 9 * blockWidth, 17 * blockHeight, 500);\r\n        break;\r\n      case 2:\r\n        ctx.fillText(\"2 sec\", 9 * blockWidth, 17 * blockHeight, 500);\r\n        break;\r\n      case 1:\r\n        ctx.fillText(\"1 sec\", 9 * blockWidth, 17 * blockHeight, 500);\r\n        break;\r\n      default:\r\n        ctx.fillText(\"Next Level\", 5 * blockWidth, 17 * blockHeight, 500);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const drawPlayerBar = (ctx, blockWidth, blockHeight) => {\r\n    let newX, newY;\r\n    newX = playerBar.x;\r\n    newY = playerBar.y;\r\n    ctx.fillStyle = \"cyan\";\r\n    ctx.fillRect(\r\n      newX * blockWidth,\r\n      newY * blockHeight,\r\n      playerBar.w * blockWidth,\r\n      blockHeight,\r\n    );\r\n  };\r\n  const drawHitbar = (ctx, blockWidth, blockHeight, obj) => {\r\n    let color;\r\n    switch (obj.h) {\r\n      case 3:\r\n        color = \"green\";\r\n        break;\r\n      case 2:\r\n        color = \"yellow\";\r\n        break;\r\n      case 1:\r\n        color = \"orange\";\r\n        break;\r\n      default:\r\n        color = \"blue\";\r\n        break;\r\n    }\r\n    ctx.fillStyle = color;\r\n    ctx.fillRect(\r\n      obj.x * blockWidth,\r\n      obj.y * blockHeight,\r\n      obj.w * blockWidth,\r\n      blockHeight,\r\n    );\r\n  };\r\n  const drawLevel = (ctx, blockWidth, blockHeight) => {\r\n    for (let i = 0; i < currLevel.Bars; i++) {\r\n      if (currLevel.Matrix[i].h > 0)\r\n        drawHitbar(ctx, blockWidth, blockHeight, currLevel.Matrix[i]);\r\n    }\r\n  };\r\n  const barHit = (bar) => {\r\n    if (bar.h - 1 >= 0) {\r\n      bar.h = bar.h - 1;\r\n      score = score + bar.s;\r\n      setScore(score);\r\n    }\r\n    if (bar.h === 0) {\r\n      setLevelHealth(levelHealth - 1);\r\n      if (levelHealth - 1 === 0) {\r\n        setGameState(\"LevelUp\");\r\n      }\r\n    }\r\n  };\r\n  //colisions against corners count as double damage\r\n  const checkColision = (currBall) => {\r\n    if (currBall.x === 0 || currBall.x === cols) {\r\n      currBall.dirX = -currBall.dirX;\r\n    }\r\n    if (currBall.y === 0) {\r\n      currBall.dirY = -currBall.dirY;\r\n    } else if (currBall.y === rows * 2) {\r\n      setGameState(\"End\");\r\n    }\r\n    if (currBall.y + currBall.r === playerBar.y * 2) {\r\n      if (\r\n        currBall.x >= playerBar.x &&\r\n        currBall.x <= playerBar.x + playerBar.w\r\n      ) {\r\n        currBall.dirY = -currBall.dirY;\r\n      }\r\n    }\r\n    let bar;\r\n    for (let i = 0; i < currLevel.Bars; i++) {\r\n      bar = currLevel.Matrix[i];\r\n      if (bar.h > 0) {\r\n        //compare boundaries\r\n        if (\r\n          currBall.x + currBall.r >= bar.x &&\r\n          currBall.x - currBall.r <= bar.x + bar.w &&\r\n          currBall.y + currBall.r >= bar.y * 2 &&\r\n          currBall.y - currBall.r <= (bar.y + 1) * 2\r\n        ) {\r\n          //horizontal colision\r\n          if (\r\n            currBall.x + currBall.r > bar.x &&\r\n            currBall.x - currBall.r < bar.x + bar.w\r\n          ) {\r\n            currBall.dirY = -currBall.dirY;\r\n            barHit(bar);\r\n          }\r\n          //vertical colision\r\n          if (\r\n            currBall.y + currBall.r > bar.y * 2 &&\r\n            currBall.y - currBall.r < (bar.y + 1) * 2\r\n          ) {\r\n            currBall.dirX = -currBall.dirX;\r\n            barHit(bar);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  // for some reason, arc is coming out as ellipse instead of simple sphere\r\n  // rescaling on the Y axis used as fix, all values for ball on this axis must be doubled\r\n  const drawBall = (ctx, blockWidth, blockHeight, currBall) => {\r\n    ctx.fillStyle = \"#FFFFFF\";\r\n    ctx.scale(1, 0.5);\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      currBall.x * blockWidth,\r\n      currBall.y * blockHeight,\r\n      currBall.r * blockWidth,\r\n      0,\r\n      Math.PI * 2,\r\n    );\r\n    ctx.fill();\r\n    ctx.closePath();\r\n    ctx.scale(1, 2);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n    let blockWidth = context.canvas.width / cols;\r\n    let blockHeight = context.canvas.height / rows;\r\n    let animationFrameId;\r\n    switch (gameState) {\r\n      case \"Play\":\r\n        clearDraws(context);\r\n        handleCanvasBorders(context, context.canvas.width, context.canvas.height);\r\n        drawPlayerBar(context, blockWidth, blockHeight);\r\n        drawLevel(context, blockWidth, blockHeight);\r\n        ball.x = ball.x + ball.dirX;\r\n        ball.y = ball.y + ball.dirY;\r\n        checkColision(ball);\r\n        drawBall(context, blockWidth, blockHeight, ball);\r\n        setTimeout(() => {\r\n          setFrameCount(frameCount + 1);\r\n        }, [frameRate]);\r\n        break;\r\n      case \"Pause\":\r\n        drawPauseGame(context, blockWidth, blockHeight);\r\n        break;\r\n      case \"End\":\r\n        drawGameOver(context, blockWidth, blockHeight);\r\n        break;\r\n      case \"Restart\":\r\n        setMaps(JSON.parse(JSON.stringify(LevelsJSON)));\r\n        setGameLevel(0);\r\n        setCurrLevel(Maps[gameLevel]);\r\n        setLevelHealth(currLevel.Bars);\r\n        setBall(Object.create(defaultBall));\r\n        setPlayerBar(Object.create(defaultPlayerBar));\r\n        setScore(0);\r\n        setFrameCount(1);\r\n        setGameState(\"Play\");\r\n        break;\r\n      case \"LevelUp\":\r\n        if (gameLevel + 1 === 3) {\r\n          setGameState(\"Win\");\r\n        } else {\r\n          drawLevelUp(context, blockWidth, blockHeight, 4);\r\n          setTimeout(() => {\r\n            clearDraws(context, blockWidth, blockHeight);\r\n            drawLevelUp(context, blockWidth, blockHeight, 3);\r\n          }, [1000]);\r\n          setTimeout(() => {\r\n            drawLevelUp(context, blockWidth, blockHeight, 2);\r\n          }, [2000]);\r\n          setTimeout(() => {\r\n            drawLevelUp(context, blockWidth, blockHeight, 1);\r\n          }, [3000]);\r\n          setTimeout(() => {\r\n            setGameLevel(gameLevel + 1);\r\n            setCurrLevel(Maps[gameLevel + 1]);\r\n            setLevelHealth(currLevel.Bars);\r\n            setBall(Object.create(defaultBall));\r\n            clearDraws(context);\r\n            drawLevel(context, blockWidth, blockHeight);\r\n            setGameState(\"Play\");\r\n          }, [4000]);\r\n        }\r\n        break;\r\n      case \"Win\":\r\n        setCurrLevel(Maps[3]);\r\n        drawWinGame(context, blockWidth, blockHeight);\r\n        drawPlayerBar(context, blockWidth, blockHeight);\r\n        handleFireworks(context, blockWidth, blockHeight);\r\n        setTimeout(() => {\r\n          setWinFrameCount(winFrameCount + 1);\r\n        }, [frameRate]);\r\n        break;\r\n      default:\r\n        clearDraws(context);\r\n        break;\r\n    }\r\n    scoreboard.time = Math.floor(frameCount / frequency);\r\n    scoreboard.score = score;\r\n    scoreboard.gameState = gameState;\r\n    updateScoreboard(scoreboard);\r\n    const render = () => {\r\n      animationFrameId = window.requestAnimationFrame(render);\r\n    };\r\n    render();\r\n    return () => {\r\n      window.cancelAnimationFrame(animationFrameId);\r\n    };\r\n  }, [frameCount, winFrameCount, gameState]);\r\n\r\n  return <canvas ref={canvasRef} \r\n  style={{ transform: `scale(${canvasZoom})` }}\r\n  onTouchStart={(e) => e.preventDefault()}\r\n  onTouchMove={(e) => e.preventDefault()}\r\n  onTouchEnd={(e) => e.preventDefault()}\r\n  onTouchCancel={(e) => e.preventDefault()}></canvas>;\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { handleCanvasBorders } from \"../../Handlers/handleCanvasBorders.js\";\r\n\r\nconst frequency = 4; //Hertz\r\nconst frameRate = 1000 / frequency; // frames / milisecond\r\n\r\nconst Snake = ({ controls, updateScoreboard, isSelected, gameState, setGameState, canvasZoom }) => {\r\n  const rows = 30;\r\n  const cols = 30;\r\n  let canvasRef = useRef(null);\r\n  let [fruit, setFruit] = useState(false);\r\n  let [fruitPos] = useState({ x: 0, y: 0 });\r\n  let [score, setScore] = useState(0);\r\n  let [snakeHeadPos] = useState({\r\n    direction: \"right\",\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n  let [previousDir, setPreviousDir] = useState(\"right\");\r\n  let [snakeBody, setSnakeBody] = useState({ x: [], y: [] });\r\n  let [initialPos, setInitialPos] = useState(false);\r\n  let [frameCount, setFrameCount] = useState(0);\r\n  const scoreboard = { time: 0, score: 0, gameState: \"Start\" };\r\n\r\n  useEffect(() => {\r\n    if (controls.pause) {\r\n      if (controls.pause) {\r\n        if (gameState === \"Play\") {\r\n          setGameState(\"Pause\");\r\n        } else if (gameState === \"Pause\") {\r\n          setGameState(\"Play\");\r\n        } else if (\r\n          gameState === \"Win\" ||\r\n          gameState === \"End\" ||\r\n          gameState === \"Start\"\r\n        ) {\r\n          setGameState(\"Restart\");\r\n        }\r\n      }\r\n    }\r\n  }, [controls]);\r\n\r\n  useEffect(() => {\r\n    if (snakeBody.x[0] === undefined) {\r\n      if (controls.up) {\r\n        snakeHeadPos.direction = \"up\";\r\n      } else if (controls.down) {\r\n        snakeHeadPos.direction = \"down\";\r\n      } else if (controls.left) {\r\n        snakeHeadPos.direction = \"left\";\r\n      } else if (controls.right) {\r\n        snakeHeadPos.direction = \"right\";\r\n      }\r\n    } else {\r\n      if (controls.up && previousDir !== \"down\") {\r\n        snakeHeadPos.direction = \"up\";\r\n      } else if (controls.down && previousDir !== \"up\") {\r\n        snakeHeadPos.direction = \"down\";\r\n      } else if (controls.left && previousDir !== \"right\") {\r\n        snakeHeadPos.direction = \"left\";\r\n      } else if (controls.right && previousDir !== \"left\") {\r\n        snakeHeadPos.direction = \"right\";\r\n      }\r\n    }\r\n  }, [controls, frameCount]);\r\n\r\n  const drawBoard = (ctx, canvasWidth, canvasHeight) => {\r\n    ctx.fillStyle = \"#000000\";\r\n    ctx.fillRect(0, 0, canvasWidth, canvasHeight);\r\n  };\r\n\r\n  const drawFruit = (ctx, blockWidth, blockHeight) => {\r\n    let newX, newY;\r\n    let overlapX,\r\n      overlapY = false;\r\n    if (!fruit) {\r\n      fruitPos.x = Math.floor(Math.random() * cols);\r\n      fruitPos.y = Math.floor(Math.random() * rows);\r\n      if (snakeBody.x[0] === undefined) {\r\n        while (fruitPos.x === snakeHeadPos.x && fruitPos.y === snakeHeadPos.y) {\r\n          fruitPos.x = Math.floor(Math.random() * cols);\r\n          fruitPos.y = Math.floor(Math.random() * rows);\r\n        }\r\n      } else {\r\n        for (let i = 0; i < snakeBody.x.length; i++) {\r\n          if (fruitPos.x === snakeBody.x[i]) {\r\n            overlapX = true;\r\n          }\r\n          if (fruitPos.y === snakeBody.y[i]) {\r\n            overlapY = true;\r\n          }\r\n        }\r\n        while (overlapX === true && overlapY === true) {\r\n          fruitPos.x = Math.floor(Math.random() * cols);\r\n          fruitPos.y = Math.floor(Math.random() * rows);\r\n          let flagX = false;\r\n          let flagY = false;\r\n          for (let i = 0; i < snakeBody.x.length; i++) {\r\n            if (fruitPos.x === snakeBody.x[i]) {\r\n              flagX = true;\r\n            }\r\n            if (fruitPos.y === snakeBody.y[i]) {\r\n              flagY = true;\r\n            }\r\n          }\r\n          overlapX = flagX;\r\n          overlapY = flagY;\r\n        }\r\n      }\r\n      newX = fruitPos.x;\r\n      newY = fruitPos.y;\r\n      setFruit(true);\r\n    } else {\r\n      newX = fruitPos.x;\r\n      newY = fruitPos.y;\r\n    }\r\n    ctx.fillStyle = \"#00FF00\";\r\n    ctx.fillRect(\r\n      newX * blockWidth,\r\n      newY * blockHeight,\r\n      blockWidth,\r\n      blockHeight,\r\n    );\r\n  };\r\n\r\n  const drawSnakeHead = (ctx, blockWidth, blockHeight) => {\r\n    let step = 1;\r\n    let newX, newY;\r\n    if (!initialPos) {\r\n      newX = 10 * blockWidth;\r\n      newY = 10 * blockHeight;\r\n      setInitialPos(true);\r\n      snakeHeadPos.x = 10;\r\n      snakeHeadPos.y = 10;\r\n    } else {\r\n      switch (snakeHeadPos.direction) {\r\n        case \"right\":\r\n          newX = snakeHeadPos.x + step;\r\n          newY = snakeHeadPos.y;\r\n          snakeHeadPos.x = snakeHeadPos.x + step;\r\n          break;\r\n        case \"left\":\r\n          newX = snakeHeadPos.x - step;\r\n          newY = snakeHeadPos.y;\r\n          snakeHeadPos.x = snakeHeadPos.x - step;\r\n          break;\r\n        case \"up\":\r\n          newX = snakeHeadPos.x;\r\n          newY = snakeHeadPos.y - step;\r\n          snakeHeadPos.y = snakeHeadPos.y - step;\r\n          break;\r\n        case \"down\":\r\n          newX = snakeHeadPos.x;\r\n          newY = snakeHeadPos.y + step;\r\n          snakeHeadPos.y = snakeHeadPos.y + step;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    setPreviousDir(snakeHeadPos.direction);\r\n    if (snakeBody.x[2] !== undefined) {\r\n      for (let i = 2; i < snakeBody.x.length; i++) {\r\n        if (\r\n          snakeBody.x[i] === snakeHeadPos.x &&\r\n          snakeBody.y[i] === snakeHeadPos.y\r\n        ) {\r\n          setGameState(\"End\");\r\n        }\r\n      }\r\n    }\r\n    if (\r\n      snakeHeadPos.x >= rows ||\r\n      snakeHeadPos.x < 0 ||\r\n      snakeHeadPos.y < 0 ||\r\n      snakeHeadPos.y >= cols\r\n    ) {\r\n      setGameState(\"End\");\r\n    } else if (fruitPos.x === snakeHeadPos.x && fruitPos.y === snakeHeadPos.y) {\r\n      setFruit(false);\r\n      setScore(score + 1);\r\n      snakeBody.x.unshift(snakeHeadPos.x);\r\n      snakeBody.y.unshift(snakeHeadPos.y);\r\n    }\r\n    ctx.fillStyle = \"#00FFFF\";\r\n    ctx.fillRect(\r\n      newX * blockWidth,\r\n      newY * blockHeight,\r\n      blockWidth,\r\n      blockHeight,\r\n    );\r\n  };\r\n\r\n  const drawSnakeBody = (ctx, blockWidth, blockHeight) => {\r\n    for (let i = 0; i < snakeBody.x.length; i++) {\r\n      ctx.fillStyle = \"#00FFFF\";\r\n      ctx.fillRect(\r\n        snakeBody.x[i] * blockWidth,\r\n        snakeBody.y[i] * blockHeight,\r\n        blockWidth,\r\n        blockHeight,\r\n      );\r\n    }\r\n    snakeBody.x.unshift(snakeHeadPos.x);\r\n    snakeBody.y.unshift(snakeHeadPos.y);\r\n    snakeBody.x.pop();\r\n    snakeBody.y.pop();\r\n  };\r\n\r\n  const endGame = (ctx, blockWidth, blockHeight) => {\r\n    drawBoard(ctx, blockWidth, blockHeight);\r\n    ctx.fillStyle = \"#FF0000\";\r\n    ctx.font = \"20px monospace\"; //I hate this\r\n    ctx.fillText(\"Game Over\", 5 * blockWidth, 17 * blockHeight, 500);\r\n  };\r\n  const pauseGame = (ctx, blockWidth, blockHeight) => {\r\n    drawBoard(ctx, blockWidth, blockHeight);\r\n    ctx.fillStyle = \"#FF0000\";\r\n    ctx.font = \"20px monospace\"; //I hate this\r\n    ctx.fillText(\"Paused\", 8 * blockWidth, 17 * blockHeight, 500);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n    let blockWidth = context.canvas.width / cols;\r\n    let blockHeight = context.canvas.height / rows;\r\n    let animationFrameId;\r\n    if (gameState === \"Play\") {\r\n      drawBoard(context, context.canvas.width, context.canvas.height);\r\n      handleCanvasBorders(context, context.canvas.width, context.canvas.height);\r\n      drawFruit(context, blockWidth, blockHeight);\r\n      drawSnakeHead(context, blockWidth, blockHeight);\r\n      drawSnakeBody(context, blockWidth, blockHeight);\r\n      setTimeout(() => {\r\n        setFrameCount(frameCount + 1);\r\n      }, [1000 / (score / 2 + frequency)]);\r\n    } else if (gameState === \"Pause\") {\r\n      pauseGame(context, blockWidth, blockHeight);\r\n    } else if (gameState === \"End\") {\r\n      drawBoard(context, context.canvas.width, context.canvas.height);\r\n      endGame(context, blockWidth, blockHeight);\r\n    } else if (gameState === \"Restart\") {\r\n      setGameState(\"Play\");\r\n      setFrameCount(1);\r\n      setFruit(false);\r\n      setInitialPos(false);\r\n      setScore(0);\r\n      setSnakeBody({ x: [], y: [] });\r\n    }\r\n    scoreboard.time = Math.floor(frameCount / (score / 2 + frequency));\r\n    scoreboard.score = score;\r\n    scoreboard.gameState = gameState;\r\n    updateScoreboard(scoreboard);\r\n    const render = () => {\r\n      animationFrameId = window.requestAnimationFrame(render);\r\n    };\r\n    render();\r\n    return () => {\r\n      window.cancelAnimationFrame(animationFrameId);\r\n    };\r\n  }, [frameCount, gameState]);\r\n\r\n  return <canvas height=\"150\" width=\"150\" ref={canvasRef} \r\n  style={{ transform: `scale(${canvasZoom})` }}\r\n  onTouchStart={(e) => e.preventDefault()}\r\n  onTouchMove={(e) => e.preventDefault()}\r\n  onTouchEnd={(e) => e.preventDefault()}\r\n  onTouchCancel={(e) => e.preventDefault()}></canvas>;\r\n};\r\nexport default Snake;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { handleCanvasBorders } from \"../../Handlers/handleCanvasBorders.js\";\r\nimport Maps from \"./Maps.json\";\r\n\r\nconst frequency = 60; //Hertz\r\nconst frameRate = 1000 / frequency; // frames / milisecond\r\nconst rows = 150;\r\nconst cols = 300;\r\nconst blockSize = 10;\r\nconst defaultInvaderOne = {\r\n    id: 1,\r\n    x: 10,\r\n    y: 10,\r\n    row: 0,\r\n    life: 1,\r\n    currSprite: 1,\r\n    totalSprites: 2,\r\n    w: 10,\r\n    h: 10,\r\n    hit: false,\r\n    color: \"green\",\r\n    sprites: {\r\n        1: [\r\n            [0, 0, 0, 1, 1, 1, 1, 0, 0, 0],\r\n            [0, 0, 1, 1, 1, 1, 1, 1, 0, 0],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 0, 0, 1, 1, 0, 0, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [0, 1, 1, 0, 1, 1, 0, 1, 1, 0],\r\n            [1, 1, 0, 0, 1, 1, 0, 0, 1, 1],\r\n            [1, 0, 0, 0, 0, 0, 0, 0, 0, 1],\r\n        ],\r\n        2: [\r\n            [0, 0, 0, 1, 1, 1, 1, 0, 0, 0],\r\n            [0, 0, 1, 1, 1, 1, 1, 1, 0, 0],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 0, 0, 1, 1, 0, 0, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [0, 0, 1, 0, 1, 1, 0, 1, 0, 0],\r\n            [0, 1, 1, 0, 1, 1, 0, 1, 1, 0],\r\n            [0, 1, 0, 0, 0, 0, 0, 0, 1, 1],\r\n        ]\r\n    }\r\n}\r\nconst defaultInvaderTwo = {\r\n    id: 2,\r\n    x: 10,\r\n    y: 10,\r\n    row: 0,\r\n    life: 2,\r\n    hit: false,\r\n    currSprite: 1,\r\n    totalSprites: 2,\r\n    w: 10,\r\n    h: 10,\r\n    color: \"red\",\r\n    sprites: {\r\n        1: [\r\n            [0, 1, 0, 0, 0, 0, 0, 0, 1, 0],\r\n            [0, 1, 1, 0, 0, 0, 0, 1, 1, 0],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 0, 1, 1, 1, 1, 0, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [1, 1, 1, 1, 0, 0, 1, 1, 1, 1],\r\n            [1, 1, 0, 0, 0, 0, 0, 0, 1, 1],\r\n            [0, 1, 1, 0, 0, 0, 0, 1, 1, 0],\r\n            [0, 0, 1, 1, 0, 0, 1, 1, 0, 0],\r\n        ],\r\n        2: [\r\n            [0, 0, 1, 0, 0, 0, 0, 1, 0, 0],\r\n            [0, 1, 1, 0, 0, 0, 0, 1, 1, 0],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 0, 1, 1, 1, 1, 0, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [1, 1, 1, 1, 0, 0, 1, 1, 1, 1],\r\n            [1, 1, 0, 0, 0, 0, 0, 0, 1, 1],\r\n            [1, 1, 0, 0, 0, 0, 0, 0, 1, 1],\r\n            [0, 1, 1, 1, 0, 0, 1, 1, 1, 0],\r\n        ]\r\n    }\r\n}\r\nconst defaultInvaderThree = {\r\n    id: 3,\r\n    x: 10,\r\n    y: 10,\r\n    row: 0,\r\n    life: 3,\r\n    hit: false,\r\n    currSprite: 1,\r\n    totalSprites: 2,\r\n    w: 10,\r\n    h: 10,\r\n    color: \"cyan\",\r\n    sprites: {\r\n        1: [\r\n            [0, 1, 1, 0, 0, 0, 0, 1, 1, 0],\r\n            [0, 0, 1, 0, 0, 0, 0, 1, 0, 0],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [1, 1, 0, 1, 1, 1, 1, 0, 1, 1],\r\n            [1, 1, 0, 0, 1, 1, 0, 0, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 0, 1, 1, 1, 1, 1, 1, 0, 1],\r\n            [1, 0, 1, 0, 1, 1, 0, 1, 0, 1],\r\n            [1, 0, 0, 0, 0, 0, 0, 0, 0, 1],\r\n        ],\r\n        2: [\r\n            [0, 0, 1, 0, 0, 0, 0, 1, 0, 0],\r\n            [0, 0, 1, 0, 0, 0, 0, 1, 0, 0],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [1, 1, 0, 1, 1, 1, 1, 0, 1, 1],\r\n            [1, 1, 0, 0, 1, 1, 0, 0, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 0, 1, 1, 1, 1, 1, 1, 0, 1],\r\n            [1, 0, 1, 0, 1, 1, 0, 1, 0, 1],\r\n            [1, 1, 0, 0, 0, 0, 0, 0, 1, 1],\r\n        ]\r\n    }\r\n}\r\nconst defaultBonusInvader = {\r\n    id: 8,\r\n    x: 10,\r\n    y: 10,\r\n    life: 1,\r\n    hit: false,\r\n    currSprite: 1,\r\n    totalSprites: 2,\r\n    w: 20,\r\n    h: 10,\r\n    color: \"magenta\",\r\n    sprites: {\r\n        1: [\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0],\r\n            [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0],\r\n            [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0],\r\n        ],\r\n        2: [\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0],\r\n            [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0],\r\n            [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0],\r\n\r\n        ]\r\n    }\r\n}\r\nconst defaultPlayer = {\r\n    id: 10,\r\n    x: 10,\r\n    y: 130,\r\n    speed: 2,\r\n    move: \"none\",\r\n    shooting: false,\r\n    cooling: 0,\r\n    currSprite: 1,\r\n    w: 10,\r\n    h: 10,\r\n    color: \"white\",\r\n    cooldown: 250, //milliseconds\r\n    sprites: {\r\n        1: [\r\n            [0, 0, 0, 0, 1, 1, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 1, 1, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 1, 1, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 1, 1, 0, 0, 0, 0],\r\n            [0, 0, 0, 1, 1, 1, 1, 0, 0, 0],\r\n            [0, 1, 0, 1, 1, 1, 1, 0, 1, 0],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\r\n        ]\r\n    },\r\n}\r\nconst defaultBlock = {\r\n    id: 9,\r\n    x: 10,\r\n    y: 10,\r\n    currSprite: 1,\r\n    w: 10,\r\n    h: 10,\r\n    color: \"gray\",\r\n    sprites: {\r\n        1: [\r\n            [0, 0, 0, 1, 1, 1, 1, 0, 0, 0],\r\n            [0, 0, 1, 1, 1, 1, 1, 1, 0, 0],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [0, 0, 1, 1, 1, 1, 1, 1, 0, 0],\r\n            [0, 0, 0, 1, 1, 1, 1, 0, 0, 0],\r\n        ]\r\n    },\r\n}\r\nconst defaultPlayerBullet = {\r\n    id: \"player\",\r\n    x: 10,\r\n    y: 10,\r\n    h: 9,\r\n    w: 2,\r\n    speed: 5,\r\n    color: \"white\",\r\n    currSprite: 1,\r\n    totalSprites: 2,\r\n    sprites: {\r\n        1: [\r\n            [1, 1],\r\n            [1, 0],\r\n            [1, 1],\r\n            [0, 1],\r\n            [1, 1],\r\n            [1, 0],\r\n            [1, 1],\r\n            [0, 1],\r\n            [1, 1],\r\n        ],\r\n        2: [\r\n            [1, 1],\r\n            [0, 1],\r\n            [1, 1],\r\n            [1, 0],\r\n            [1, 1],\r\n            [0, 1],\r\n            [1, 1],\r\n            [1, 0],\r\n            [1, 1],\r\n        ]\r\n    }\r\n}\r\nconst defaultInvaderBullet = {\r\n    id: \"invader\",\r\n    x: 10,\r\n    y: 10,\r\n    currSprite: 1,\r\n    totalSprites: 1,\r\n    w: 2,\r\n    h: 9,\r\n    speed: 2,\r\n    color: \"yellow\",\r\n    sprites: {\r\n        1: [\r\n            [1, 1],\r\n            [1, 1],\r\n            [1, 1],\r\n            [1, 1],\r\n            [1, 1],\r\n            [1, 1],\r\n            [1, 1],\r\n            [1, 1],\r\n        ]\r\n    },\r\n}\r\n\r\nexport default function SpaceInvaders({ controls, updateScoreboard, isSelected, gameState, setGameState, canvasZoom }) {\r\n\r\n    const canvasRef = useRef(null);\r\n    const [score, setScore] = useState(0);\r\n    const [lives, setLives] = useState(3);\r\n    const [level, setLevel] = useState(1);\r\n    const [frameCount, setFrameCount] = useState(0);\r\n    const [enemies, setEnemies] = useState(0);\r\n    const [enemyMoveParam, setEnemyMoveParam] = useState({\r\n        index: 0,\r\n        rows: [],\r\n    });\r\n    const [entities, setEntities] = useState([]);\r\n    const [bullets, setBullets] = useState([]);\r\n    const [explosions, setExplosions] = useState([]);\r\n    const explosionLifetime = 500;\r\n    //let entities = [];\r\n    //let bullets = [];\r\n    let [player, setPlayer] = useState(Object.create(defaultPlayer));\r\n    const scoreboard = { time: 0, score: 0, gameState: \"Start\" };\r\n    const invaderSpeed = 1;\r\n\r\n    //Game state\r\n    useEffect(() => {\r\n        if (controls.pause) {\r\n            switch (gameState) {\r\n                case \"Play\":\r\n                    setGameState(\"Pause\");\r\n                    break;\r\n                case \"Pause\":\r\n                    setGameState(\"Play\");\r\n                    break;\r\n                case \"Win\":\r\n                case \"End\":\r\n                case \"Start\":\r\n                    setGameState(\"Restart\");\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }, [controls]);\r\n    //Player controls\r\n    useEffect(() => {\r\n        if (gameState === \"Play\") {\r\n            if (\r\n                controls.left &&\r\n                !controls.right &&\r\n                player.x + player.w > player.w\r\n            ) {\r\n                player.x = player.x - player.speed;\r\n            } else if (\r\n                controls.right &&\r\n                !controls.left &&\r\n                player.x + player.w < cols\r\n            ) {\r\n                player.x = player.x + player.speed;\r\n            } else if (controls.left && controls.right\r\n            ) {\r\n                player.move = \"none\";\r\n            } else if (!controls.left && !controls.right) {\r\n                player.move = \"none\";\r\n            }\r\n            if (controls.up || controls.one\r\n            ) {\r\n                if (player.cooling === 0) {\r\n                    player.shooting = true;\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [controls, frameCount]);\r\n\r\n\r\n    //Drawing functions\r\n    const clearDraws = (ctx) => {\r\n        ctx.fillStyle = \"black\";\r\n        ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n    };\r\n    const drawSprite = (ctx, object) => {\r\n        if (object.hit === true) {\r\n            ctx.fillStyle = \"white\";\r\n        } else {\r\n            ctx.fillStyle = object.color;\r\n        }\r\n        for (let i = 0; i < object.sprites[object.currSprite].length; i++) {\r\n            for (let j = 0; j < object.sprites[object.currSprite][i].length; j++) {\r\n                if (object.sprites[object.currSprite][i][j] === 1) {\r\n                    ctx.fillRect(object.x + j, object.y + i, 1, 1);\r\n                }\r\n            }\r\n        }\r\n        if (object.sprites.length > 1) {\r\n            if (object.currSprite < object.sprites.length - 1) {\r\n                object.currSprite++;\r\n            } else {\r\n                object.currSprite = 1;\r\n            }\r\n        }\r\n    }\r\n    const drawExplosions = (ctx) => {\r\n        let redshift = 0;\r\n        let greenshift = 0;\r\n        let blueshift = 0;\r\n        if (explosions.length > 0) {\r\n            for (let i = 0; i < explosions.length; i++) {\r\n                if (explosions[i].decay <= explosionLifetime / 3) {\r\n                    redshift = Math.floor((explosions[i].decay) * 255 / (explosionLifetime / 3));\r\n                } else if (explosions[i].decay <= explosionLifetime * 2 / 3) {\r\n                    redshift = 255;\r\n                    greenshift = Math.floor((explosions[i].decay - explosionLifetime / 3) * 255 / (explosionLifetime / 3));\r\n                } else {\r\n                    redshift = 255;\r\n                    greenshift = 255;\r\n                    blueshift = Math.floor((explosions[i].decay - explosionLifetime * 2 / 3) * 255 / (explosionLifetime / 3));\r\n                }\r\n                ctx.fillStyle = \"rgb(\" + redshift + \",\" + greenshift + \",\" + blueshift + \")\";\r\n                let spread = 2 * explosions[i].decay / (explosionLifetime + explosions[i].decay);\r\n                let radius = explosions[i].w / 2 * spread - 10;\r\n                ctx.fillRect(explosions[i].x + radius * 2 / 3, explosions[i].y + radius * 2 / 3, 2, 2);\r\n                ctx.fillRect(explosions[i].x - radius * 2 / 3, explosions[i].y + radius * 2 / 3, 2, 2);\r\n                ctx.fillRect(explosions[i].x + radius * 2 / 3, explosions[i].y - radius * 2 / 3, 2, 2);\r\n                ctx.fillRect(explosions[i].x - radius * 2 / 3, explosions[i].y - radius * 2 / 3, 2, 2);\r\n                ctx.fillRect(explosions[i].x + radius, explosions[i].y, 2, 2);\r\n                ctx.fillRect(explosions[i].x - radius, explosions[i].y, 2, 2);\r\n                ctx.fillRect(explosions[i].x, explosions[i].y + radius, 2, 2);\r\n                ctx.fillRect(explosions[i].x, explosions[i].y - radius, 2, 2);\r\n            }\r\n\r\n        }\r\n    }\r\n    const drawGameOver = (ctx, blockWidth, blockHeight) => {\r\n        ctx.fillStyle = \"red\";\r\n        ctx.font = \"40px monospace\"; //change this nonsense static font size\r\n        ctx.fillText(\"Game Over\", 5 * blockWidth, 8 * blockHeight, 500);\r\n    };\r\n    const drawPauseGame = (ctx, blockWidth, blockHeight) => {\r\n        ctx.fillStyle = \"red\";\r\n        ctx.font = \"40px monospace\"; //and this\r\n        ctx.fillText(\"Paused\", 8 * blockWidth, 8 * blockHeight, 500);\r\n    };\r\n    const drawWinGame = (ctx, blockWidth, blockHeight) => {\r\n        clearDraws(ctx);\r\n        ctx.fillStyle = \"red\";\r\n        ctx.font = \"40px monospace\";\r\n        ctx.fillText(\"You Win\", 7 * blockWidth, 8 * blockHeight, 500);\r\n    };\r\n    const drawBottomText = (ctx, blockWidth, blockHeight) => {\r\n        ctx.fillStyle = \"red\";\r\n        ctx.font = \"10px monospace\";\r\n        ctx.fillText(\"LIFE:\" + lives, blockWidth / 2, rows - blockHeight / 4, 500);\r\n    }\r\n    const drawObjects = (context) => {\r\n        for (let i = 0; i < entities.length; i++) {\r\n            drawSprite(context, entities[i]);\r\n        }\r\n        for (let i = 0; i < bullets.length; i++) {\r\n            drawSprite(context, bullets[i]);\r\n        }\r\n        drawSprite(context, player);\r\n        drawExplosions(context);\r\n    }\r\n    //Game functions\r\n    const setUpLevel = () => {\r\n        let currEntity = {};\r\n        let newEntities = [];\r\n        let newEnemyMoveParam = { index: 0, rows: [] };\r\n        for (let i = 0; i < Maps[level].Matrix.length; i++) {\r\n            for (let j = 0; j < Maps[level].Matrix[i].length; j++) {\r\n                switch (Maps[level].Matrix[i][j]) {\r\n                    case 1:\r\n                        currEntity = Object.create(defaultInvaderOne);\r\n                        currEntity.x = j * blockSize * 1.2;\r\n                        currEntity.y = 15 + i * blockSize * 1.2;\r\n                        currEntity.row = i;\r\n                        newEntities.push(currEntity);\r\n                        if (newEnemyMoveParam.rows[i] === undefined) {\r\n                            newEnemyMoveParam.rows.push(\"right\");\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        currEntity = Object.create(defaultInvaderTwo);\r\n                        currEntity.x = j * blockSize * 1.2;\r\n                        currEntity.y = 15 + i * blockSize * 1.2;\r\n                        currEntity.row = i;\r\n                        newEntities.push(currEntity);\r\n                        if (newEnemyMoveParam.rows[i] === undefined) {\r\n                            newEnemyMoveParam.rows.push(\"right\");\r\n                        }\r\n                        break;\r\n                    case 3:\r\n                        currEntity = Object.create(defaultInvaderThree);\r\n                        currEntity.x = j * blockSize * 1.2;\r\n                        currEntity.y = 15 + i * blockSize * 1.2;\r\n                        currEntity.row = i;\r\n                        newEntities.push(currEntity);\r\n                        if (newEnemyMoveParam.rows[i] === undefined) {\r\n                            newEnemyMoveParam.rows.push(\"right\");\r\n                        }\r\n                        break;\r\n                    case 9:\r\n                        currEntity = Object.create(defaultBlock);\r\n                        currEntity.x = j * blockSize * 1.2;\r\n                        currEntity.y = 5 + i * blockSize * 1.2;\r\n                        newEntities.push(currEntity);\r\n                        break;\r\n                    case 0:\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        setEnemies(Maps[level].Enemies);\r\n        setEntities(newEntities);\r\n        setEnemyMoveParam(newEnemyMoveParam);\r\n    }\r\n    /*const playerMove = () => {\r\n        if (player.move === \"left\" &&\r\n            player.x + player.w > player.w) {\r\n            player.x = player.x - player.speed;\r\n        } else if (player.move === \"right\" &&\r\n            player.x + player.w < cols) {\r\n            player.x = player.x + player.speed;\r\n        }\r\n    }*/\r\n    const invaderMove = () => {\r\n        if (enemyMoveParam.index >= enemies) {\r\n            enemyMoveParam.index = 0;\r\n        }\r\n        switch (enemyMoveParam.rows[entities[enemyMoveParam.index].row]) {\r\n            case \"left\":\r\n                if (entities[enemyMoveParam.index].x > 2) {\r\n                    entities[enemyMoveParam.index].x = entities[enemyMoveParam.index].x - invaderSpeed;\r\n                }\r\n                else {\r\n                    enemyMoveParam.rows[entities[enemyMoveParam.index].row] = \"right\";\r\n                    entities[enemyMoveParam.index].x = entities[enemyMoveParam.index].x + invaderSpeed;\r\n                }\r\n                break;\r\n            case \"right\":\r\n                if (entities[enemyMoveParam.index].x + entities[enemyMoveParam.index].w < cols - 1) {\r\n                    entities[enemyMoveParam.index].x = entities[enemyMoveParam.index].x + invaderSpeed;\r\n                }\r\n                else {\r\n                    enemyMoveParam.rows[entities[enemyMoveParam.index].row] = \"left\";\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (entities[enemyMoveParam.index].currSprite < entities[enemyMoveParam.index].totalSprites) {\r\n            entities[enemyMoveParam.index].currSprite = entities[enemyMoveParam.index].currSprite + 1;\r\n        } else {\r\n            entities[enemyMoveParam.index].currSprite = 1;\r\n        }\r\n        enemyMoveParam.index++;\r\n        //console.log(entities[enemyMoveParam.index].sprites.length);\r\n        for (let i = 0; i < entities.length; i++) {\r\n            if (entities[i].id === 8) {\r\n                if (entities[i].x + entities[i].w > 0 && entities[i].x < cols) {\r\n                    entities[i].x = entities[i].x + entities[i].speed;\r\n                    if (entities[i].currSprite < entities[i].totalSprites) {\r\n                        entities[i].currSprite = entities[i].currSprite + 1;\r\n                    } else {\r\n                        entities[i].currSprite = 1;\r\n                    }\r\n                } else {\r\n                    entities.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n        setEntities(entities);\r\n        setEnemyMoveParam(enemyMoveParam);\r\n    }\r\n    const spawnBonusInvader = () => {\r\n        let newEntity = Object.create(defaultBonusInvader);\r\n        let side = Math.random();\r\n        if (side > 0.5) {\r\n            newEntity.x = 0;\r\n            newEntity.speed = invaderSpeed;\r\n        } else {\r\n            newEntity.x = cols - newEntity.w;\r\n            newEntity.speed = -invaderSpeed;\r\n        }\r\n        newEntity.y = 2;\r\n        entities.push(newEntity);\r\n        setEntities(entities);\r\n    }\r\n    const createExplosion = (target) => {\r\n        let newExplosion = {\r\n            x: target.x + target.w / 2 - 1,\r\n            y: target.y + target.h / 2 - 1,\r\n            w: target.w,\r\n            h: target.h,\r\n            decay: explosionLifetime\r\n        }\r\n        explosions.push(newExplosion);\r\n        setExplosions(explosions);\r\n    }\r\n    const playerShooting = () => {\r\n        let newBullet = {};\r\n        if (player.shooting === true &&\r\n            player.cooling === 0) {\r\n            newBullet = Object.create(defaultPlayerBullet);\r\n            newBullet.x = player.x - 1 + player.w / 2;\r\n            newBullet.y = player.y;\r\n            bullets.push(newBullet);\r\n            player.cooling = player.cooldown;\r\n            setTimeout(() => {\r\n                player.cooling = 0;\r\n            }, [player.cooldown]);\r\n            setBullets(bullets);\r\n            player.shooting = false;\r\n        }\r\n    }\r\n    const invaderShooting = () => {\r\n        let newBullet = {};\r\n        let chance = Math.random();\r\n        let invaderShooter = Math.floor(Math.random() * enemies);\r\n        if (chance > 0.95) {\r\n            newBullet = Object.create(defaultInvaderBullet);\r\n            newBullet.x = entities[invaderShooter].x + player.w / 2;\r\n            newBullet.y = entities[invaderShooter].y;\r\n            bullets.push(newBullet);\r\n            setBullets(bullets);\r\n        }\r\n    }\r\n    const playerHit = () => {\r\n        if (lives - 1 >= 0) {\r\n            setLives(lives - 1);\r\n            createExplosion(player);\r\n        } else {\r\n            setGameState(\"End\");\r\n        }\r\n    }\r\n    const invaderHit = (invaderIndex) => {\r\n        if (entities[invaderIndex].life - 1 > 0) {\r\n            entities[invaderIndex].life = entities[invaderIndex].life - 1;\r\n            entities[invaderIndex].hit = true;\r\n            setScore(score + 5);\r\n            setTimeout(() => {\r\n                entities[invaderIndex].hit = false;\r\n            }, [player.cooldown / 2]);\r\n        } else {\r\n            createExplosion(entities[invaderIndex]);\r\n            if (entities[invaderIndex].id !== 8) {\r\n                setEnemies(enemies - 1);\r\n                setScore(score + 10);\r\n            } else {\r\n                setScore(score + 150);\r\n            }\r\n            entities.splice(invaderIndex, 1);\r\n        }\r\n        setEntities(entities);\r\n    }\r\n    const blockHit = (blockIndex) => {\r\n        createExplosion(entities[blockIndex]);\r\n        //entities.splice(blockIndex, 1);\r\n        //setEntities(entities);\r\n    }\r\n    const checkColisions = (bulletIndex) => {\r\n        let colision = false;\r\n        for (let i = 0; i < entities.length; i++) {\r\n            if (bullets[bulletIndex].id === \"player\") {\r\n                if (bullets[bulletIndex].x > entities[i].x &&\r\n                    bullets[bulletIndex].x < entities[i].x + entities[i].w &&\r\n                    bullets[bulletIndex].y > entities[i].y &&\r\n                    bullets[bulletIndex].y < entities[i].y + entities[i].h) {\r\n                    colision = true;\r\n                    if (entities[i].id === 9) {\r\n                        blockHit(i);\r\n                    } else {\r\n                        invaderHit(i);\r\n                    }\r\n                }\r\n            } else {\r\n                if (bullets[bulletIndex].x > player.x &&\r\n                    bullets[bulletIndex].x < player.x + player.w &&\r\n                    bullets[bulletIndex].y > player.y - player.h &&\r\n                    bullets[bulletIndex].y < player.y) {\r\n                    colision = true;\r\n                    playerHit();\r\n                } else if (bullets[bulletIndex].x > entities[i].x &&\r\n                    bullets[bulletIndex].x < entities[i].x + entities[i].w &&\r\n                    bullets[bulletIndex].y > entities[i].y - entities[i].h &&\r\n                    bullets[bulletIndex].y < entities[i].y &&\r\n                    entities[i].id === 9) {\r\n                    colision = true;\r\n                    blockHit(i);\r\n                }\r\n            }\r\n        }\r\n        return colision;\r\n    }\r\n    const handleBullets = () => {\r\n        let newArray = [];\r\n        if (bullets.length > 0) {\r\n            //console.log(bullets);\r\n            for (let i = 0; i < bullets.length; i++) {\r\n                if (!checkColisions(i)) {\r\n                    if (bullets[i].id === \"player\") {\r\n                        if (bullets[i].y > 0) {\r\n                            bullets[i].y -= bullets[i].speed;\r\n                            if (bullets[i].currSprite < bullets[i].totalSprites) {\r\n                                bullets[i].currSprite = bullets[i].currSprite + 1;\r\n                            } else {\r\n                                bullets[i].currSprite = 1;\r\n                            }\r\n                            newArray.push(bullets[i]);\r\n                        }\r\n                    } else {\r\n                        if (bullets[i].y < rows) {\r\n                            bullets[i].y += bullets[i].speed;\r\n                            newArray.push(bullets[i]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            setBullets(newArray);\r\n        }\r\n    }\r\n    const handleExplosions = () => {\r\n        if (explosions.length > 0) {\r\n            for (let i = 0; i < explosions.length; i++) {\r\n                if (explosions[i].decay - frameRate > 0) {\r\n                    explosions[i].decay = explosions[i].decay - frameRate;\r\n                } else {\r\n                    explosions.splice(i, 1);\r\n                }\r\n            }\r\n            setExplosions(explosions);\r\n        }\r\n    }\r\n    const handleEvents = () => {\r\n        if ((frameCount * frameRate) % (1200 * frameRate) === 0) {\r\n            spawnBonusInvader();\r\n        }\r\n        playerShooting();\r\n        invaderShooting();\r\n        handleBullets();\r\n        handleExplosions();\r\n        //playerMove();\r\n        invaderMove();\r\n    }\r\n\r\n    //Game Loop\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const context = canvas.getContext(\"2d\");\r\n        let animationFrameId;\r\n        switch (gameState) {\r\n            case \"Play\":\r\n                if (lives >= 0 && enemies > 0) {\r\n                    clearDraws(context);\r\n                    handleCanvasBorders(context, context.canvas.width, context.canvas.height);\r\n                    handleEvents();\r\n                    drawObjects(context);\r\n                    drawBottomText(context, blockSize, blockSize);\r\n                    setTimeout(() => {\r\n                        setFrameCount(frameCount + 1);\r\n                    }, [frameRate]);\r\n                }\r\n                else if (lives < 0) {\r\n                    setGameState(\"End\");\r\n                }\r\n                else if (enemies === 0) {\r\n                    setGameState(\"Win\");\r\n                }\r\n                break;\r\n            case \"Pause\":\r\n                drawPauseGame(context, blockSize, blockSize);\r\n                break;\r\n            case \"Win\":\r\n                drawWinGame(context, blockSize, blockSize);\r\n                break;\r\n            case \"End\":\r\n                drawGameOver(context, blockSize, blockSize);\r\n                break;\r\n            case \"Start\":\r\n                //setUpLevel();\r\n                break;\r\n            case \"Restart\":\r\n                setLevel(1);\r\n                setScore(0);\r\n                setLives(3);\r\n                setExplosions([]);\r\n                setBullets([]);\r\n                setUpLevel();\r\n                setPlayer(Object.create(defaultPlayer));\r\n                setFrameCount(1);\r\n                setGameState(\"Play\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        scoreboard.time = Math.floor(frameCount / frequency);\r\n        scoreboard.score = score;\r\n        scoreboard.gameState = gameState;\r\n        updateScoreboard(scoreboard);\r\n        const render = () => {\r\n            animationFrameId = window.requestAnimationFrame(render);\r\n        };\r\n        render();\r\n        return () => {\r\n            window.cancelAnimationFrame(animationFrameId);\r\n        };\r\n    }, [gameState, frameCount]);\r\n\r\n    return <canvas ref={canvasRef} width={300} height={150}\r\n        style={{ transform: `scale(${canvasZoom})` }}\r\n        onTouchStart={(e) => e.preventDefault()}\r\n        onTouchMove={(e) => e.preventDefault()}\r\n        onTouchEnd={(e) => e.preventDefault()}\r\n        onTouchCancel={(e) => e.preventDefault()}\r\n        ></canvas>;\r\n}","export const handleAction = (action, setAction, appDialog, setAppDialog, args) =>{\r\n    switch (action) {\r\n        case \"Keybinds\":\r\n            args.setShowKeybindDialog(!args.showKeybindDialog);\r\n            setAction(false);\r\n            break;\r\n        case \"Play / Pause\":\r\n            if(args.gameState === \"Play\"){\r\n                args.setGameState(\"Pause\");\r\n            }else if(args.gameState === \"Pause\"){\r\n                args.setGameState(\"Play\");\r\n            }\r\n            setAction(false);\r\n            break;\r\n        case \"New\":\r\n            args.setGameState(\"Restart\");\r\n            setAction(false);\r\n            break;\r\n        case \"scoreboard\":\r\n            args.setShowScoreboard(!args.showScoreboard);\r\n            setAction(false);\r\n            break;\r\n        case \"touchscreenControls\":{\r\n            args.setShowControls(!args.showControls);\r\n            setAction(false);\r\n            break;\r\n        }\r\n        case false:\r\n            break;\r\n        default:\r\n            setAction(false);\r\n            break;\r\n    }\r\n}","export const handleTopMenu = (appMenu, setAppMenu, args) => {\r\n    //Default App Menu  \r\n    const defaultAppMenu = {\r\n        \"Game\": {\r\n            \"New Game\": {\r\n                \"action\": \"New\",\r\n                \"keybind\": \"Alt+N\",\r\n                \"disabled\": true\r\n            },\r\n            \"Play / Pause\": {\r\n                \"action\": \"Play / Pause\",\r\n                \"keybind\": \"P\",\r\n                \"disabled\": true\r\n            },\r\n            \"LineBreak1\":{},\r\n            \"Keybinds\": {\r\n                \"action\": \"Keybinds\",\r\n                \"disabled\": false\r\n            },\r\n            \"LineBreak2\":{},\r\n            \"Close\": {\r\n                \"action\": \"Close\",\r\n                \"keybind\": \"Alt+Shift+F4\",\r\n                \"disabled\": false\r\n            }\r\n        },\r\n        \"View\": {\r\n            \"Scoreboard\": {\r\n                \"action\": \"scoreboard\",\r\n                \"checkbox\": true,\r\n                \"disabled\": false\r\n            },\r\n            \"Touchscreen Controls\": {\r\n                \"action\": \"touchscreenControls\",\r\n                \"checkbox\": true,\r\n                \"disabled\": false\r\n            }\r\n        },\r\n        \"Help\": {\r\n            \"Help\": {\r\n                \"action\": \"help\",\r\n                \"keybind\": \"F1\",\r\n                \"disabled\": true,\r\n                \"title\": \"Not Implemented\"\r\n            },\r\n            \"About\": {\r\n                \"action\": \"about\",\r\n                \"disabled\": true,\r\n                \"title\": \"Not Implemented\"\r\n            }\r\n        }\r\n    }\r\n    if (appMenu === null) {\r\n        setAppMenu(defaultAppMenu);\r\n    }\r\n    else {\r\n        let updatedAppMenu = { \r\n            ...appMenu,\r\n                    \"Game\": {\r\n                        ...appMenu[\"Game\"],\r\n                        \"New Game\": {\r\n                            ...appMenu[\"Game\"][\"New Game\"],\r\n                            \"disabled\": !args.gameChoice\r\n                        },\r\n                        \"Play / Pause\": {\r\n                            ...appMenu[\"Game\"][\"Play / Pause\"],\r\n                            \"disabled\": !args.gameChoice\r\n                        }\r\n                    },\r\n                    \"View\": {\r\n                        ...appMenu[\"View\"],\r\n                        \"Scoreboard\": {\r\n                            ...appMenu[\"View\"][\"Scoreboard\"],\r\n                            \"checkbox\": args.showScoreboard\r\n                        },\r\n                        \"Touchscreen Controls\": {\r\n                            ...appMenu[\"View\"][\"Touchscreen Controls\"],\r\n                            \"checkbox\": args.showControls\r\n                        }\r\n                    }\r\n         };\r\n        setAppMenu(updatedAppMenu);\r\n    }\r\n}","import { useState, useEffect } from \"react\";\r\nexport const KeybindDialog = ({ showKeybindDialog, setShowKeybindDialog, setAppDialog, keyboard, setKeyboard }) => {\r\n    const [newKeybinds, setNewKeybinds] = useState(structuredClone(keyboard));\r\n    const [keybindState, setKeybindState] = useState(\"\");\r\n    const [update, setUpdate] = useState(0);\r\n    const title = \"Keybinds\";\r\n    \r\n    const addNewKeybind = (key) => {\r\n        setKeybindState(\"Press new key...\");\r\n        const keyPromise = new Promise((resolve, reject) => {\r\n            document.addEventListener(\"keydown\", (e) => resolve(e.key));\r\n            setTimeout(() => {\r\n                document.removeEventListener(\"keydown\", (e) => resolve(e.key));\r\n                reject(\"timeout\");\r\n            }, 10000);\r\n        });\r\n        keyPromise.then((value) => {\r\n            newKeybinds[key].keys[newKeybinds[key].keys.length] = value;\r\n            setNewKeybinds(newKeybinds);\r\n            setKeybindState(\"\");\r\n        }).catch((error) => {\r\n            setKeybindState(error);\r\n        });\r\n    };\r\n    const changeKeybind = (key, index) => {\r\n        setKeybindState(\"Press new key...\");\r\n        const keyPromise = new Promise((resolve, reject) => {\r\n            document.addEventListener(\"keydown\", (e) => resolve(e.key));\r\n            setTimeout(() => {\r\n                document.removeEventListener(\"keydown\", (e) => resolve(e.key));\r\n                reject(\"timeout\");\r\n            }, 10000);\r\n        });\r\n        keyPromise.then((value) => {\r\n            newKeybinds[key].keys[index] = value;\r\n            setNewKeybinds(newKeybinds);\r\n            setKeybindState(\"\");\r\n        }).catch((error) => {\r\n            setKeybindState(error);\r\n        });\r\n    };\r\n    const removeKeybind = (key, index) => {\r\n        newKeybinds[key].keys.splice(index, 1);\r\n        setNewKeybinds(newKeybinds);\r\n        setUpdate(update + 1);\r\n    };\r\n    const info =\r\n        <div>\r\n            {Object.keys(newKeybinds).map((key) => (\r\n                <div key={key} style={{ display: \"flex\", flexDirection: \"row\", width: \"100%\", marginLeft: \"5px\" }}>\r\n                    <div style={{ width: \"55px\", height:\"30px\", display: \"flex\", justifyContent: \"start\", alignItems: \"center\", textAlign: \"center\" }}><b>{key}:</b></div>\r\n                    {newKeybinds[key].keys.map((keybind, index) =>\r\n                        <button\r\n                            key={key}\r\n                            style={{ width: \"75px\", height:\"30px\", border: \"1px solid dimgray\"}}\r\n                            onContextMenu={(e) => removeKeybind(key, index)}\r\n                            onClick={() => changeKeybind(key, index)}\r\n                        >{keybind}</button>\r\n                    )}\r\n                    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                        {newKeybinds[key].keys.length < 3 &&\r\n                            <button onClick={() => addNewKeybind(key)}>+</button>}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            {keybindState}\r\n        </div>;\r\n\r\n    const actions = {\r\n        Confirm: () => {\r\n            setKeyboard(newKeybinds);\r\n            setShowKeybindDialog(false);\r\n            setAppDialog(null);\r\n        },\r\n        Reset: () => {\r\n            setNewKeybinds(keyboard);\r\n            setUpdate(update + 1);\r\n        },\r\n        Cancel: () => {\r\n            setNewKeybinds(keyboard);\r\n            setShowKeybindDialog(false);\r\n            setAppDialog(null);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (showKeybindDialog) {\r\n            setAppDialog({ title: title, info: info, actions: actions });\r\n        }\r\n    }, [showKeybindDialog, newKeybinds, keybindState, update]);\r\n    return <></>;\r\n}","import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  FaArrowLeft,\r\n  FaArrowRight,\r\n  FaArrowUp,\r\n  FaArrowDown,\r\n} from \"react-icons/fa\";\r\nimport { BsFillPlayFill, BsPauseFill, BsEjectFill, BsZoomIn, BsZoomOut } from \"react-icons/bs\";\r\nimport Controls from \"./Controls/Keyboard.js\";\r\nimport MainMenu from \"./Components/MainMenu.js\";\r\nimport Breakout from \"./Games/Breakout/Breakout.js\";\r\nimport Snake from \"./Games/Snake/Snake.js\";\r\nimport SpaceInvaders from \"./Games/Space Invaders/SpaceInvaders.js\";\r\nimport { handleAction } from \"./Handlers/handleAction.js\";\r\nimport { handleTopMenu } from \"./Handlers/handleTopMenu.js\";\r\nimport { KeybindDialog } from \"./Components/KeybindDialog.jsx\";\r\nimport \"./style.css\";\r\n\r\nexport default function Arcade({ isSelected, action, setAction, appMenu, setAppMenu, appDialog, setAppDialog, contextMenu }) {\r\n  const canvasContainer = useRef();\r\n  const [keyboard, setKeyboard] = useState({\r\n    up: { keys: [\"w\", \"W\", \"ArrowUp\"], active: true },\r\n    down: { keys: [\"s\", \"S\", \"ArrowDown\"], active: true },\r\n    left: { keys: [\"a\", \"A\", \"ArrowLeft\"], active: true },\r\n    right: { keys: [\"d\", \"D\", \"ArrowRight\"], active: true },\r\n    one: { keys: [\"1\"], active: true },\r\n    two: { keys: [\"2\"], active: true },\r\n    pause: { keys: [\"p\", \"P\", \"Pause\"], active: true },\r\n  });\r\n  const controls = Controls(isSelected, keyboard);\r\n  const [gameState, setGameState] = useState(\"Start\");\r\n  const [gameChoice, setGameChoice] = useState(\"None\");\r\n  const [canvasZoom, setCanvasZoom] = useState(1);\r\n  const [playButtonFlag, setPlayButtonFlag] = useState(true);\r\n  const [showControls, setShowControls] = useState(true);\r\n  const [showScoreboard, setShowScoreboard] = useState(true);\r\n  const [showKeybindDialog, setShowKeybindDialog] = useState(false);\r\n  const [scoreboard, setScoreboard] = useState({\r\n    time: 0,\r\n    score: 0,\r\n    gameState: \"Start\",\r\n  });\r\n  const updateScoreboard = (scoreboard) => {\r\n    setScoreboard(scoreboard);\r\n  };\r\n\r\n  const handleScreenButton = (key, state, repeat) => {\r\n    document.dispatchEvent(new KeyboardEvent(state, { key: keyboard[key].keys[0], repeat: repeat }),)\r\n  };\r\n\r\n  const handleTouchEvent = (event, target) => {\r\n    if (event.type === \"touchstart\") {\r\n      controls[target] = true;\r\n    }\r\n    else if (event.type === \"touchend\") {\r\n      controls[target] = false;\r\n    }\r\n    else if (event.type === \"touchcancel\") {\r\n      controls[target] = false;\r\n    }\r\n    else if (event.type === \"touchmove\") {\r\n      Object.values(event.touches).forEach((t) => {\r\n        let keys = [];\r\n        let pos = { x: t.clientX, y: t.clientY };\r\n        let boundingRects = {\r\n          up: document.getElementById(\"arcadeButtonUp\").getBoundingClientRect(),\r\n          down: document.getElementById(\"arcadeButtonDown\").getBoundingClientRect(),\r\n          left: document.getElementById(\"arcadeButtonLeft\").getBoundingClientRect(),\r\n          right: document.getElementById(\"arcadeButtonRight\").getBoundingClientRect(),\r\n          one: document.getElementById(\"arcadeButtonA\").getBoundingClientRect(),\r\n          two: document.getElementById(\"arcadeButtonB\").getBoundingClientRect(),\r\n        };\r\n        Object.keys(boundingRects).forEach((key) => {\r\n          if (pos.x >= boundingRects[key].x && pos.x <= boundingRects[key].x + boundingRects[key].width && pos.y >= boundingRects[key].y && pos.y <= boundingRects[key].y + boundingRects[key].height) {\r\n            keys.push(key);\r\n          }\r\n        })\r\n        Object.keys(keyboard).forEach((key) => {\r\n          if (keys.includes(key)) {\r\n            controls[key] = true;\r\n          } else {\r\n            controls[key] = false;\r\n          }\r\n        })\r\n      })\r\n    }\r\n  };\r\n\r\n  const handleContextMenu = (event, target) => {\r\n    let content = {};\r\n    event.preventDefault();\r\n    if (target === \"keypad\") {\r\n      content = {\r\n        \"Hide\": { action: () => { setShowControls(false); } },\r\n      }\r\n    } else if (target === \"scoreboard\") {\r\n      content = {\r\n        \"Hide\": { action: () => { setShowScoreboard(false); } },\r\n      }\r\n    } else if (target === \"canvas\") {\r\n      if (gameChoice !== \"None\") {\r\n        let playpause = gameState === \"Play\" ? \"Pause\" : \"Play\";\r\n        content = {\r\n          \"Play/Pause\": { action: () => { setGameState(playpause); } },\r\n          \"New Game\": { action: () => { setGameState(\"Restart\"); } },\r\n        }\r\n      }\r\n    }\r\n    contextMenu.setOpen();\r\n    contextMenu.setPosition(event.clientX, event.clientY);\r\n    contextMenu.setContent(content);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (gameState === \"Play\") {\r\n      setPlayButtonFlag(false);\r\n    } else {\r\n      setPlayButtonFlag(true);\r\n    }\r\n  }, [gameState]);\r\n\r\n  useEffect(() => {\r\n    const args = {\r\n      gameState: gameState,\r\n      setGameState: setGameState,\r\n      showControls: showControls,\r\n      setShowControls: setShowControls,\r\n      showScoreboard: showScoreboard,\r\n      setShowScoreboard: setShowScoreboard,\r\n      showKeybindDialog: showKeybindDialog,\r\n      setShowKeybindDialog: setShowKeybindDialog\r\n    }\r\n    handleAction(action, setAction, appDialog, setAppDialog, args);\r\n  }, [action]);\r\n\r\n  useEffect(() => {\r\n    const args = {\r\n      gameState: gameState,\r\n      showControls: showControls,\r\n      showScoreboard: showScoreboard,\r\n      gameChoice: gameChoice\r\n    };\r\n    handleTopMenu(appMenu, setAppMenu, args);\r\n  }, [gameState, gameChoice, showControls, showScoreboard]);\r\n\r\n  return (\r\n    <div id=\"arcadeContainer\">\r\n      <div\r\n        id=\"arcadeCanvasContainer\"\r\n        ref={canvasContainer}\r\n        onContextMenu={(e) => handleContextMenu(e, \"canvas\")}\r\n      >\r\n        {gameChoice === \"None\" ?\r\n          <MainMenu controls={controls} setGameChoice={setGameChoice} setGameState={setGameState} canvasZoom={canvasZoom} /> :\r\n          gameChoice === \"Snake\" ? (\r\n            <Snake controls={controls} updateScoreboard={updateScoreboard} isSelected={isSelected} gameState={gameState} setGameState={setGameState} canvasZoom={canvasZoom} />\r\n          ) :\r\n            gameChoice === \"Breakout\" ? (\r\n              <Breakout controls={controls} updateScoreboard={updateScoreboard} isSelected={isSelected} gameState={gameState} setGameState={setGameState} canvasZoom={canvasZoom} />\r\n            ) :\r\n              gameChoice === \"Space Invaders\" ? (\r\n                <SpaceInvaders controls={controls} updateScoreboard={updateScoreboard} isSelected={isSelected} gameState={gameState} setGameState={setGameState} canvasZoom={canvasZoom} />\r\n              ) : (\r\n                <></>\r\n              )}\r\n      </div>\r\n      {showControls &&\r\n        <>\r\n          <div id=\"arcadeZoomControls\">\r\n            <div\r\n              id=\"arcadeZoomInButton\"\r\n              className=\"arcadeButton arcadeButtonOff\"\r\n              onClick={() => {if(canvasZoom < 2) {setCanvasZoom(canvasZoom + 0.1)}}}\r\n            >\r\n              <BsZoomIn />\r\n            </div>\r\n            <div\r\n              id=\"arcadeZoomOutButton\"\r\n              className=\"arcadeButton arcadeButtonOff\"\r\n              onClick={() => {if(canvasZoom > 0.1) {setCanvasZoom(canvasZoom - 0.1)}}}\r\n            >\r\n              <BsZoomOut />\r\n            </div>\r\n          </div>\r\n          <div id=\"arcadeStateControls\">\r\n            <div\r\n              id=\"arcadeEjectButton\"\r\n              className=\"arcadeButton arcadeButtonOff\"\r\n              onClick={() => { setGameChoice(\"None\"); setGameState(\"Start\"); }}\r\n            >\r\n              <BsEjectFill />\r\n            </div>\r\n            <div\r\n              id=\"arcadePlayButton\"\r\n              className=\"arcadeButton arcadeButtonOff\"\r\n              onClick={() => {\r\n                handleScreenButton(\"pause\", \"keydown\", false);\r\n                setTimeout(() => handleScreenButton(\"pause\", \"keyup\", false), 50);\r\n              }}\r\n            >\r\n              {playButtonFlag ? <BsFillPlayFill /> : <BsPauseFill />}\r\n            </div>\r\n          </div>\r\n          <div id=\"arcadeArrowControls\">\r\n            <div\r\n              id=\"arcadeButtonLeft\"\r\n              className={controls.left ? \"arcadeButton arcadeButtonOn\" : \"arcadeButton arcadeButtonOff\"}\r\n              onMouseDown={() => handleScreenButton(\"left\", \"keydown\", true)}\r\n              onMouseUp={() => handleScreenButton(\"left\", \"keyup\", true)}\r\n              onTouchStart={(e) => {e.preventDefault();handleTouchEvent(e, \"left\")}}\r\n              onTouchMove={(e) => {e.preventDefault();handleTouchEvent(e, \"left\")}}\r\n              onTouchEnd={(e) => {e.preventDefault();handleTouchEvent(e, \"left\")}}\r\n              onTouchCancel={(e) => {e.preventDefault();handleTouchEvent(e, \"left\")}}\r\n            >\r\n              <FaArrowLeft />\r\n            </div>\r\n            <div>\r\n              <div\r\n                id=\"arcadeButtonUp\"\r\n                className={controls.up ? \"arcadeButton arcadeButtonOn\" : \"arcadeButton arcadeButtonOff\"}\r\n                onMouseDown={() => handleScreenButton(\"up\", \"keydown\", true)}\r\n                onMouseUp={() => handleScreenButton(\"up\", \"keyup\", true)}\r\n                onTouchStart={(e) => {e.preventDefault();handleTouchEvent(e, \"up\")}}\r\n                onTouchMove={(e) => {e.preventDefault();handleTouchEvent(e, \"up\")}}\r\n                onTouchEnd={(e) => {e.preventDefault();handleTouchEvent(e, \"up\")}}\r\n                onTouchCancel={(e) => {e.preventDefault();handleTouchEvent(e, \"up\")}}\r\n              >\r\n                <FaArrowUp />\r\n              </div>\r\n              <div\r\n                id=\"arcadeButtonDown\"\r\n                className={controls.down ? \"arcadeButton arcadeButtonOn\" : \"arcadeButton arcadeButtonOff\"}\r\n                onMouseDown={() => handleScreenButton(\"down\", \"keydown\", true)}\r\n                onMouseUp={() => handleScreenButton(\"down\", \"keyup\", true)}\r\n                onTouchStart={(e) => {e.preventDefault();handleTouchEvent(e, \"down\")}}\r\n                onTouchMove={(e) => {e.preventDefault();handleTouchEvent(e, \"down\")}}\r\n                onTouchEnd={(e) => {e.preventDefault();handleTouchEvent(e, \"down\")}}\r\n                onTouchCancel={(e) => {e.preventDefault();handleTouchEvent(e, \"down\")}}\r\n              >\r\n                <FaArrowDown />\r\n              </div>\r\n            </div>\r\n            <div\r\n              id=\"arcadeButtonRight\"\r\n              className={controls.right ? \"arcadeButton arcadeButtonOn\" : \"arcadeButton arcadeButtonOff\"}\r\n              onMouseDown={() => handleScreenButton(\"right\", \"keydown\", true)}\r\n              onMouseUp={() => handleScreenButton(\"right\", \"keyup\", true)}\r\n              onTouchStart={(e) => {e.preventDefault();handleTouchEvent(e, \"right\")}}\r\n              onTouchMove={(e) => {e.preventDefault();handleTouchEvent(e, \"right\")}}\r\n              onTouchEnd={(e) => {e.preventDefault();handleTouchEvent(e, \"right\")}}\r\n              onTouchCancel={(e) => {e.preventDefault();handleTouchEvent(e, \"right\")}}\r\n            >\r\n              <FaArrowRight />\r\n            </div>\r\n          </div>\r\n          <div id=\"arcadeFireControls\">\r\n            <div id=\"arcadeButtonA\"\r\n              className={controls.one ? \"arcadeButton arcadeButtonOn\" : \"arcadeButton arcadeButtonOff\"}\r\n              onMouseDown={() => handleScreenButton(\"one\", \"keydown\", true)}\r\n              onMouseUp={() => handleScreenButton(\"one\", \"keyup\", true)}\r\n              onTouchStart={(e) => {e.preventDefault();handleTouchEvent(e, \"one\")}}\r\n              onTouchMove={(e) => {e.preventDefault();handleTouchEvent(e, \"one\")}}\r\n              onTouchEnd={(e) => {e.preventDefault();handleTouchEvent(e, \"one\")}}\r\n              onTouchCancel={(e) => {e.preventDefault();handleTouchEvent(e, \"one\")}}\r\n            >A</div>\r\n            <div id=\"arcadeButtonB\"\r\n              className={controls.two ? \"arcadeButton arcadeButtonOn\" : \"arcadeButton arcadeButtonOff\"}\r\n              onMouseDown={() => handleScreenButton(\"two\", \"keydown\", true)}\r\n              onMouseUp={() => handleScreenButton(\"two\", \"keyup\", true)}\r\n              onTouchStart={(e) => {e.preventDefault();handleTouchEvent(e, \"two\")}}\r\n              onTouchMove={(e) => {e.preventDefault();handleTouchEvent(e, \"two\")}}\r\n              onTouchEnd={(e) => {e.preventDefault();handleTouchEvent(e, \"two\")}}\r\n              onTouchCancel={(e) => {e.preventDefault();handleTouchEvent(e, \"two\")}}\r\n            >B</div>\r\n          </div>\r\n        </>\r\n      }\r\n      <KeybindDialog\r\n        showKeybindDialog={showKeybindDialog}\r\n        setShowKeybindDialog={setShowKeybindDialog}\r\n        setAppDialog={setAppDialog}\r\n        keyboard={keyboard}\r\n        setKeyboard={setKeyboard}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useEffect, useCallback } from \"react\";\r\n\r\nexport default function Controls(isSelected, keyboard) {\r\n\r\n  var [command, setCommand] = useState({\r\n    up: false,\r\n    down: false,\r\n    left: false,\r\n    right: false,\r\n    one: false,\r\n    two: false,\r\n    pause: false,\r\n  });\r\n  const validateKey = useCallback(\r\n    (key, state) => {\r\n      const keyArray = Object.keys(keyboard);\r\n      for (let i = 0; i < keyArray.length; i++) {\r\n        let currKeyArray = keyboard[keyArray[i]].keys;\r\n        for (let j = 0; j < currKeyArray.length; j++) {\r\n          if (currKeyArray[j] === key) {\r\n            setCommand((c) => ({ ...c, [keyArray[i]]: state }));\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [keyboard],\r\n  );\r\n\r\n  const handleKeyPress = useCallback(\r\n    (event) => {\r\n      validateKey(event.key, true);\r\n    },\r\n    [validateKey],\r\n  );\r\n  const handleKeyRelease = useCallback(\r\n    (event) => {\r\n      validateKey(event.key, false);\r\n    },\r\n    [validateKey],\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", handleKeyPress);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleKeyPress);\r\n    };\r\n  }, [handleKeyPress]);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keyup\", handleKeyRelease);\r\n    return () => {\r\n      document.removeEventListener(\"keyup\", handleKeyRelease);\r\n    };\r\n  }, [handleKeyRelease]);\r\n\r\n  useEffect(() => {\r\n    if (!isSelected) {\r\n      setCommand({ ...command, pause: true });\r\n    }\r\n  }, [isSelected]);\r\n\r\n  return command;\r\n}\r\n"],"names":["MainMenu","_ref","controls","setGameState","setGameChoice","currentSelection","setCurrentSelection","useState","gamelist","SnakeSplash","BreakoutSplash","SpaceInvadersSplash","useEffect","down","Object","keys","length","up","one","_jsxs","id","children","_jsx","map","name","index","src","style","background","color","onClick","handleCanvasBorders","ctx","width","height","fillStyle","fillRect","frequency","frameRate","rows","cols","defaultPlayerBar","x","y","w","speed","defaultBall","r","dirX","dirY","defaultFirework","t","Breakout","updateScoreboard","isSelected","gameState","canvasZoom","canvasRef","useRef","Maps","setMaps","JSON","parse","stringify","LevelsJSON","gameLevel","setGameLevel","currLevel","setCurrLevel","levelHealth","setLevelHealth","Bars","frameCount","setFrameCount","winFrameCount","setWinFrameCount","playerBar","setPlayerBar","create","ball","setBall","firework1","firework2","firework3","firework4","firework5","firework6","firework7","scoreboard","time","score","setScore","pause","left","right","clearDraws","canvas","drawFirework","blockWidth","blockHeight","currBall","i","scale","beginPath","arc","Math","cos","PI","sin","fill","closePath","drawLevelUp","font","fillText","drawPlayerBar","newX","newY","drawHitbar","obj","h","drawLevel","Matrix","barHit","bar","s","checkColision","drawBall","context","current","getContext","animationFrameId","setTimeout","drawPauseGame","drawGameOver","drawWinGame","handleFireworks","currFirework","floor","random","render","window","requestAnimationFrame","cancelAnimationFrame","ref","transform","onTouchStart","e","preventDefault","onTouchMove","onTouchEnd","onTouchCancel","fruit","setFruit","fruitPos","snakeHeadPos","direction","previousDir","setPreviousDir","snakeBody","setSnakeBody","initialPos","setInitialPos","undefined","drawBoard","canvasWidth","canvasHeight","drawFruit","overlapX","overlapY","flagX","flagY","drawSnakeHead","unshift","drawSnakeBody","pop","pauseGame","endGame","blockSize","defaultInvaderOne","row","life","currSprite","totalSprites","hit","sprites","defaultInvaderTwo","defaultInvaderThree","defaultBonusInvader","defaultPlayer","move","shooting","cooling","cooldown","defaultBlock","defaultPlayerBullet","defaultInvaderBullet","SpaceInvaders","lives","setLives","level","setLevel","enemies","setEnemies","enemyMoveParam","setEnemyMoveParam","entities","setEntities","bullets","setBullets","explosions","setExplosions","explosionLifetime","player","setPlayer","drawSprite","object","j","drawObjects","redshift","greenshift","blueshift","decay","spread","radius","drawExplosions","createExplosion","target","newExplosion","push","invaderHit","invaderIndex","splice","blockHit","blockIndex","checkColisions","bulletIndex","colision","handleEvents","spawnBonusInvader","newEntity","playerShooting","newBullet","invaderShooting","chance","invaderShooter","handleBullets","newArray","handleExplosions","invaderMove","setUpLevel","currEntity","newEntities","newEnemyMoveParam","Enemies","drawBottomText","handleAction","action","setAction","appDialog","setAppDialog","args","setShowKeybindDialog","showKeybindDialog","setShowScoreboard","showScoreboard","setShowControls","showControls","handleTopMenu","appMenu","setAppMenu","gameChoice","KeybindDialog","keyboard","setKeyboard","newKeybinds","setNewKeybinds","structuredClone","keybindState","setKeybindState","update","setUpdate","info","key","display","flexDirection","marginLeft","justifyContent","alignItems","textAlign","keybind","border","onContextMenu","removeKeybind","changeKeybind","Promise","resolve","reject","document","addEventListener","removeEventListener","then","value","catch","error","addNewKeybind","actions","Confirm","Reset","Cancel","title","_Fragment","Arcade","contextMenu","canvasContainer","active","two","command","setCommand","validateKey","useCallback","state","keyArray","currKeyArray","c","handleKeyPress","event","handleKeyRelease","Controls","setCanvasZoom","playButtonFlag","setPlayButtonFlag","setScoreboard","handleScreenButton","repeat","dispatchEvent","KeyboardEvent","handleTouchEvent","type","values","touches","forEach","pos","clientX","clientY","boundingRects","getElementById","getBoundingClientRect","includes","handleContextMenu","content","playpause","setOpen","setPosition","setContent","Snake","className","BsZoomIn","BsZoomOut","BsEjectFill","BsFillPlayFill","BsPauseFill","onMouseDown","onMouseUp","FaArrowLeft","FaArrowUp","FaArrowDown","FaArrowRight"],"sourceRoot":""}