{"version":3,"file":"static/js/859.7eccc679.chunk.js","mappings":"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","sources":["System/Desktop/Scenario.jsx"],"sourcesContent":["import { Canvas } from \"@react-three/fiber\";\r\nimport * as THREE from \"three\";\r\nimport { useRef, useMemo, useContext, Suspense } from \"react\";\r\nimport { BackgroundContext } from \"./BackgroundContext.js\";\r\nimport { OrbitControls, Plane, Stars, Sky } from \"@react-three/drei\";\r\nimport { extend, useFrame, useThree, useLoader } from \"@react-three/fiber\";\r\nimport { Water } from \"three-stdlib\";\r\n\r\n\r\nextend({ Water });\r\n\r\nexport default function Scenario() {\r\n  const background = useContext(BackgroundContext);\r\n  const Ocean = () => {\r\n    const ref = useRef();\r\n    const gl = useThree((state) => state.gl);\r\n    const waterNormals = useLoader(THREE.TextureLoader, './waternormals.jpeg');\r\n    waterNormals.wrapS = waterNormals.wrapT = THREE.RepeatWrapping;\r\n    const geom = useMemo(() => new THREE.PlaneGeometry(1500, 1500), []);\r\n    const config = useMemo(\r\n      () => ({\r\n        textureWidth: 1036,\r\n        textureHeight: 1036,\r\n        waterNormals,\r\n        sunDirection: new THREE.Vector3(),\r\n        sunColor: 0xffffff,\r\n        waterColor: 0x001e0f,\r\n        distortionScale: 0.8,\r\n        fog: true,\r\n        format: gl.encoding,\r\n      }),\r\n      [waterNormals],\r\n    );\r\n    useFrame(\r\n      (state, delta) => (ref.current.material.uniforms.time.value += delta),\r\n    );\r\n    return <water ref={ref} args={[geom, config]} rotation-x={-Math.PI / 2} />;\r\n  };\r\n/*\r\n  const Desert = () => {\r\n    const ref = useRef();\r\n    const desertNormals = useLoader(THREE.TextureLoader, '/DesertNormal.png');\r\n    desertNormals.wrapS = desertNormals.wrapT = THREE.ClampToEdgeWrapping;\r\n    const sandTexture = useLoader(THREE.TextureLoader, '/SandTexture1.jpg');\r\n    sandTexture.wrapS = sandTexture.wrapT = THREE.RepeatWrapping;\r\n    sandTexture.repeat.set(100, 100);\r\n    return <Plane ref={ref} position={[0, -15, 0]} args={[1500, 1500, 150, 150]} rotation-x={-Math.PI / 2}>\r\n      <meshStandardMaterial\r\n        color=\"white\"\r\n        metalness={0.5}\r\n        roughness={0.8}\r\n        map={sandTexture}\r\n        normalMap={desertNormals}\r\n        normalScale={new THREE.Vector2(0.8, 0.8)}\r\n        displacementMap={desertNormals}\r\n        displacementScale={50} />\r\n    </Plane>;\r\n  };*/\r\n\r\n  return (\r\n    <Canvas\r\n      style={{\r\n        position: \"absolute\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n      }}\r\n      dpr={window.devicePixelRatio}\r\n      camera={{ position: [0, 25, 10], near: 2 }}\r\n    >\r\n      {background.state[\"scenario\"][\"fog\"].isActive &&\r\n        <fog\r\n          attach=\"fog\"\r\n          color={background.state[\"scenario\"][\"fog\"].color}\r\n          near={background.state[\"scenario\"][\"fog\"].near}\r\n          far={background.state[\"scenario\"][\"fog\"].far}\r\n        />}\r\n      <OrbitControls target={[0, 25, 0]} />\r\n      <Suspense fallback={null}>\r\n        {background.state[\"scenario\"][\"sun\"].isActive &&\r\n          <Sky\r\n            distance={450000}\r\n            inclination={background.state[\"scenario\"][\"sun\"].inclination}\r\n            azimuth={background.state[\"scenario\"][\"sun\"].azimuth}\r\n            rayleigh={background.state[\"scenario\"][\"sun\"].rayleight}\r\n            turbidity={background.state[\"scenario\"][\"sun\"].turbidity}\r\n            exposure={background.state[\"scenario\"][\"sun\"].exposure}\r\n          />}\r\n      </Suspense>\r\n      <Suspense fallback={null}>\r\n        {background.state[\"scenario\"][\"stars\"].isActive &&\r\n          <Stars\r\n            radius={440}\r\n            count={background.state[\"scenario\"][\"stars\"].count}\r\n          />}\r\n      </Suspense>\r\n      {background.state[\"scenario\"][\"directionalLight\"].isActive &&\r\n        <pointLight\r\n          color={background.state[\"scenario\"][\"directionalLight\"].color}\r\n          intensity={background.state[\"scenario\"][\"directionalLight\"].intensity}\r\n          position={[0, 10000, -1500]}\r\n        />}\r\n      {background.state[\"scenario\"][\"ambientLight\"].isActive &&\r\n        <ambientLight\r\n          intensity={background.state[\"scenario\"][\"ambientLight\"].intensity}\r\n          color={background.state[\"scenario\"][\"ambientLight\"].color}\r\n        />}\r\n      <Suspense fallback={null}>\r\n        {background.state[\"scenario\"][\"ocean\"].isActive && <Ocean />}\r\n      </Suspense>\r\n    </Canvas>\r\n  );\r\n};\r\n"],"names":["Scenario","background","useContext","BackgroundContext","Ocean","ref","useRef","gl","useThree","state","waterNormals","useLoader","THREE","wrapS","wrapT","geom","useMemo","config","textureWidth","textureHeight","sunDirection","sunColor","waterColor","distortionScale","fog","format","encoding","useFrame","delta","current","material","uniforms","time","value","_jsx","args","Math","PI","_jsxs","Canvas","style","position","top","left","dpr","window","devicePixelRatio","camera","near","children","isActive","attach","color","far","OrbitControls","target","Suspense","fallback","Sky","distance","inclination","azimuth","rayleigh","rayleight","turbidity","exposure","Stars","radius","count","intensity","extend","Water"],"sourceRoot":""}