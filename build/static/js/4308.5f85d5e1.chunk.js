"use strict";(self.webpackChunkpc=self.webpackChunkpc||[]).push([[4308],{8780:(t,n,e)=>{e.r(n),e.d(n,{default:()=>M});var a=e(5043),s=e(8711),o=e(2373),i=e(7174),r=e(749);const c=e.p+"static/media/Gyroscope.572cdad23e89a59df442.glb";var h=e(579);function l(t){let{state:n,angles:e}=t;const a=(0,i.p)(c);let s,o,l;a.scene.children.forEach((t=>{"External_Gimbal"===t.name&&(s=t),"Internal_Gimbal"===t.name&&(o=t),"Axis"===t.name&&(l=t)}));let M=0;return(0,r.F)(((t,a)=>{if("running"===n&&(M+=10*a),void 0!==s&&void 0!==o&&void 0!==l){let t,n,a=M;90===e.screenOrientationAngle?(t=-e.roll+Math.PI,n=e.pitch+Math.PI/2):270===e.screenOrientationAngle?(t=e.roll-Math.PI,n=-e.pitch+Math.PI/2):0===e.screenOrientationAngle?(t=e.pitch+Math.PI,n=e.roll+Math.PI/2):(t=e.pitch+Math.PI,n=-e.roll+Math.PI/2),s.quaternion.w=Math.cos(t/2),s.quaternion.y=Math.sin(t/2),s.quaternion.x=0,s.quaternion.z=0,o.quaternion.w=Math.cos(t/2)*Math.cos(n/2),o.quaternion.y=Math.sin(t/2)*Math.cos(n/2),o.quaternion.x=Math.cos(t/2)*Math.sin(n/2),o.quaternion.z=-Math.sin(t/2)*Math.sin(n/2),l.quaternion.w=Math.cos(t/2)*Math.cos((n+Math.PI/2)/2)*Math.cos(a/2)+Math.sin(t/2)*Math.sin((n+Math.PI/2)/2)*Math.sin(a/2),l.quaternion.y=Math.sin(t/2)*Math.cos((n+Math.PI/2)/2)*Math.cos(a/2)-Math.cos(t/2)*Math.sin((n+Math.PI/2)/2)*Math.sin(a/2),l.quaternion.x=Math.cos(t/2)*Math.sin((n+Math.PI/2)/2)*Math.cos(a/2)+Math.sin(t/2)*Math.cos((n+Math.PI/2)/2)*Math.sin(a/2),l.quaternion.z=Math.cos(t/2)*Math.cos((n+Math.PI/2)/2)*Math.sin(a/2)-Math.sin(t/2)*Math.sin((n+Math.PI/2)/2)*Math.cos(a/2)}})),(0,h.jsx)("primitive",{object:a.scene,scale:1.6})}function M(){const[t,n]=(0,a.useState)("ready"),[e,i]=(0,a.useState)({heading:0,pitch:0,roll:0,screenOrientationAngle:screen.orientation.angle});var r=null;const c=()=>{(r=new RelativeOrientationSensor({frequency:4,referenceFrame:"device"})).start(),console.log("gyroscope started"),r.onreading=()=>{let t=(n=r.quaternion[0],e=r.quaternion[1],a=r.quaternion[2],s=r.quaternion[3],{heading:Math.atan2(2*(n*e+a*s),1-2*(e*e+a*a)),pitch:Math.asin(2*(n*a-s*e)),roll:Math.atan2(2*(n*s+e*a),1-2*(n*n+e*e))});var n,e,a,s;let o=screen.orientation.angle;i({...t,screenOrientationAngle:o})}};return(0,a.useEffect)((()=>{"start"===t&&("AbsoluteOrientationSensor"in window?Promise.all([navigator.permissions.query({name:"gyroscope"}),navigator.permissions.query({name:"accelerometer"})]).then((t=>{t.every((t=>"granted"===t.state))?n("running"):n("not allowed")})):n("not supported")),"running"===t&&c()}),[t]),(0,a.useEffect)((()=>()=>{r&&(r.stop(),console.log("stopped sensor"))}),[]),(0,h.jsxs)(h.Fragment,{children:[(0,h.jsxs)(s.Hl,{id:"gyroscopeCanvas",children:[(0,h.jsx)("ambientLight",{intensity:1}),(0,h.jsx)("pointLight",{position:[-10,-10,10],intensity:500}),(0,h.jsx)(a.Suspense,{fallback:null,children:(0,h.jsx)(l,{state:t,angles:e})}),(0,h.jsx)(o.q,{makeDefault:!0,zoom:50,position:[0,0,10]})]}),"ready"===t&&(0,h.jsx)("button",{className:"gyroscopeStartButton",onClick:()=>n("start"),children:"Start"}),"not supported"===t&&(0,h.jsx)("div",{className:"gyroscopeWarning",children:"This feature is not supported on your device and/or browser"}),"not allowed"===t&&(0,h.jsx)("div",{className:"gyroscopeWarning",children:"This feature does not have permission to access your device sensors"})]})}}}]);
//# sourceMappingURL=4308.5f85d5e1.chunk.js.map