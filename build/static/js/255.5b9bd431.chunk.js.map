{"version":3,"file":"static/js/255.5b9bd431.chunk.js","mappings":"2vDAAaA,EAAsBA,CAACC,EAAKC,EAAOC,KAC5CF,EAAIG,UAAY,SAChBH,EAAII,SAAS,EAAG,EAAGH,EAAO,GAC1BD,EAAII,SAAS,EAAG,EAAG,EAAGF,GACtBF,EAAII,SAASH,EAAQ,EAAG,EAAG,EAAGC,GAC9BF,EAAII,SAAS,EAAGF,EAAS,EAAGD,EAAO,EAAE,E,aCDzC,MAAMI,EAAY,GACZC,EAAY,IAAOD,EACnBE,EAAO,GACPC,EAAO,GACPC,EAAmB,CACvBC,EAAG,GACHC,EAAG,GACHC,EAAG,EACHC,MAAO,KAEHC,EAAc,CAClBJ,EAAG,GACHC,EAAG,GACHI,EAAG,GACHC,KAAM,IACNC,MAAO,KAEHC,EAAkB,CACtBR,EAAG,GACHC,EAAG,GACHI,EAAG,IACHC,KAAM,EACNC,MAAO,IACPE,GAAI,EACJC,MAAO,IAEM,SAASC,EAAQC,GAAmF,IAAlF,SAAEC,EAAQ,iBAAEC,EAAgB,WAAEC,EAAU,UAAEC,EAAS,aAAEC,EAAY,WAAEC,GAAYN,EAC9G,MAAMO,GAAYC,EAAAA,EAAAA,QAAO,OAClBC,EAAMC,IAAWC,EAAAA,EAAAA,UAASC,KAAKC,MAAMD,KAAKE,UAAUC,MACpDC,EAAWC,IAAgBN,EAAAA,EAAAA,UAAS,IACpCO,EAAWC,IAAgBR,EAAAA,EAAAA,UAASF,EAAKO,KACzCI,EAAaC,IAAkBV,EAAAA,EAAAA,UAASO,EAAUI,OAClDC,EAAYC,IAAiBb,EAAAA,EAAAA,UAAS,IACtCc,EAAeC,IAAoBf,EAAAA,EAAAA,UAAS,GACnD,IAAKgB,EAAWC,IAAgBjB,EAAAA,EAAAA,UAASkB,OAAOC,OAAO3C,KAClD4C,EAAMC,IAAWrB,EAAAA,EAAAA,UAASkB,OAAOC,OAAOtC,KACxCyC,IAAatB,EAAAA,EAAAA,UAASkB,OAAOC,OAAOlC,IACzCqC,EAAUnC,MAAQ,OAClB,IAAKoC,IAAavB,EAAAA,EAAAA,UAASkB,OAAOC,OAAOlC,IACzCsC,EAAUpC,MAAQ,QAClB,IAAKqC,IAAaxB,EAAAA,EAAAA,UAASkB,OAAOC,OAAOlC,IACzCuC,EAAUrC,MAAQ,MAClB,IAAKsC,IAAazB,EAAAA,EAAAA,UAASkB,OAAOC,OAAOlC,IACzCwC,EAAUtC,MAAQ,SAClB,IAAKuC,IAAa1B,EAAAA,EAAAA,UAASkB,OAAOC,OAAOlC,IACzCyC,EAAUvC,MAAQ,OAClB,IAAKwC,IAAa3B,EAAAA,EAAAA,UAASkB,OAAOC,OAAOlC,IACzC0C,EAAUxC,MAAQ,UAClB,IAAKyC,IAAa5B,EAAAA,EAAAA,UAASkB,OAAOC,OAAOlC,IACzC2C,EAAUzC,MAAQ,QAClB,MAAM0C,EAAa,CAAEC,KAAM,EAAGC,MAAO,EAAGtC,UAAW,SACnD,IAAKsC,EAAOC,IAAYhC,EAAAA,EAAAA,UAAS,IAEnCiC,EAAAA,EAAAA,YAAU,KACF3C,EAAS4C,QACO,SAAdzC,EACFC,EAAa,SACU,UAAdD,EACTC,EAAa,QAEC,QAAdD,GACc,QAAdA,GACc,UAAdA,GAEAC,EAAa,WAEjB,GACD,CAACJ,KAEF2C,EAAAA,EAAAA,YAAU,KAGJ3C,EAAS6C,OACR7C,EAAS8C,OACVpB,EAAUvC,EAAIuC,EAAUrC,EAAIqC,EAAUrC,IAEtCqC,EAAUvC,EAAIuC,EAAUvC,EAAIuC,EAAUpC,OAGtCU,EAAS8C,QACR9C,EAAS6C,MACVnB,EAAUvC,EAAIuC,EAAUrC,EAAIJ,IAE5ByC,EAAUvC,EAAIuC,EAAUvC,EAAIuC,EAAUpC,MAE1C,GACC,CAACU,EAAUsB,IAEd,MAAMyB,EAActE,IAClBA,EAAIG,UAAY,QAChBH,EAAII,SAAS,EAAG,EAAGJ,EAAIuE,OAAOtE,MAAOD,EAAIuE,OAAOrE,OAAO,EA6DnDsE,EAAeA,CAACxE,EAAKyE,EAAYC,EAAaC,KAClD,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACtB5E,EAAIG,UAAYwE,EAASvD,MACzBpB,EAAI6E,MAAM,EAAG,IACb7E,EAAI8E,YACJ9E,EAAI+E,IACFJ,EAASjE,EAAI+D,EACXO,KAAKC,IAAM,EAAID,KAAKE,GAAM,GAAMN,GAAKD,EAASxD,EAAI,EAAIsD,EACxDE,EAAShE,EAAI+D,EAC0B,EAArCM,KAAKG,IAAM,EAAIH,KAAKE,GAAM,GAAMN,GAASD,EAASxD,EAAI,EAAIuD,EAC3DC,EAAS5D,EAAI,EAAK0D,EACnB,EACU,EAAVO,KAAKE,IAEPlF,EAAIoF,OACJpF,EAAIqF,YACJrF,EAAI6E,MAAM,EAAG,EACf,EASIS,EAAcA,CAACtF,EAAKyE,EAAYC,EAAavD,KAIjD,OAHAmD,EAAWtE,GACXA,EAAIG,UAAY,MAChBH,EAAIuF,KAAO,iBACHpE,GACN,KAAK,EAYL,QACEnB,EAAIwF,SAAS,aAAc,EAAIf,EAAY,GAAKC,EAAa,KAC7D,MAXF,KAAK,EACH1E,EAAIwF,SAAS,QAAS,EAAIf,EAAY,GAAKC,EAAa,KACxD,MACF,KAAK,EACH1E,EAAIwF,SAAS,QAAS,EAAIf,EAAY,GAAKC,EAAa,KACxD,MACF,KAAK,EACH1E,EAAIwF,SAAS,QAAS,EAAIf,EAAY,GAAKC,EAAa,KAK5D,EAGIe,EAAgBA,CAACzF,EAAKyE,EAAYC,KACtC,IAAIgB,EAAMC,EACVD,EAAOzC,EAAUvC,EACjBiF,EAAO1C,EAAUtC,EACjBX,EAAIG,UAAY,OAChBH,EAAII,SACFsF,EAAOjB,EACPkB,EAAOjB,EACPzB,EAAUrC,EAAI6D,EACdC,EACD,EAEGkB,EAAaA,CAAC5F,EAAKyE,EAAYC,EAAamB,KAChD,IAAIzE,EACJ,OAAQyE,EAAIC,GACV,KAAK,EACH1E,EAAQ,QACR,MACF,KAAK,EACHA,EAAQ,SACR,MACF,KAAK,EACHA,EAAQ,SACR,MACF,QACEA,EAAQ,OAGZpB,EAAIG,UAAYiB,EAChBpB,EAAII,SACFyF,EAAInF,EAAI+D,EACRoB,EAAIlF,EAAI+D,EACRmB,EAAIjF,EAAI6D,EACRC,EACD,EAEGqB,EAAYA,CAAC/F,EAAKyE,EAAYC,KAClC,IAAK,IAAIE,EAAI,EAAGA,EAAIpC,EAAUI,KAAMgC,IAC9BpC,EAAUwD,OAAOpB,GAAGkB,EAAI,GAC1BF,EAAW5F,EAAKyE,EAAYC,EAAalC,EAAUwD,OAAOpB,GAC9D,EAEIqB,EAAUC,IACVA,EAAIJ,EAAI,GAAK,IACfI,EAAIJ,EAAII,EAAIJ,EAAI,EAChB9B,GAAgBkC,EAAIC,EACpBlC,EAASD,IAEG,IAAVkC,EAAIJ,IACNnD,EAAeD,EAAc,GACzBA,EAAc,IAAM,GACtBf,EAAa,WAEjB,EAGIyE,EAAiBzB,IAiBrB,IAAIuB,EAhBe,IAAfvB,EAASjE,GAAWiE,EAASjE,IAAMF,IACrCmE,EAAS3D,MAAQ2D,EAAS3D,MAET,IAAf2D,EAAShE,EACXgE,EAAS1D,MAAQ0D,EAAS1D,KACjB0D,EAAShE,IAAa,EAAPJ,GACxBoB,EAAa,OAEXgD,EAAShE,EAAIgE,EAAS5D,IAAoB,EAAdkC,EAAUtC,GAEtCgE,EAASjE,GAAKuC,EAAUvC,GACxBiE,EAASjE,GAAKuC,EAAUvC,EAAIuC,EAAUrC,IAEtC+D,EAAS1D,MAAQ0D,EAAS1D,MAI9B,IAAK,IAAI2D,EAAI,EAAGA,EAAIpC,EAAUI,KAAMgC,IAClCsB,EAAM1D,EAAUwD,OAAOpB,GACnBsB,EAAIJ,EAAI,GAGRnB,EAASjE,EAAIiE,EAAS5D,GAAKmF,EAAIxF,GAC/BiE,EAASjE,EAAIiE,EAAS5D,GAAKmF,EAAIxF,EAAIwF,EAAItF,GACvC+D,EAAShE,EAAIgE,EAAS5D,GAAa,EAARmF,EAAIvF,GAC/BgE,EAAShE,EAAIgE,EAAS5D,GAAmB,GAAbmF,EAAIvF,EAAI,KAIlCgE,EAASjE,EAAIiE,EAAS5D,EAAImF,EAAIxF,GAC9BiE,EAASjE,EAAIiE,EAAS5D,EAAImF,EAAIxF,EAAIwF,EAAItF,IAEtC+D,EAAS1D,MAAQ0D,EAAS1D,KAC1BgF,EAAOC,IAIPvB,EAAShE,EAAIgE,EAAS5D,EAAY,EAARmF,EAAIvF,GAC9BgE,EAAShE,EAAIgE,EAAS5D,EAAkB,GAAbmF,EAAIvF,EAAI,KAEnCgE,EAAS3D,MAAQ2D,EAAS3D,KAC1BiF,EAAOC,IAIf,EAIIG,EAAWA,CAACrG,EAAKyE,EAAYC,EAAaC,KAC9C3E,EAAIG,UAAY,UAChBH,EAAI6E,MAAM,EAAG,IACb7E,EAAI8E,YACJ9E,EAAI+E,IACFJ,EAASjE,EAAI+D,EACbE,EAAShE,EAAI+D,EACbC,EAAS5D,EAAI0D,EACb,EACU,EAAVO,KAAKE,IAEPlF,EAAIoF,OACJpF,EAAIqF,YACJrF,EAAI6E,MAAM,EAAG,EAAE,EA4FjB,OAzFAX,EAAAA,EAAAA,YAAU,KACR,MACMoC,EADSzE,EAAU0E,QACFC,WAAW,MAClC,IAEIC,EAFAhC,EAAa6B,EAAQ/B,OAAOtE,MAAQO,EACpCkE,EAAc4B,EAAQ/B,OAAOrE,OAASK,EAE1C,OAAQmB,GACN,IAAK,OACH4C,EAAWgC,GACXvG,EAAoBuG,EAASA,EAAQ/B,OAAOtE,MAAOqG,EAAQ/B,OAAOrE,QAClEuF,EAAca,EAAS7B,EAAYC,GACnCqB,EAAUO,EAAS7B,EAAYC,GAC/BrB,EAAK3C,EAAI2C,EAAK3C,EAAI2C,EAAKrC,KACvBqC,EAAK1C,EAAI0C,EAAK1C,EAAI0C,EAAKpC,KACvBmF,EAAc/C,GACdgD,EAASC,EAAS7B,EAAYC,EAAarB,GAC3CqD,YAAW,KACT5D,EAAcD,EAAa,EAAE,GAC5B,CAACvC,IACJ,MACF,IAAK,QApPaqG,EAAC3G,EAAKyE,EAAYC,KACtC1E,EAAIG,UAAY,MAChBH,EAAIuF,KAAO,iBACXvF,EAAIwF,SAAS,SAAU,EAAIf,EAAY,GAAKC,EAAa,IAAI,EAkPzDiC,CAAcL,EAAS7B,EAAYC,GACnC,MACF,IAAK,MA5PYkC,EAAC5G,EAAKyE,EAAYC,KACrC1E,EAAIG,UAAY,MAChBH,EAAIuF,KAAO,iBACXvF,EAAIwF,SAAS,YAAa,EAAIf,EAAY,GAAKC,EAAa,IAAI,EA0P5DkC,CAAaN,EAAS7B,EAAYC,GAClC,MACF,IAAK,UACH1C,EAAQE,KAAKC,MAAMD,KAAKE,UAAUC,KAClCE,EAAa,GACbE,EAAaV,EAAKO,IAClBK,EAAeH,EAAUI,MACzBU,EAAQH,OAAOC,OAAOtC,IACtBoC,EAAaC,OAAOC,OAAO3C,IAC3BwD,EAAS,GACTnB,EAAc,GACdnB,EAAa,QACb,MACF,IAAK,UACCW,EAAY,IAAM,EACpBX,EAAa,QAEb2D,EAAYgB,EAAS7B,EAAYC,EAAa,GAC9CgC,YAAW,KACTpC,EAAWgC,GACXhB,EAAYgB,EAAS7B,EAAYC,EAAa,EAAE,GAC/C,CAAC,MACJgC,YAAW,KACTpB,EAAYgB,EAAS7B,EAAYC,EAAa,EAAE,GAC/C,CAAC,MACJgC,YAAW,KACTpB,EAAYgB,EAAS7B,EAAYC,EAAa,EAAE,GAC/C,CAAC,MACJgC,YAAW,KACTnE,EAAaD,EAAY,GACzBG,EAAaV,EAAKO,EAAY,IAC9BK,EAAeH,EAAUI,MACzBU,EAAQH,OAAOC,OAAOtC,IACtBwD,EAAWgC,GACXP,EAAUO,EAAS7B,EAAYC,GAC/B/C,EAAa,OAAO,GACnB,CAAC,OAEN,MACF,IAAK,MACHc,EAAaV,EAAK,IAxNJ8E,EAAC7G,EAAKyE,EAAYC,KACpCJ,EAAWtE,GACXA,EAAIG,UAAY,MAChBH,EAAIuF,KAAO,iBACXvF,EAAIwF,SAAS,UAAW,EAAIf,EAAY,GAAKC,EAAa,IAAI,EAqN1DmC,CAAYP,EAAS7B,EAAYC,GACjCe,EAAca,EAAS7B,EAAYC,GA7RjBoC,EAAC9G,EAAKyE,EAAYC,KACxC,IAAIqC,EACJ,IAAK,IAAInC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC3B,OAAQA,GACN,KAAK,EACHmC,EAAexD,EACf,MACF,KAAK,EACHwD,EAAevD,EACf,MACF,KAAK,EACHuD,EAAetD,EACf,MACF,KAAK,EACHsD,EAAerD,EACf,MACF,KAAK,EACHqD,EAAepD,EACf,MACF,KAAK,EACHoD,EAAenD,EACf,MACF,KAAK,EACHmD,EAAelD,EAKfkD,EAAa5F,IAAM,GACrB4F,EAAa5F,EAAI6D,KAAKgC,MAAsB,EAAhBhC,KAAKiC,UAAgB,EACjDF,EAAarG,EAAIuC,EAAUvC,EAAIuC,EAAUrC,EAAI,EAC7CmG,EAAapG,EAAI,GACjBoG,EAAa/F,MAAQgE,KAAKiC,SAAW,IAAO,EAC5CF,EAAa9F,MAAQ,KACZ8F,EAAa5F,EAAI,EAC1B4F,EAAa5F,EAAI4F,EAAa5F,EAAI,EAAId,EAC7B0G,EAAa5F,EAAI,GAC1B4F,EAAarG,EAAIqG,EAAarG,EAAIqG,EAAa/F,KAC/C+F,EAAapG,EAAIoG,EAAapG,EAAIoG,EAAa9F,KAC/CmF,EAAcW,GACdV,EAASrG,EAAKyE,EAAYC,EAAaqC,GACvCA,EAAa5F,EAAI4F,EAAa5F,EAAI,EAAId,GAC7B0G,EAAa5F,GAAK,IAC3BqD,EAAaxE,EAAKyE,EAAYC,EAAaqC,GAC3CA,EAAa5F,EAAI4F,EAAa5F,EAAI,EAAId,EAE1C,GAgPIyG,CAAgBR,EAAS7B,EAAYC,GACrCgC,YAAW,KACT1D,EAAiBD,EAAgB,EAAE,GAClC,CAACzC,IACJ,MACF,QACEgE,EAAWgC,GAGfxC,EAAWC,KAAOiB,KAAKgC,MAAMnE,EAAaxC,GAC1CyD,EAAWE,MAAQA,EACnBF,EAAWpC,UAAYA,EACvBF,EAAiBsC,GACjB,MAAMoD,EAASA,KACbT,EAAmBU,OAAOC,sBAAsBF,EAAO,EAGzD,OADAA,IACO,KACLC,OAAOE,qBAAqBZ,EAAiB,CAC9C,GACA,CAAC5D,EAAYE,EAAerB,KAExB4F,EAAAA,EAAAA,KAAA,UAAQC,IAAK1F,EACpB2F,MAAO,CAAEC,UAAW,SAAS7F,OAC/B,CC9ZA,MAuQA,EApQcN,IAAsF,IAArF,SAAEC,EAAQ,iBAAEC,EAAgB,WAAEC,EAAU,UAAEC,EAAS,aAAEC,EAAY,WAAEC,GAAYN,EAG5F,IAAIO,GAAYC,EAAAA,EAAAA,QAAO,OAClB4F,EAAOC,IAAY1F,EAAAA,EAAAA,WAAS,IAC5B2F,IAAY3F,EAAAA,EAAAA,UAAS,CAAEvB,EAAG,EAAGC,EAAG,KAChCqD,EAAOC,IAAYhC,EAAAA,EAAAA,UAAS,IAC5B4F,IAAgB5F,EAAAA,EAAAA,UAAS,CAC5B6F,UAAW,QACXpH,EAAG,EACHC,EAAG,KAEAoH,EAAaC,IAAkB/F,EAAAA,EAAAA,UAAS,UACxCgG,EAAWC,IAAgBjG,EAAAA,EAAAA,UAAS,CAAEvB,EAAG,GAAIC,EAAG,MAChDwH,EAAYC,IAAiBnG,EAAAA,EAAAA,WAAS,IACtCY,EAAYC,IAAiBb,EAAAA,EAAAA,UAAS,GAC3C,MAAM6B,EAAa,CAAEC,KAAM,EAAGC,MAAO,EAAGtC,UAAW,UAEnDwC,EAAAA,EAAAA,YAAU,KACJ3C,EAAS4C,OACP5C,EAAS4C,QACO,SAAdzC,EACFC,EAAa,SACU,UAAdD,EACTC,EAAa,QAEC,QAAdD,GACc,QAAdA,GACc,UAAdA,GAEAC,EAAa,WAGnB,GACC,CAACJ,KAEJ2C,EAAAA,EAAAA,YAAU,UACemE,IAAnBJ,EAAUvH,EAAE,GACVa,EAAS+G,GACXT,EAAaC,UAAY,KAChBvG,EAASgH,KAClBV,EAAaC,UAAY,OAChBvG,EAAS6C,KAClByD,EAAaC,UAAY,OAChBvG,EAAS8C,QAClBwD,EAAaC,UAAY,SAGvBvG,EAAS+G,IAAsB,SAAhBP,EACjBF,EAAaC,UAAY,KAChBvG,EAASgH,MAAwB,OAAhBR,EAC1BF,EAAaC,UAAY,OAChBvG,EAAS6C,MAAwB,UAAhB2D,EAC1BF,EAAaC,UAAY,OAChBvG,EAAS8C,OAAyB,SAAhB0D,IAC3BF,EAAaC,UAAY,QAE7B,GACC,CAACvG,EAAUsB,IAEd,MAAM2F,EAAYA,CAACxI,EAAKyI,EAAaC,KACnC1I,EAAIG,UAAY,UAChBH,EAAII,SAAS,EAAG,EAAGqI,EAAaC,EAAa,EAmM/C,OAzCAxE,EAAAA,EAAAA,YAAU,KACR,MACMoC,EADSzE,EAAU0E,QACFC,WAAW,MAClC,IAEIC,EAFAhC,EAAa6B,EAAQ/B,OAAOtE,MAzNrB,GA0NPyE,EAAc4B,EAAQ/B,OAAOrE,OA3NtB,GA6NO,SAAdwB,GACF8G,EAAUlC,EAASA,EAAQ/B,OAAOtE,MAAOqG,EAAQ/B,OAAOrE,QACxDH,EAAoBuG,EAASA,EAAQ/B,OAAOtE,MAAOqG,EAAQ/B,OAAOrE,QA/JpDyI,EAAC3I,EAAKyE,EAAYC,KAClC,IAAIgB,EAAMC,EACNiD,EACFC,GAAW,EACb,GAAKnB,EAsCHhC,EAAOkC,EAASlH,EAChBiF,EAAOiC,EAASjH,MAvCN,CAGV,GAFAiH,EAASlH,EAAIsE,KAAKgC,MApET,GAoEehC,KAAKiC,UAC7BW,EAASjH,EAAIqE,KAAKgC,MAtET,GAsEehC,KAAKiC,eACNoB,IAAnBJ,EAAUvH,EAAE,GACd,KAAOkH,EAASlH,IAAMmH,EAAanH,GAAKkH,EAASjH,IAAMkH,EAAalH,GAClEiH,EAASlH,EAAIsE,KAAKgC,MAxEb,GAwEmBhC,KAAKiC,UAC7BW,EAASjH,EAAIqE,KAAKgC,MA1Eb,GA0EmBhC,KAAKiC,cAE1B,CACL,IAAK,IAAIrC,EAAI,EAAGA,EAAIqD,EAAUvH,EAAEoI,OAAQlE,IAClCgD,EAASlH,IAAMuH,EAAUvH,EAAEkE,KAC7BgE,GAAW,GAEThB,EAASjH,IAAMsH,EAAUtH,EAAEiE,KAC7BiE,GAAW,GAGf,MAAoB,IAAbD,IAAkC,IAAbC,GAAmB,CAC7CjB,EAASlH,EAAIsE,KAAKgC,MArFb,GAqFmBhC,KAAKiC,UAC7BW,EAASjH,EAAIqE,KAAKgC,MAvFb,GAuFmBhC,KAAKiC,UAC7B,IAAI8B,GAAQ,EACRC,GAAQ,EACZ,IAAK,IAAIpE,EAAI,EAAGA,EAAIqD,EAAUvH,EAAEoI,OAAQlE,IAClCgD,EAASlH,IAAMuH,EAAUvH,EAAEkE,KAC7BmE,GAAQ,GAENnB,EAASjH,IAAMsH,EAAUtH,EAAEiE,KAC7BoE,GAAQ,GAGZJ,EAAWG,EACXF,EAAWG,CACb,CACF,CACAtD,EAAOkC,EAASlH,EAChBiF,EAAOiC,EAASjH,EAChBgH,GAAS,EACX,CAIA3H,EAAIG,UAAY,UAChBH,EAAII,SACFsF,EAAOjB,EACPkB,EAAOjB,EACPD,EACAC,EACD,EA6GCiE,CAAUrC,EAAS7B,EAAYC,GA1GbuE,EAACjJ,EAAKyE,EAAYC,KACtC,IACIgB,EAAMC,EACV,GAAKwC,EAOH,OAAQN,EAAaC,WACnB,IAAK,QACHpC,EAAOmC,EAAanH,EAXf,EAYLiF,EAAOkC,EAAalH,EACpBkH,EAAanH,EAAImH,EAAanH,EAbzB,EAcL,MACF,IAAK,OACHgF,EAAOmC,EAAanH,EAhBf,EAiBLiF,EAAOkC,EAAalH,EACpBkH,EAAanH,EAAImH,EAAanH,EAlBzB,EAmBL,MACF,IAAK,KACHgF,EAAOmC,EAAanH,EACpBiF,EAAOkC,EAAalH,EAtBf,EAuBLkH,EAAalH,EAAIkH,EAAalH,EAvBzB,EAwBL,MACF,IAAK,OACH+E,EAAOmC,EAAanH,EACpBiF,EAAOkC,EAAalH,EA3Bf,EA4BLkH,EAAalH,EAAIkH,EAAalH,EA5BzB,OAGT+E,EAAO,GAAKjB,EACZkB,EAAO,GAAKjB,EACZ0D,GAAc,GACdP,EAAanH,EAAI,GACjBmH,EAAalH,EAAI,GA4BnB,GADAqH,EAAeH,EAAaC,gBACLO,IAAnBJ,EAAUvH,EAAE,GACd,IAAK,IAAIkE,EAAI,EAAGA,EAAIqD,EAAUvH,EAAEoI,OAAQlE,IAEpCqD,EAAUvH,EAAEkE,KAAOiD,EAAanH,GAChCuH,EAAUtH,EAAEiE,KAAOiD,EAAalH,GAEhCgB,EAAa,OAKjBkG,EAAanH,GArKJ,IAsKTmH,EAAanH,EAAI,GACjBmH,EAAalH,EAAI,GACjBkH,EAAalH,GAvKJ,GAyKTgB,EAAa,OACJiG,EAASlH,IAAMmH,EAAanH,GAAKkH,EAASjH,IAAMkH,EAAalH,IACtEgH,GAAS,GACT1D,EAASD,EAAQ,GACjBiE,EAAUvH,EAAEwI,QAAQrB,EAAanH,GACjCuH,EAAUtH,EAAEuI,QAAQrB,EAAalH,IAEnCX,EAAIG,UAAY,UAChBH,EAAII,SACFsF,EAAOjB,EACPkB,EAAOjB,EACPD,EACAC,EACD,EA0CCuE,CAAc3C,EAAS7B,EAAYC,GAvCjByE,EAACnJ,EAAKyE,EAAYC,KACtC,IAAK,IAAIE,EAAI,EAAGA,EAAIqD,EAAUvH,EAAEoI,OAAQlE,IACtC5E,EAAIG,UAAY,UAChBH,EAAII,SACF6H,EAAUvH,EAAEkE,GAAKH,EACjBwD,EAAUtH,EAAEiE,GAAKF,EACjBD,EACAC,GAGJuD,EAAUvH,EAAEwI,QAAQrB,EAAanH,GACjCuH,EAAUtH,EAAEuI,QAAQrB,EAAalH,GACjCsH,EAAUvH,EAAE0I,MACZnB,EAAUtH,EAAEyI,KAAK,EA2BfD,CAAc7C,EAAS7B,EAAYC,GACnCgC,YAAW,KACT5D,EAAcD,EAAa,EAAE,GAC5B,CAAC,KAAQmB,EAAQ,EAzOR,MA0OW,UAAdtC,EAtBK2H,EAACrJ,EAAKyE,EAAYC,KAClC8D,EAAUxI,EAAKyE,EAAYC,GAC3B1E,EAAIG,UAAY,UAChBH,EAAIuF,KAAO,iBACXvF,EAAIwF,SAAS,SAAU,EAAIf,EAAY,GAAKC,EAAa,IAAI,EAmB3D2E,CAAU/C,EAAS7B,EAAYC,GACR,QAAdhD,GACT8G,EAAUlC,EAASA,EAAQ/B,OAAOtE,MAAOqG,EAAQ/B,OAAOrE,QA/B5CoJ,EAACtJ,EAAKyE,EAAYC,KAChC8D,EAAUxI,EAAKyE,EAAYC,GAC3B1E,EAAIG,UAAY,UAChBH,EAAIuF,KAAO,iBACXvF,EAAIwF,SAAS,YAAa,EAAIf,EAAY,GAAKC,EAAa,IAAI,EA4B9D4E,CAAQhD,EAAS7B,EAAYC,IACN,YAAdhD,IACTC,EAAa,QACbmB,EAAc,GACd6E,GAAS,GACTS,GAAc,GACdnE,EAAS,GACTiE,EAAa,CAAExH,EAAG,GAAIC,EAAG,MAE3BmD,EAAWC,KAAOiB,KAAKgC,MAAMnE,GAAcmB,EAAQ,EAvPrC,IAwPdF,EAAWE,MAAQA,EACnBF,EAAWpC,UAAYA,EACvBF,EAAiBsC,GACjB,MAAMoD,EAASA,KACbT,EAAmBU,OAAOC,sBAAsBF,EAAO,EAGzD,OADAA,IACO,KACLC,OAAOE,qBAAqBZ,EAAiB,CAC9C,GACA,CAAC5D,EAAYnB,KAET4F,EAAAA,EAAAA,KAAA,UAAQpH,OAAO,MAAMD,MAAM,MAAMsH,IAAK1F,EAC7C2F,MAAO,CAAEC,UAAW,SAAS7F,OAA0B,E,kkBCpQnDvB,EAAY,GACZC,EAAY,IAAOD,EACnBE,EAAO,IACPC,EAAO,IACP+I,EAAY,GACZC,EAAoB,CACtBC,GAAI,EACJ/I,EAAG,GACHC,EAAG,GACH+I,IAAK,EACLC,KAAM,EACNC,WAAY,EACZC,aAAc,EACdjJ,EAAG,GACHkF,EAAG,GACHgE,KAAK,EACL1I,MAAO,QACP2I,QAAS,CACL,EAAG,CACC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEhlCC,EAAoB,CACtBP,GAAI,EACJ/I,EAAG,GACHC,EAAG,GACH+I,IAAK,EACLC,KAAM,EACNG,KAAK,EACLF,WAAY,EACZC,aAAc,EACdjJ,EAAG,GACHkF,EAAG,GACH1E,MAAO,MACP2I,QAAS,CACL,EAAG,CACC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEhC,EAAG,CACC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAIlCE,EAAsB,CACxBR,GAAI,EACJ/I,EAAG,GACHC,EAAG,GACH+I,IAAK,EACLC,KAAM,EACNG,KAAK,EACLF,WAAY,EACZC,aAAc,EACdjJ,EAAG,GACHkF,EAAG,GACH1E,MAAO,OACP2I,QAAS,CACL,EAAG,CACC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEhlCG,EAAsB,CACxBT,GAAI,EACJ/I,EAAG,GACHC,EAAG,GACHgJ,KAAM,EACNG,KAAK,EACLF,WAAY,EACZC,aAAc,EACdjJ,EAAG,GACHkF,EAAG,GACH1E,MAAO,UACP2I,QAAS,CACL,EAAG,CACC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE9D,EAAG,CACC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAKhEI,EAAgB,CAClBV,GAAI,GACJ/I,EAAG,GACHC,EAAG,IACHE,MAAO,EACPuJ,KAAM,OACNC,UAAU,EACVC,QAAS,EACTV,WAAY,EACZhJ,EAAG,GACHkF,EAAG,GACH1E,MAAO,QACPmJ,SAAU,IACVR,QAAS,CACL,EAAG,CACC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAIlCS,EAAe,CACjBf,GAAI,EACJ/I,EAAG,GACHC,EAAG,GACHiJ,WAAY,EACZhJ,EAAG,GACHkF,EAAG,GACH1E,MAAO,OACP2I,QAAS,CACL,EAAG,CACC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAIlCU,EAAsB,CACxBhB,GAAI,SACJ/I,EAAG,GACHC,EAAG,GACHmF,EAAG,EACHlF,EAAG,EACHC,MAAO,EACPO,MAAO,QACPwI,WAAY,EACZC,aAAc,EACdE,QAAS,CACL,EAAG,CACC,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAER,EAAG,CACC,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,MAIVW,EAAuB,CACzBjB,GAAI,UACJ/I,EAAG,GACHC,EAAG,GACHiJ,WAAY,EACZC,aAAc,EACdjJ,EAAG,EACHkF,EAAG,EACHjF,MAAO,EACPO,MAAO,SACP2I,QAAS,CACL,EAAG,CACC,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,MAKD,SAASY,EAAarJ,GAAmF,IAAlF,SAAEC,EAAQ,iBAAEC,EAAgB,WAAEC,EAAU,UAAEC,EAAS,aAAEC,EAAY,WAAEC,GAAYN,EAEjH,MAAMO,GAAYC,EAAAA,EAAAA,QAAO,OAClBkC,EAAOC,IAAYhC,EAAAA,EAAAA,UAAS,IAC5B2I,EAAOC,IAAY5I,EAAAA,EAAAA,UAAS,IAC5B6I,EAAOC,IAAY9I,EAAAA,EAAAA,UAAS,IAC5BY,EAAYC,IAAiBb,EAAAA,EAAAA,UAAS,IACtC+I,EAASC,IAAchJ,EAAAA,EAAAA,UAAS,IAChCiJ,EAAgBC,IAAqBlJ,EAAAA,EAAAA,UAAS,CACjDmJ,MAAO,EACP7K,KAAM,MAEH8K,EAAUC,IAAerJ,EAAAA,EAAAA,UAAS,KAClCsJ,EAASC,IAAcvJ,EAAAA,EAAAA,UAAS,KAChCwJ,EAAYC,IAAiBzJ,EAAAA,EAAAA,UAAS,IACvC0J,EAAoB,IAG1B,IAAKC,EAAQC,IAAa5J,EAAAA,EAAAA,UAASkB,OAAOC,OAAO+G,IACjD,MAAMrG,EAAa,CAAEC,KAAM,EAAGC,MAAO,EAAGtC,UAAW,UAInDwC,EAAAA,EAAAA,YAAU,KACN,GAAI3C,EAAS4C,MACT,OAAQzC,GACJ,IAAK,OACDC,EAAa,SACb,MACJ,IAAK,QACDA,EAAa,QACb,MACJ,IAAK,MACL,IAAK,MACL,IAAK,QACDA,EAAa,WAKzB,GACD,CAACJ,KAEJ2C,EAAAA,EAAAA,YAAU,KACY,SAAdxC,IAEIH,EAAS6C,OACR7C,EAAS8C,OACVuH,EAAOlL,EAAIkL,EAAOhL,EAAIgL,EAAOhL,EAE7BgL,EAAOlL,EAAIkL,EAAOlL,EAAIkL,EAAO/K,MAE7BU,EAAS8C,QACR9C,EAAS6C,MACVwH,EAAOlL,EAAIkL,EAAOhL,EAAIJ,EAEtBoL,EAAOlL,EAAIkL,EAAOlL,EAAIkL,EAAO/K,MACtBU,EAAS6C,MAAQ7C,EAAS8C,MAEjCuH,EAAOxB,KAAO,OACN7I,EAAS6C,MAAS7C,EAAS8C,QACnCuH,EAAOxB,KAAO,QAEd7I,EAAS+G,IACU,IAAnBsD,EAAOtB,UACPsB,EAAOvB,UAAW,GAE1B,GACD,CAAC9I,EAAUsB,IAId,MAAMyB,EAActE,IAChBA,EAAIG,UAAY,QAChBH,EAAII,SAAS,EAAG,EAAGJ,EAAIuE,OAAOtE,MAAOD,EAAIuE,OAAOrE,OAAO,EAErD4L,EAAaA,CAAC9L,EAAK+L,MACF,IAAfA,EAAOjC,IACP9J,EAAIG,UAAY,QAEhBH,EAAIG,UAAY4L,EAAO3K,MAE3B,IAAK,IAAIwD,EAAI,EAAGA,EAAImH,EAAOhC,QAAQgC,EAAOnC,YAAYd,OAAQlE,IAC1D,IAAK,IAAIoH,EAAI,EAAGA,EAAID,EAAOhC,QAAQgC,EAAOnC,YAAYhF,GAAGkE,OAAQkD,IACb,IAA5CD,EAAOhC,QAAQgC,EAAOnC,YAAYhF,GAAGoH,IACrChM,EAAII,SAAS2L,EAAOrL,EAAIsL,EAAGD,EAAOpL,EAAIiE,EAAG,EAAG,GAIpDmH,EAAOhC,QAAQjB,OAAS,IACpBiD,EAAOnC,WAAamC,EAAOhC,QAAQjB,OAAS,EAC5CiD,EAAOnC,aAEPmC,EAAOnC,WAAa,EAE5B,EAsDEqC,EAAe3F,IACjB,IAAK,IAAI1B,EAAI,EAAGA,EAAIyG,EAASvC,OAAQlE,IACjCkH,EAAWxF,EAAS+E,EAASzG,IAEjC,IAAK,IAAIA,EAAI,EAAGA,EAAI2G,EAAQzC,OAAQlE,IAChCkH,EAAWxF,EAASiF,EAAQ3G,IAEhCkH,EAAWxF,EAASsF,GA3DA5L,KACpB,IAAIkM,EAAW,EACXC,EAAa,EACbC,EAAY,EAChB,GAAIX,EAAW3C,OAAS,EACpB,IAAK,IAAIlE,EAAI,EAAGA,EAAI6G,EAAW3C,OAAQlE,IAAK,CACpC6G,EAAW7G,GAAGyH,OAASV,mBACvBO,EAAWlH,KAAKgC,MAA8B,IAAvByE,EAAW7G,GAAGyH,MAAY,oBAC1CZ,EAAW7G,GAAGyH,OAASV,IAAwB,GACtDO,EAAW,IACXC,EAAanH,KAAKgC,MAAsD,KAA/CyE,EAAW7G,GAAGyH,MAAQV,oBAA4B,sBAE3EO,EAAW,IACXC,EAAa,IACbC,EAAYpH,KAAKgC,MAA0D,KAAnDyE,EAAW7G,GAAGyH,MAAQV,IAAwB,GAAQ,qBAElF3L,EAAIG,UAAY,OAAS+L,EAAW,IAAMC,EAAa,IAAMC,EAAY,IACzE,IAAIE,EAAS,EAAIb,EAAW7G,GAAGyH,OAASV,EAAoBF,EAAW7G,GAAGyH,OACtEE,EAASd,EAAW7G,GAAGhE,EAAI,EAAI0L,EAAS,GAC5CtM,EAAII,SAASqL,EAAW7G,GAAGlE,EAAa,EAAT6L,EAAa,EAAGd,EAAW7G,GAAGjE,EAAa,EAAT4L,EAAa,EAAG,EAAG,GACpFvM,EAAII,SAASqL,EAAW7G,GAAGlE,EAAa,EAAT6L,EAAa,EAAGd,EAAW7G,GAAGjE,EAAa,EAAT4L,EAAa,EAAG,EAAG,GACpFvM,EAAII,SAASqL,EAAW7G,GAAGlE,EAAa,EAAT6L,EAAa,EAAGd,EAAW7G,GAAGjE,EAAa,EAAT4L,EAAa,EAAG,EAAG,GACpFvM,EAAII,SAASqL,EAAW7G,GAAGlE,EAAa,EAAT6L,EAAa,EAAGd,EAAW7G,GAAGjE,EAAa,EAAT4L,EAAa,EAAG,EAAG,GACpFvM,EAAII,SAASqL,EAAW7G,GAAGlE,EAAI6L,EAAQd,EAAW7G,GAAGjE,EAAG,EAAG,GAC3DX,EAAII,SAASqL,EAAW7G,GAAGlE,EAAI6L,EAAQd,EAAW7G,GAAGjE,EAAG,EAAG,GAC3DX,EAAII,SAASqL,EAAW7G,GAAGlE,EAAG+K,EAAW7G,GAAGjE,EAAI4L,EAAQ,EAAG,GAC3DvM,EAAII,SAASqL,EAAW7G,GAAGlE,EAAG+K,EAAW7G,GAAGjE,EAAI4L,EAAQ,EAAG,EAC/D,CAEJ,EA+BAC,CAAelG,EAAQ,EAgIrBmG,EAAmBC,IACrB,IAAIC,EAAe,CACfjM,EAAGgM,EAAOhM,EAAIgM,EAAO9L,EAAI,EAAI,EAC7BD,EAAG+L,EAAO/L,EAAI+L,EAAO5G,EAAI,EAAI,EAC7BlF,EAAG8L,EAAO9L,EACVkF,EAAG4G,EAAO5G,EACVuG,MAAOV,GAEXF,EAAWmB,KAAKD,GAChBjB,EAAcD,EAAW,EAsCvBoB,EAAcC,IACZzB,EAASyB,GAAcnD,KAAO,EAAI,GAClC0B,EAASyB,GAAcnD,KAAO0B,EAASyB,GAAcnD,KAAO,EAC5D0B,EAASyB,GAAchD,KAAM,EAC7B7F,EAASD,EAAQ,GACjB0C,YAAW,KACP2E,EAASyB,GAAchD,KAAM,CAAK,GACnC,CAAC8B,EAAOrB,SAAW,MAEtBkC,EAAgBpB,EAASyB,IACS,IAA9BzB,EAASyB,GAAcrD,IACvBwB,EAAWD,EAAU,GACrB/G,EAASD,EAAQ,KAEjBC,EAASD,EAAQ,KAErBqH,EAAS0B,OAAOD,EAAc,IAElCxB,EAAYD,EAAS,EAEnB2B,EAAYC,IACdR,EAAgBpB,EAAS4B,GAAY,EAInCC,EAAkBC,IACpB,IAAIC,GAAW,EACf,IAAK,IAAIxI,EAAI,EAAGA,EAAIyG,EAASvC,OAAQlE,IACD,WAA5B2G,EAAQ4B,GAAa1D,GACjB8B,EAAQ4B,GAAazM,EAAI2K,EAASzG,GAAGlE,GACrC6K,EAAQ4B,GAAazM,EAAI2K,EAASzG,GAAGlE,EAAI2K,EAASzG,GAAGhE,GACrD2K,EAAQ4B,GAAaxM,EAAI0K,EAASzG,GAAGjE,GACrC4K,EAAQ4B,GAAaxM,EAAI0K,EAASzG,GAAGjE,EAAI0K,EAASzG,GAAGkB,IACrDsH,GAAW,EACY,IAAnB/B,EAASzG,GAAG6E,GACZuD,EAASpI,GAETiI,EAAWjI,IAIf2G,EAAQ4B,GAAazM,EAAIkL,EAAOlL,GAChC6K,EAAQ4B,GAAazM,EAAIkL,EAAOlL,EAAIkL,EAAOhL,GAC3C2K,EAAQ4B,GAAaxM,EAAIiL,EAAOjL,EAAIiL,EAAO9F,GAC3CyF,EAAQ4B,GAAaxM,EAAIiL,EAAOjL,GAChCyM,GAAW,EApDnBxC,EAAQ,GAAK,GACbC,EAASD,EAAQ,GACjB6B,EAAgBb,IAEhBjK,EAAa,QAkDE4J,EAAQ4B,GAAazM,EAAI2K,EAASzG,GAAGlE,GAC5C6K,EAAQ4B,GAAazM,EAAI2K,EAASzG,GAAGlE,EAAI2K,EAASzG,GAAGhE,GACrD2K,EAAQ4B,GAAaxM,EAAI0K,EAASzG,GAAGjE,EAAI0K,EAASzG,GAAGkB,GACrDyF,EAAQ4B,GAAaxM,EAAI0K,EAASzG,GAAGjE,GAClB,IAAnB0K,EAASzG,GAAG6E,KACZ2D,GAAW,EACXJ,EAASpI,IAIrB,OAAOwI,CAAQ,EAyCbC,GAAeA,KACZxK,EAAavC,GAAc,KAAOA,KAAe,GAhKhCgN,MACtB,IAAIC,EAAYpK,OAAOC,OAAO8G,GACnBlF,KAAKiC,SACL,IACPsG,EAAU7M,EAAI,EACd6M,EAAU1M,MAhQG,IAkQb0M,EAAU7M,EAAIF,EAAO+M,EAAU3M,EAC/B2M,EAAU1M,OAnQG,GAqQjB0M,EAAU5M,EAAI,EACd0K,EAASuB,KAAKW,GACdjC,EAAYD,EAAS,EAqJjBiC,GAxIeE,MACnB,IAAIC,EAAY,CAAC,GACO,IAApB7B,EAAOvB,UACY,IAAnBuB,EAAOtB,UACPmD,EAAYtK,OAAOC,OAAOqH,GAC1BgD,EAAU/M,EAAIkL,EAAOlL,EAAI,EAAIkL,EAAOhL,EAAI,EACxC6M,EAAU9M,EAAIiL,EAAOjL,EACrB4K,EAAQqB,KAAKa,GACb7B,EAAOtB,QAAUsB,EAAOrB,SACxB7D,YAAW,KACPkF,EAAOtB,QAAU,CAAC,GACnB,CAACsB,EAAOrB,WACXiB,EAAWD,GACXK,EAAOvB,UAAW,EACtB,EA4HAmD,GA1HoBE,MACpB,IAAID,EAAY,CAAC,EACbE,EAAS3I,KAAKiC,SACd2G,EAAiB5I,KAAKgC,MAAMhC,KAAKiC,SAAW+D,GAC5C2C,EAAS,MACTF,EAAYtK,OAAOC,OAAOsH,GAC1B+C,EAAU/M,EAAI2K,EAASuC,GAAgBlN,EAAIkL,EAAOhL,EAAI,EACtD6M,EAAU9M,EAAI0K,EAASuC,GAAgBjN,EACvC4K,EAAQqB,KAAKa,GACbjC,EAAWD,GACf,EAiHAmC,GA5CkBG,MAClB,IAAIC,EAAW,GACf,GAAIvC,EAAQzC,OAAS,EAAG,CAEpB,IAAK,IAAIlE,EAAI,EAAGA,EAAI2G,EAAQzC,OAAQlE,IAC3BsI,EAAetI,KACM,WAAlB2G,EAAQ3G,GAAG6E,GACP8B,EAAQ3G,GAAGjE,EAAI,IACf4K,EAAQ3G,GAAGjE,GAAK4K,EAAQ3G,GAAG/D,MACvB0K,EAAQ3G,GAAGgF,WAAa2B,EAAQ3G,GAAGiF,aACnC0B,EAAQ3G,GAAGgF,WAAa2B,EAAQ3G,GAAGgF,WAAa,EAEhD2B,EAAQ3G,GAAGgF,WAAa,EAE5BkE,EAASlB,KAAKrB,EAAQ3G,KAGtB2G,EAAQ3G,GAAGjE,EAAIJ,IACfgL,EAAQ3G,GAAGjE,GAAK4K,EAAQ3G,GAAG/D,MAC3BiN,EAASlB,KAAKrB,EAAQ3G,MAKtC4G,EAAWsC,EACf,GAoBAD,GAlBqBE,MACrB,GAAItC,EAAW3C,OAAS,EAAG,CACvB,IAAK,IAAIlE,EAAI,EAAGA,EAAI6G,EAAW3C,OAAQlE,IAC/B6G,EAAW7G,GAAGyH,MAAQ/L,EAAY,EAClCmL,EAAW7G,GAAGyH,MAAQZ,EAAW7G,GAAGyH,MAAQ/L,EAE5CmL,EAAWsB,OAAOnI,EAAG,GAG7B8G,EAAcD,EAClB,GASAsC,GAvNgBC,MAIhB,OAHI9C,EAAeE,OAASJ,IACxBE,EAAeE,MAAQ,GAEnBF,EAAe3K,KAAK8K,EAASH,EAAeE,OAAO1B,MACvD,IAAK,OACG2B,EAASH,EAAeE,OAAO1K,EAAI,EACnC2K,EAASH,EAAeE,OAAO1K,EAAI2K,EAASH,EAAeE,OAAO1K,EAjN7D,GAoNLwK,EAAe3K,KAAK8K,EAASH,EAAeE,OAAO1B,KAAO,QAC1D2B,EAASH,EAAeE,OAAO1K,EAAI2K,EAASH,EAAeE,OAAO1K,EArN7D,GAuNT,MACJ,IAAK,QACG2K,EAASH,EAAeE,OAAO1K,EAAI2K,EAASH,EAAeE,OAAOxK,EAAIJ,EAAO,EAC7E6K,EAASH,EAAeE,OAAO1K,EAAI2K,EAASH,EAAeE,OAAO1K,EA1N7D,EA6NLwK,EAAe3K,KAAK8K,EAASH,EAAeE,OAAO1B,KAAO,OAMlE2B,EAASH,EAAeE,OAAOxB,WAAayB,EAASH,EAAeE,OAAOvB,aAC3EwB,EAASH,EAAeE,OAAOxB,WAAayB,EAASH,EAAeE,OAAOxB,WAAa,EAExFyB,EAASH,EAAeE,OAAOxB,WAAa,EAEhDsB,EAAeE,QAEf,IAAK,IAAIxG,EAAI,EAAGA,EAAIyG,EAASvC,OAAQlE,IACV,IAAnByG,EAASzG,GAAG6E,KACR4B,EAASzG,GAAGlE,EAAI2K,EAASzG,GAAGhE,EAAI,GAAKyK,EAASzG,GAAGlE,EAAIF,GACrD6K,EAASzG,GAAGlE,EAAI2K,EAASzG,GAAGlE,EAAI2K,EAASzG,GAAG/D,MACxCwK,EAASzG,GAAGgF,WAAayB,EAASzG,GAAGiF,aACrCwB,EAASzG,GAAGgF,WAAayB,EAASzG,GAAGgF,WAAa,EAElDyB,EAASzG,GAAGgF,WAAa,GAG7ByB,EAAS0B,OAAOnI,EAAG,IAI/B0G,EAAYD,GACZF,EAAkBD,EAAe,EA0KjC8C,EAAa,EAkEjB,OA9DA9J,EAAAA,EAAAA,YAAU,KACN,MACMoC,EADSzE,EAAU0E,QACFC,WAAW,MAClC,IAAIC,EACJ,OAAQ/E,GACJ,IAAK,OACGkJ,GAAS,GAAKI,EAAU,GACxB1G,EAAWgC,GACXvG,EAAoBuG,EAASA,EAAQ/B,OAAOtE,MAAOqG,EAAQ/B,OAAOrE,QAClEmN,KACApB,EAAY3F,GArTC7B,EAsTW8E,EAtTC7E,EAsTU6E,GAtT3BvJ,EAsTOsG,GArTvBnG,UAAY,MAChBH,EAAIuF,KAAO,iBACXvF,EAAIwF,SAAS,QAAUoF,EAAOnG,EAAa,EAAGlE,EAAOmE,EAAc,EAAG,KAoT1DgC,YAAW,KACP5D,EAAcD,EAAa,EAAE,GAC9B,CAACvC,KAECsK,EAAQ,EACbjJ,EAAa,OAEI,IAAZqJ,GACLrJ,EAAa,OAEjB,MACJ,IAAK,QA7USgF,EAAC3G,EAAKyE,EAAYC,KACpC1E,EAAIG,UAAY,MAChBH,EAAIuF,KAAO,iBACXvF,EAAIwF,SAAS,SAAU,EAAIf,EAAY,EAAIC,EAAa,IAAI,EA2UpDiC,CAAcL,EAASiD,EAAWA,GAClC,MACJ,IAAK,MA3UO1C,EAAC7G,EAAKyE,EAAYC,KAClCJ,EAAWtE,GACXA,EAAIG,UAAY,MAChBH,EAAIuF,KAAO,iBACXvF,EAAIwF,SAAS,UAAW,EAAIf,EAAY,EAAIC,EAAa,IAAI,EAwUrDmC,CAAYP,EAASiD,EAAWA,GAChC,MACJ,IAAK,MAxVQ3C,EAAC5G,EAAKyE,EAAYC,KACnC1E,EAAIG,UAAY,MAChBH,EAAIuF,KAAO,iBACXvF,EAAIwF,SAAS,YAAa,EAAIf,EAAY,EAAIC,EAAa,IAAI,EAsVvDkC,CAAaN,EAASiD,EAAWA,GACjC,MACJ,IAAK,QAcL,QACI,MAZJ,IAAK,UACDwB,EAAS,GACT9G,EAAS,GACT4G,EAAS,GACTa,EAAc,IACdF,EAAW,IAnUJyC,MACf,IAAIC,EAAa,CAAC,EACdC,EAAc,GACdC,EAAoB,CAAEhD,MAAO,EAAG7K,KAAM,IAC1C,IAAK,IAAIqE,EAAI,EAAGA,EAAI7C,EAAK+I,GAAO9E,OAAO8C,OAAQlE,IAC3C,IAAK,IAAIoH,EAAI,EAAGA,EAAIjK,EAAK+I,GAAO9E,OAAOpB,GAAGkE,OAAQkD,IAC9C,OAAQjK,EAAK+I,GAAO9E,OAAOpB,GAAGoH,IAC1B,KAAK,EACDkC,EAAa/K,OAAOC,OAAOoG,GAC3B0E,EAAWxN,EAAIsL,EAAIzC,EAAY,IAC/B2E,EAAWvN,EAAI,GAAKiE,EAAI2E,EAAY,IACpC2E,EAAWxE,IAAM9E,EACjBuJ,EAAYvB,KAAKsB,QACiB7F,IAA9B+F,EAAkB7N,KAAKqE,IACvBwJ,EAAkB7N,KAAKqM,KAAK,SAEhC,MACJ,KAAK,EACDsB,EAAa/K,OAAOC,OAAO4G,GAC3BkE,EAAWxN,EAAIsL,EAAIzC,EAAY,IAC/B2E,EAAWvN,EAAI,GAAKiE,EAAI2E,EAAY,IACpC2E,EAAWxE,IAAM9E,EACjBuJ,EAAYvB,KAAKsB,QACiB7F,IAA9B+F,EAAkB7N,KAAKqE,IACvBwJ,EAAkB7N,KAAKqM,KAAK,SAEhC,MACJ,KAAK,EACDsB,EAAa/K,OAAOC,OAAO6G,GAC3BiE,EAAWxN,EAAIsL,EAAIzC,EAAY,IAC/B2E,EAAWvN,EAAI,GAAKiE,EAAI2E,EAAY,IACpC2E,EAAWxE,IAAM9E,EACjBuJ,EAAYvB,KAAKsB,QACiB7F,IAA9B+F,EAAkB7N,KAAKqE,IACvBwJ,EAAkB7N,KAAKqM,KAAK,SAEhC,MACJ,KAAK,EACDsB,EAAa/K,OAAOC,OAAOoH,GAC3B0D,EAAWxN,EAAIsL,EAAIzC,EAAY,IAC/B2E,EAAWvN,EAAI,EAAIiE,EAAI2E,EAAY,IACnC4E,EAAYvB,KAAKsB,GAQjCjD,EAAWlJ,EAAK+I,GAAOuD,SACvB/C,EAAY6C,GACZhD,EAAkBiD,EAAkB,EAiR5BH,GACApC,EAAU1I,OAAOC,OAAO+G,IACxBrH,EAAc,GACdnB,EAAa,QAvVF2M,IAACtO,EAAKyE,EAAYC,EA4VrCZ,EAAWC,KAAOiB,KAAKgC,MAAMnE,EAAaxC,GAC1CyD,EAAWE,MAAQA,EACnBF,EAAWpC,UAAYA,EACvBF,EAAiBsC,GACjB,MAAMoD,EAASA,KACXT,EAAmBU,OAAOC,sBAAsBF,EAAO,EAG3D,OADAA,IACO,KACHC,OAAOE,qBAAqBZ,EAAiB,CAChD,GACF,CAAC/E,EAAWmB,KAERyE,EAAAA,EAAAA,KAAA,UAAQC,IAAK1F,EAAW5B,MAAO,IAAKC,OAAQ,IACnDsH,MAAO,CAAEC,UAAW,SAAS7F,OACjC,CC7wBO,MAAM2M,EAAeA,CAACC,EAAQC,EAAWC,EAAWC,EAAcC,KACrE,OAAQJ,GACJ,IAAK,WACDI,EAAKC,sBAAsBD,EAAKE,mBAChCL,GAAU,GACV,MACJ,IAAK,eACqB,SAAnBG,EAAKlN,UACJkN,EAAKjN,aAAa,SACM,UAAnBiN,EAAKlN,WACVkN,EAAKjN,aAAa,QAEtB8M,GAAU,GACV,MACJ,IAAK,MACDG,EAAKjN,aAAa,WAClB8M,GAAU,GACV,MACJ,IAAK,aACDG,EAAKG,mBAAmBH,EAAKI,gBAC7BP,GAAU,GACV,MACJ,IAAK,sBACDG,EAAKK,iBAAiBL,EAAKM,cAC3BT,GAAU,GACV,MAEJ,KAAK,EACD,MACJ,QACIA,GAAU,GAElB,EChCSU,EAAgBA,CAACC,EAASC,EAAYT,KAoD/C,GAAgB,OAAZQ,EACAC,EAnDmB,CACnB,KAAQ,CACJ,WAAY,CACR,OAAU,MACV,QAAW,QACX,UAAY,GAEhB,eAAgB,CACZ,OAAU,eACV,QAAW,IACX,UAAY,GAEhB,WAAa,CAAC,EACd,SAAY,CACR,OAAU,WACV,UAAY,GAEhB,WAAa,CAAC,EACd,MAAS,CACL,OAAU,QACV,QAAW,eACX,UAAY,IAGpB,KAAQ,CACJ,WAAc,CACV,OAAU,aACV,UAAY,EACZ,UAAY,GAEhB,uBAAwB,CACpB,OAAU,sBACV,UAAY,EACZ,UAAY,IAGpB,KAAQ,CACJ,KAAQ,CACJ,OAAU,OACV,QAAW,KACX,UAAY,EACZ,MAAS,mBAEb,MAAS,CACL,OAAU,QACV,UAAY,EACZ,MAAS,0BAOhB,CA0BDA,EAzBqB,IACdD,EACK,KAAQ,IACDA,EAAc,KACjB,WAAY,IACLA,EAAc,KAAE,YACnB,UAAaR,EAAKU,YAEtB,eAAgB,IACTF,EAAc,KAAE,gBACnB,UAAaR,EAAKU,aAG1B,KAAQ,IACDF,EAAc,KACjB,WAAc,IACPA,EAAc,KAAc,WAC/B,SAAYR,EAAKI,gBAErB,uBAAwB,IACjBI,EAAc,KAAE,wBACnB,SAAYR,EAAKM,gBAKzC,GCjFSK,EAAgBjO,IAAuF,IAAtF,kBAAEwN,EAAiB,qBAAED,EAAoB,aAAEF,EAAY,SAAEa,EAAQ,YAAEC,GAAanO,EAC1G,MAAOoO,EAAaC,IAAkB1N,EAAAA,EAAAA,UAAS2N,gBAAgBJ,KACxDK,EAAcC,IAAmB7N,EAAAA,EAAAA,UAAS,KAC1C8N,EAAQC,IAAa/N,EAAAA,EAAAA,UAAS,GA0C/BgO,GACFC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACKhN,OAAOiN,KAAKV,GAAaW,KAAKC,IAC3BJ,EAAAA,EAAAA,MAAA,OAAe1I,MAAO,CAAE+I,QAAS,OAAQC,cAAe,MAAOvQ,MAAO,OAAQwQ,WAAY,OAAQN,SAAA,EAC9F7I,EAAAA,EAAAA,KAAA,OAAKE,MAAO,CAAEvH,MAAO,OAAQC,OAAO,OAAQqQ,QAAS,OAAQG,eAAgB,QAASC,WAAY,SAAUC,UAAW,UAAWT,UAACD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAIG,EAAI,SAC1IZ,EAAYY,GAAKF,KAAKC,KAAI,CAACQ,EAASzF,KACjC9D,EAAAA,EAAAA,KAAA,UAEIE,MAAO,CAAEvH,MAAO,OAAQC,OAAO,OAAQ4Q,OAAQ,qBAC/CC,cAAgBC,GAdlBC,EAACX,EAAKlF,KACxBsE,EAAYY,GAAKF,KAAKrD,OAAO3B,EAAO,GACpCuE,EAAeD,GACfM,EAAUD,EAAS,EAAE,EAWqBkB,CAAcX,EAAKlF,GACzC8F,QAASA,IAhCXC,EAACb,EAAKlF,KACxB0E,EAAgB,oBACG,IAAIsB,SAAQ,CAACC,EAASC,KACrCC,SAASC,iBAAiB,WAAYR,GAAMK,EAAQL,EAAEV,OACtD5J,YAAW,KACP6K,SAASE,oBAAoB,WAAYT,GAAMK,EAAQL,EAAEV,OACzDgB,EAAO,UAAU,GAClB,IAAM,IAEFI,MAAMC,IACbjC,EAAYY,GAAKF,KAAKhF,GAASuG,EAC/BhC,EAAeD,GACfI,EAAgB,GAAG,IACpB8B,OAAOC,IACN/B,EAAgB+B,EAAM,GACxB,EAiBiCV,CAAcb,EAAKlF,GAAO+E,SAC3CU,GAJOP,MAMbhJ,EAAAA,EAAAA,KAAA,OAAKE,MAAO,CAAE+I,QAAS,OAAQC,cAAe,UAAWL,SACpDT,EAAYY,GAAKF,KAAKtH,OAAS,IAC5BxB,EAAAA,EAAAA,KAAA,UAAQ4J,QAASA,IAtDlBZ,KACnBR,EAAgB,oBACG,IAAIsB,SAAQ,CAACC,EAASC,KACrCC,SAASC,iBAAiB,WAAYR,GAAMK,EAAQL,EAAEV,OACtD5J,YAAW,KACP6K,SAASE,oBAAoB,WAAYT,GAAMK,EAAQL,EAAEV,OACzDgB,EAAO,UAAU,GAClB,IAAM,IAEFI,MAAMC,IACbjC,EAAYY,GAAKF,KAAKV,EAAYY,GAAKF,KAAKtH,QAAU6I,EACtDhC,EAAeD,GACfI,EAAgB,GAAG,IACpB8B,OAAOC,IACN/B,EAAgB+B,EAAM,GACxB,EAuCyCC,CAAcxB,GAAKH,SAAC,UAZ7CG,KAgBbT,KAGHkC,EAAU,CACZC,QAASA,KACLvC,EAAYC,GACZb,GAAqB,GACrBF,EAAa,KAAK,EAEtBsD,MAAOA,KACHtC,EAAeH,GACfQ,EAAUD,EAAS,EAAE,EAEzBmC,OAAQA,KACJvC,EAAeH,GACfX,GAAqB,GACrBF,EAAa,KAAK,GAQ1B,OALAzK,EAAAA,EAAAA,YAAU,KACF4K,GACAH,EAAa,CAAEwD,MAjFT,WAiFuBlC,KAAMA,EAAM8B,QAASA,GACtD,GACD,CAACjD,EAAmBY,EAAaG,EAAcE,KAC3CzI,EAAAA,EAAAA,KAAA8K,EAAAA,SAAA,GAAK,ECvED,SAASC,EAAM/Q,GAAgG,IAA/F,WAAEG,EAAU,OAAE+M,EAAM,UAAEC,EAAS,QAAEW,EAAO,WAAEC,EAAU,UAAEX,EAAS,aAAEC,EAAY,YAAE2D,GAAahR,EACzH,MAAMiR,GAAkBzQ,EAAAA,EAAAA,WACjB0N,EAAUC,IAAexN,EAAAA,EAAAA,UAAS,CACvCqG,GAAI,CAAE8H,KAAM,CAAC,IAAK,IAAK,WAAYoC,QAAQ,GAC3CjK,KAAM,CAAE6H,KAAM,CAAC,IAAK,IAAK,aAAcoC,QAAQ,GAC/CpO,KAAM,CAAEgM,KAAM,CAAC,IAAK,IAAK,aAAcoC,QAAQ,GAC/CnO,MAAO,CAAE+L,KAAM,CAAC,IAAK,IAAK,cAAeoC,QAAQ,GACjDC,IAAK,CAAErC,KAAM,CAAC,KAAMoC,QAAQ,GAC5BE,IAAK,CAAEtC,KAAM,CAAC,KAAMoC,QAAQ,GAC5BrO,MAAO,CAAEiM,KAAM,CAAC,IAAK,IAAK,SAAUoC,QAAQ,KAExCjR,EC3BO,SAAkBE,EAAY+N,GAE3C,IAAKmD,EAASC,IAAc3Q,EAAAA,EAAAA,UAAS,CACnCqG,IAAI,EACJC,MAAM,EACNnE,MAAM,EACNC,OAAO,EACPoO,KAAK,EACLC,KAAK,EACLvO,OAAO,IAET,MAAM0O,GAAcC,EAAAA,EAAAA,cAClB,CAACxC,EAAKyC,KACJ,MAAMC,EAAW7P,OAAOiN,KAAKZ,GAC7B,IAAK,IAAI5K,EAAI,EAAGA,EAAIoO,EAASlK,OAAQlE,IAAK,CACxC,IAAIqO,EAAezD,EAASwD,EAASpO,IAAIwL,KACzC,IAAK,IAAIpE,EAAI,EAAGA,EAAIiH,EAAanK,OAAQkD,IACnCiH,EAAajH,KAAOsE,GACtBsC,GAAYM,IAAC,IAAWA,EAAG,CAACF,EAASpO,IAAKmO,KAGhD,IAEF,CAACvD,IAGG2D,GAAiBL,EAAAA,EAAAA,cACpBM,IACCP,EAAYO,EAAM9C,KAAK,EAAK,GAE9B,CAACuC,IAEGQ,GAAmBP,EAAAA,EAAAA,cACtBM,IACCP,EAAYO,EAAM9C,KAAK,EAAM,GAE/B,CAACuC,IAuBH,OApBA3O,EAAAA,EAAAA,YAAU,KACRqN,SAASC,iBAAiB,UAAW2B,GAC9B,KACL5B,SAASE,oBAAoB,UAAW0B,EAAe,IAExD,CAACA,KAEJjP,EAAAA,EAAAA,YAAU,KACRqN,SAASC,iBAAiB,QAAS6B,GAC5B,KACL9B,SAASE,oBAAoB,QAAS4B,EAAiB,IAExD,CAACA,KAEJnP,EAAAA,EAAAA,YAAU,KACHzC,GACHmR,EAAW,IAAKD,EAASxO,OAAO,GAClC,GACC,CAAC1C,IAEGkR,CACT,CDjCmBW,CAAS7R,EAAY+N,IAC/B9N,EAAWC,IAAgBM,EAAAA,EAAAA,UAAS,UACpCqN,EAAYiE,IAAiBtR,EAAAA,EAAAA,UAAS,SACtCL,EAAY4R,IAAiBvR,EAAAA,EAAAA,UAAS,IACtCwR,EAAgBC,IAAqBzR,EAAAA,EAAAA,WAAS,IAC9CiN,EAAcD,IAAmBhN,EAAAA,EAAAA,WAAS,IAC1C+M,EAAgBD,IAAqB9M,EAAAA,EAAAA,WAAS,IAC9C6M,EAAmBD,IAAwB5M,EAAAA,EAAAA,WAAS,IACpD6B,EAAY6P,IAAiB1R,EAAAA,EAAAA,UAAS,CAC3C8B,KAAM,EACNC,MAAO,EACPtC,UAAW,UAEPF,EAAoBsC,IACxB6P,EAAc7P,EAAW,EAGrB8P,EAAqBA,CAACtD,EAAKyC,EAAOc,KACtCtC,SAASuC,cAAc,IAAIC,cAAchB,EAAO,CAAEzC,IAAKd,EAASc,GAAKF,KAAK,GAAIyD,OAAQA,IAAW,EAG7FG,EAAmBA,CAACZ,EAAO1G,KACZ,eAAf0G,EAAMa,KACR1S,EAASmL,IAAU,EAEG,aAAf0G,EAAMa,MAGS,gBAAfb,EAAMa,KAFb1S,EAASmL,IAAU,EAKG,cAAf0G,EAAMa,MACb9Q,OAAO+Q,OAAOd,EAAMe,SAASC,SAASjT,IACpC,IAAIiP,EAAO,GACPiE,EAAWlT,EAAEmT,QAAbD,EAAyBlT,EAAEoT,QAC3BC,EAAgB,CAClBlM,GAAIiJ,SAASkD,eAAe,kBAAkBC,wBAC9CnM,KAAMgJ,SAASkD,eAAe,oBAAoBC,wBAClDtQ,KAAMmN,SAASkD,eAAe,oBAAoBC,wBAClDrQ,MAAOkN,SAASkD,eAAe,qBAAqBC,wBACpDjC,IAAKlB,SAASkD,eAAe,iBAAiBC,wBAC9ChC,IAAKnB,SAASkD,eAAe,iBAAiBC,yBAEhDvR,OAAOiN,KAAKoE,GAAeJ,SAAS9D,IAC9B+D,GAASG,EAAclE,GAAK5P,GAAK2T,GAASG,EAAclE,GAAK5P,EAAI8T,EAAclE,GAAKrQ,OAASoU,GAASG,EAAclE,GAAK3P,GAAK0T,GAASG,EAAclE,GAAK3P,EAAI6T,EAAclE,GAAKpQ,QACnLkQ,EAAKxD,KAAK0D,EACZ,IAEFnN,OAAOiN,KAAKZ,GAAU4E,SAAS9D,IACzBF,EAAKuE,SAASrE,GAChB/O,EAAS+O,IAAO,EAEhB/O,EAAS+O,IAAO,CAClB,GACA,GAEN,EA4DF,OAhCApM,EAAAA,EAAAA,YAAU,KAENwP,EADgB,SAAdhS,EAIJ,GACC,CAACA,KAEJwC,EAAAA,EAAAA,YAAU,KAWRqK,EAAaC,EAAQC,EAAWC,EAAWC,EAV9B,CACXjN,UAAWA,EACXC,aAAcA,EACduN,aAAcA,EACdD,gBAAiBA,EACjBD,eAAgBA,EAChBD,kBAAmBA,EACnBD,kBAAmBA,EACnBD,qBAAsBA,GAEsC,GAC7D,CAACL,KAEJtK,EAAAA,EAAAA,YAAU,KAORiL,EAAcC,EAASC,EANV,CACX3N,UAAWA,EACXwN,aAAcA,EACdF,eAAgBA,EAChBM,WAAYA,GAE0B,GACvC,CAAC5N,EAAW4N,EAAYJ,EAAcF,KAGvCkB,EAAAA,EAAAA,MAAA,OAAKzG,GAAG,kBAAiB0G,SAAA,EACvB7I,EAAAA,EAAAA,KAAA,OACEmC,GAAG,wBACHlC,IAAKgL,EACLxB,cAAgBC,GA9DI4D,EAACxB,EAAO1G,KAChC,IAAImI,EAAU,CAAC,EAEf,GADAzB,EAAM0B,iBACS,WAAXpI,EACFmI,EAAU,CACR,KAAQ,CAAErG,OAAQA,KAAQS,GAAgB,EAAM,SAE7C,GAAe,eAAXvC,EACTmI,EAAU,CACR,KAAQ,CAAErG,OAAQA,KAAQO,GAAkB,EAAM,SAE/C,GAAe,WAAXrC,GACU,SAAf4C,EAAuB,CACzB,IAAIyF,EAA0B,SAAdrT,EAAuB,QAAU,OACjDmT,EAAU,CACR,aAAc,CAAErG,OAAQA,KAAQ7M,EAAaoT,EAAU,GACvD,WAAY,CAAEvG,OAAQA,KAAQ7M,EAAa,UAAU,GAEzD,CAEF2Q,EAAY0C,UACZ1C,EAAY2C,YAAY7B,EAAMkB,QAASlB,EAAMmB,SAC7CjC,EAAY4C,WAAWL,EAAQ,EAwCLD,CAAkB5D,EAAG,UAAUb,SAErC,SAAfb,GACChI,EAAAA,EAAAA,KAAA,OAAKmC,GAAG,oBAAmB0G,UACzBD,EAAAA,EAAAA,MAAA,UACEzG,GAAG,WACH0L,SAAWnE,IACTuC,EAAcvC,EAAEtE,OAAOiF,OACvBhQ,EAAa,QAAQ,EACrBwO,SAAA,EAEF7I,EAAAA,EAAAA,KAAA,UAAQqK,MAAM,OAAMxB,SAAE,iBACtB7I,EAAAA,EAAAA,KAAA,UAAQqK,MAAM,QAAOxB,SAAC,WACtB7I,EAAAA,EAAAA,KAAA,UAAQqK,MAAM,WAAUxB,SAAC,cACzB7I,EAAAA,EAAAA,KAAA,UAAQqK,MAAM,iBAAgBxB,SAAC,wBAGpB,UAAfb,GACEhI,EAAAA,EAAAA,KAAC8N,EAAK,CAAC7T,SAAUA,EAAUC,iBAAkBA,EAAkBC,WAAYA,EAAYC,UAAWA,EAAWC,aAAcA,EAAcC,WAAYA,IAEtI,aAAf0N,GACEhI,EAAAA,EAAAA,KAACjG,EAAQ,CAACE,SAAUA,EAAUC,iBAAkBA,EAAkBC,WAAYA,EAAYC,UAAWA,EAAWC,aAAcA,EAAcC,WAAYA,IAEzI,mBAAf0N,GACEhI,EAAAA,EAAAA,KAACqD,EAAa,CAACpJ,SAAUA,EAAUC,iBAAkBA,EAAkBC,WAAYA,EAAYC,UAAWA,EAAWC,aAAcA,EAAcC,WAAYA,KAE7J0F,EAAAA,EAAAA,KAAA8K,EAAAA,SAAA,MAGTlD,IACCgB,EAAAA,EAAAA,MAAAkC,EAAAA,SAAA,CAAAjC,SAAA,EACED,EAAAA,EAAAA,MAAA,OAAKzG,GAAG,qBAAoB0G,SAAA,EAC1B7I,EAAAA,EAAAA,KAAA,OACEmC,GAAG,qBACH4L,UAAU,+BACVnE,QAASA,KAAUtP,EAAa,GAAI4R,EAAc5R,EAAa,GAAI,EAAGuO,UAEtE7I,EAAAA,EAAAA,KAACgO,EAAAA,IAAQ,OAEXhO,EAAAA,EAAAA,KAAA,OACEmC,GAAG,sBACH4L,UAAU,+BACVnE,QAASA,KAAUtP,EAAa,IAAM4R,EAAc5R,EAAa,GAAI,EAAGuO,UAExE7I,EAAAA,EAAAA,KAACiO,EAAAA,IAAS,UAGdrF,EAAAA,EAAAA,MAAA,OAAKzG,GAAG,sBAAqB0G,SAAA,EAC3B7I,EAAAA,EAAAA,KAAA,OACEmC,GAAG,oBACH4L,UAAU,+BACVnE,QAASA,KAAQqC,EAAc,QAAS5R,EAAa,QAAQ,EAAIwO,UAEjE7I,EAAAA,EAAAA,KAACkO,EAAAA,IAAW,OAEdlO,EAAAA,EAAAA,KAAA,OACEmC,GAAG,mBACH4L,UAAU,+BACVnE,QAASA,KACP0C,EAAmB,QAAS,WAAW,GACvClN,YAAW,IAAMkN,EAAmB,QAAS,SAAS,IAAQ,GAAG,EACjEzD,SAEDsD,GAAiBnM,EAAAA,EAAAA,KAACmO,EAAAA,IAAc,KAAMnO,EAAAA,EAAAA,KAACoO,EAAAA,IAAW,UAGvDxF,EAAAA,EAAAA,MAAA,OAAKzG,GAAG,sBAAqB0G,SAAA,EAC3B7I,EAAAA,EAAAA,KAAA,OACEmC,GAAG,mBACH4L,UAAW9T,EAAS6C,KAAO,8BAAgC,+BAC3DuR,YAAaA,IAAM/B,EAAmB,OAAQ,WAAW,GACzDgC,UAAWA,IAAMhC,EAAmB,OAAQ,SAAS,GACrDiC,aAAe7E,GAAMgD,EAAiBhD,EAAG,QACzC8E,YAAc9E,GAAMgD,EAAiBhD,EAAG,QACxC+E,WAAa/E,GAAMgD,EAAiBhD,EAAG,QACvCgF,cAAgBhF,GAAMgD,EAAiBhD,EAAG,QAAQb,UAElD7I,EAAAA,EAAAA,KAAC2O,EAAAA,IAAW,OAEd/F,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACE7I,EAAAA,EAAAA,KAAA,OACEmC,GAAG,iBACH4L,UAAW9T,EAAS+G,GAAK,8BAAgC,+BACzDqN,YAAaA,IAAM/B,EAAmB,KAAM,WAAW,GACvDgC,UAAWA,IAAMhC,EAAmB,KAAM,SAAS,GACnDiC,aAAe7E,GAAMgD,EAAiBhD,EAAG,MACzC8E,YAAc9E,GAAMgD,EAAiBhD,EAAG,MACxC+E,WAAa/E,GAAMgD,EAAiBhD,EAAG,MACvCgF,cAAgBhF,GAAMgD,EAAiBhD,EAAG,MAAMb,UAEhD7I,EAAAA,EAAAA,KAAC4O,EAAAA,IAAS,OAEZ5O,EAAAA,EAAAA,KAAA,OACEmC,GAAG,mBACH4L,UAAW9T,EAASgH,KAAO,8BAAgC,+BAC3DoN,YAAaA,IAAM/B,EAAmB,OAAQ,WAAW,GACzDgC,UAAWA,IAAMhC,EAAmB,OAAQ,SAAS,GACrDiC,aAAe7E,GAAMgD,EAAiBhD,EAAG,QACzC8E,YAAc9E,GAAMgD,EAAiBhD,EAAG,QACxC+E,WAAa/E,GAAMgD,EAAiBhD,EAAG,QACvCgF,cAAgBhF,GAAMgD,EAAiBhD,EAAG,QAAQb,UAElD7I,EAAAA,EAAAA,KAAC6O,EAAAA,IAAW,UAGhB7O,EAAAA,EAAAA,KAAA,OACEmC,GAAG,oBACH4L,UAAW9T,EAAS8C,MAAQ,8BAAgC,+BAC5DsR,YAAaA,IAAM/B,EAAmB,QAAS,WAAW,GAC1DgC,UAAWA,IAAMhC,EAAmB,QAAS,SAAS,GACtDiC,aAAe7E,GAAMgD,EAAiBhD,EAAG,SACzC8E,YAAc9E,GAAMgD,EAAiBhD,EAAG,SACxC+E,WAAa/E,GAAMgD,EAAiBhD,EAAG,SACvCgF,cAAgBhF,GAAMgD,EAAiBhD,EAAG,SAASb,UAEnD7I,EAAAA,EAAAA,KAAC8O,EAAAA,IAAY,UAGjBlG,EAAAA,EAAAA,MAAA,OAAKzG,GAAG,qBAAoB0G,SAAA,EAC1B7I,EAAAA,EAAAA,KAAA,OAAKmC,GAAG,gBACN4L,UAAW9T,EAASkR,IAAM,8BAAgC,+BAC1DkD,YAAaA,IAAM/B,EAAmB,MAAO,WAAW,GACxDgC,UAAWA,IAAMhC,EAAmB,MAAO,SAAS,GACpDiC,aAAe7E,GAAMgD,EAAiBhD,EAAG,OACzC8E,YAAc9E,GAAMgD,EAAiBhD,EAAG,OACxC+E,WAAa/E,GAAMgD,EAAiBhD,EAAG,OACvCgF,cAAgBhF,GAAMgD,EAAiBhD,EAAG,OAAOb,SAClD,OACD7I,EAAAA,EAAAA,KAAA,OAAKmC,GAAG,gBACN4L,UAAW9T,EAASmR,IAAM,8BAAgC,+BAC1DiD,YAAaA,IAAM/B,EAAmB,MAAO,WAAW,GACxDgC,UAAWA,IAAMhC,EAAmB,MAAO,SAAS,GACpDiC,aAAe7E,GAAMgD,EAAiBhD,EAAG,OACzC8E,YAAc9E,GAAMgD,EAAiBhD,EAAG,OACxC+E,WAAa/E,GAAMgD,EAAiBhD,EAAG,OACvCgF,cAAgBhF,GAAMgD,EAAiBhD,EAAG,OAAOb,SAClD,aAIP7I,EAAAA,EAAAA,KAACiI,EAAa,CACZT,kBAAmBA,EACnBD,qBAAsBA,EACtBF,aAAcA,EACda,SAAUA,EACVC,YAAaA,MAIrB,C","sources":["Apps/Arcade/Handlers/handleCanvasBorders.js","Apps/Arcade/Games/Breakout/Breakout.js","Apps/Arcade/Games/Snake/Snake.js","Apps/Arcade/Games/Space Invaders/SpaceInvaders.js","Apps/Arcade/Handlers/handleAction.js","Apps/Arcade/Handlers/handleTopMenu.js","Apps/Arcade/Components/KeybindDialog.jsx","Apps/Arcade/index.jsx","Apps/Arcade/Controls/Keyboard.js"],"sourcesContent":["export const handleCanvasBorders = (ctx, width, height) => {\r\n    ctx.fillStyle = \"silver\";\r\n    ctx.fillRect(0, 0, width, 1);\r\n    ctx.fillRect(0, 0, 1, height);\r\n    ctx.fillRect(width - 1, 0, 1, height);\r\n    ctx.fillRect(0, height - 1, width, 1);\r\n} ","import React, { useState, useRef, useEffect } from \"react\";\r\nimport LevelsJSON from \"./Breakout_Maps.json\";\r\nimport { handleCanvasBorders } from \"../../Handlers/handleCanvasBorders.js\";\r\n\r\nconst frequency = 60; //Hertz\r\nconst frameRate = 1000 / frequency; // frames / milisecond\r\nconst rows = 30;\r\nconst cols = 30;\r\nconst defaultPlayerBar = {\r\n  x: 12,\r\n  y: 27,\r\n  w: 6,\r\n  speed: 0.25,\r\n};\r\nconst defaultBall = {\r\n  x: 15,\r\n  y: 50,\r\n  r: 0.5,\r\n  dirX: 0.25,\r\n  dirY: -0.25,\r\n};\r\nconst defaultFirework = {\r\n  x: 15,\r\n  y: 52,\r\n  r: 0.25,\r\n  dirX: 0,\r\n  dirY: -0.25,\r\n  t: -5,\r\n  color: \"\",\r\n};\r\nexport default function Breakout({ controls, updateScoreboard, isSelected, gameState, setGameState, canvasZoom }) {\r\n  const canvasRef = useRef(null);\r\n  const [Maps, setMaps] = useState(JSON.parse(JSON.stringify(LevelsJSON))); //Only way to deep copy nested objects without external dependency\r\n  const [gameLevel, setGameLevel] = useState(0);\r\n  const [currLevel, setCurrLevel] = useState(Maps[gameLevel]);\r\n  const [levelHealth, setLevelHealth] = useState(currLevel.Bars);\r\n  const [frameCount, setFrameCount] = useState(0);\r\n  const [winFrameCount, setWinFrameCount] = useState(0);\r\n  let [playerBar, setPlayerBar] = useState(Object.create(defaultPlayerBar));\r\n  let [ball, setBall] = useState(Object.create(defaultBall));\r\n  let [firework1] = useState(Object.create(defaultFirework));\r\n  firework1.color = \"blue\";\r\n  let [firework2] = useState(Object.create(defaultFirework));\r\n  firework2.color = \"green\";\r\n  let [firework3] = useState(Object.create(defaultFirework));\r\n  firework3.color = \"red\";\r\n  let [firework4] = useState(Object.create(defaultFirework));\r\n  firework4.color = \"yellow\";\r\n  let [firework5] = useState(Object.create(defaultFirework));\r\n  firework5.color = \"cyan\";\r\n  let [firework6] = useState(Object.create(defaultFirework));\r\n  firework6.color = \"magenta\";\r\n  let [firework7] = useState(Object.create(defaultFirework));\r\n  firework7.color = \"white\";\r\n  const scoreboard = { time: 0, score: 0, gameState: \"Start\" };\r\n  let [score, setScore] = useState(0);\r\n\r\nuseEffect(() => {\r\n    if (controls.pause) {\r\n      if (gameState === \"Play\") {\r\n        setGameState(\"Pause\");\r\n      } else if (gameState === \"Pause\") {\r\n        setGameState(\"Play\");\r\n      } else if (\r\n        gameState === \"Win\" ||\r\n        gameState === \"End\" ||\r\n        gameState === \"Start\"\r\n      ) {\r\n        setGameState(\"Restart\");\r\n      }\r\n    }\r\n}, [controls]);\r\n\r\n  useEffect(() => {\r\n    if (gameState === \"Play\" || \"Win\") {\r\n      if (\r\n        controls.left &&\r\n        !controls.right &&\r\n        playerBar.x + playerBar.w > playerBar.w\r\n      ) {\r\n        playerBar.x = playerBar.x - playerBar.speed;\r\n      }\r\n      if (\r\n        controls.right &&\r\n        !controls.left &&\r\n        playerBar.x + playerBar.w < cols\r\n      ) {\r\n        playerBar.x = playerBar.x + playerBar.speed;\r\n      }\r\n    }\r\n  }, [controls, frameCount]);\r\n\r\n  const clearDraws = (ctx) => {\r\n    ctx.fillStyle = \"black\";\r\n    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n  };\r\n\r\n  const drawGameOver = (ctx, blockWidth, blockHeight) => {\r\n    ctx.fillStyle = \"red\";\r\n    ctx.font = \"40px monospace\"; //change this nonsense static font size\r\n    ctx.fillText(\"Game Over\", 5 * blockWidth, 17 * blockHeight, 500);\r\n  };\r\n  const drawPauseGame = (ctx, blockWidth, blockHeight) => {\r\n    ctx.fillStyle = \"red\";\r\n    ctx.font = \"40px monospace\"; //and this\r\n    ctx.fillText(\"Paused\", 8 * blockWidth, 17 * blockHeight, 500);\r\n  };\r\n  const handleFireworks = (ctx, blockWidth, blockHeight) => {\r\n    let currFirework;\r\n    for (let i = 0; i <= 6; i++) {\r\n      switch (i) {\r\n        case 0:\r\n          currFirework = firework1;\r\n          break;\r\n        case 1:\r\n          currFirework = firework2;\r\n          break;\r\n        case 2:\r\n          currFirework = firework3;\r\n          break;\r\n        case 3:\r\n          currFirework = firework4;\r\n          break;\r\n        case 4:\r\n          currFirework = firework5;\r\n          break;\r\n        case 5:\r\n          currFirework = firework6;\r\n          break;\r\n        case 6:\r\n          currFirework = firework7;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      if (currFirework.t <= -5) {\r\n        currFirework.t = Math.floor(Math.random() * 4) + 1;\r\n        currFirework.x = playerBar.x + playerBar.w / 2;\r\n        currFirework.y = 52;\r\n        currFirework.dirX = (Math.random() - 0.5) / 8;\r\n        currFirework.dirY = -0.25;\r\n      } else if (currFirework.t > 3) {\r\n        currFirework.t = currFirework.t - 1 / frequency;\r\n      } else if (currFirework.t > 0) {\r\n        currFirework.x = currFirework.x + currFirework.dirX;\r\n        currFirework.y = currFirework.y + currFirework.dirY;\r\n        checkColision(currFirework);\r\n        drawBall(ctx, blockWidth, blockHeight, currFirework);\r\n        currFirework.t = currFirework.t - 1 / frequency;\r\n      } else if (currFirework.t > -5) {\r\n        drawFirework(ctx, blockWidth, blockHeight, currFirework);\r\n        currFirework.t = currFirework.t - 1 / frequency;\r\n      }\r\n    }\r\n  };\r\n  const drawFirework = (ctx, blockWidth, blockHeight, currBall) => {\r\n    for (let i = 0; i < 12; i++) {\r\n      ctx.fillStyle = currBall.color;\r\n      ctx.scale(1, 0.5);\r\n      ctx.beginPath();\r\n      ctx.arc(\r\n        currBall.x * blockWidth +\r\n          Math.cos(((2 * Math.PI) / 12) * i) * currBall.t * 2 * blockWidth,\r\n        currBall.y * blockHeight +\r\n          Math.sin(((2 * Math.PI) / 12) * i) * 2 * currBall.t * 2 * blockHeight,\r\n        (currBall.r / 1) * blockWidth,\r\n        0,\r\n        Math.PI * 2,\r\n      );\r\n      ctx.fill();\r\n      ctx.closePath();\r\n      ctx.scale(1, 2);\r\n    }\r\n  };\r\n  const drawWinGame = (ctx, blockWidth, blockHeight) => {\r\n    clearDraws(ctx);\r\n    ctx.fillStyle = \"red\";\r\n    ctx.font = \"40px monospace\";\r\n    ctx.fillText(\"You Win\", 8 * blockWidth, 17 * blockHeight, 500);\r\n  };\r\n\r\n  const drawLevelUp = (ctx, blockWidth, blockHeight, t) => {\r\n    clearDraws(ctx);\r\n    ctx.fillStyle = \"red\";\r\n    ctx.font = \"40px monospace\";\r\n    switch (t) {\r\n      case 4:\r\n        ctx.fillText(\"Next Level\", 5 * blockWidth, 17 * blockHeight, 500);\r\n        break;\r\n      case 3:\r\n        ctx.fillText(\"3 sec\", 9 * blockWidth, 17 * blockHeight, 500);\r\n        break;\r\n      case 2:\r\n        ctx.fillText(\"2 sec\", 9 * blockWidth, 17 * blockHeight, 500);\r\n        break;\r\n      case 1:\r\n        ctx.fillText(\"1 sec\", 9 * blockWidth, 17 * blockHeight, 500);\r\n        break;\r\n      default:\r\n        ctx.fillText(\"Next Level\", 5 * blockWidth, 17 * blockHeight, 500);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const drawPlayerBar = (ctx, blockWidth, blockHeight) => {\r\n    let newX, newY;\r\n    newX = playerBar.x;\r\n    newY = playerBar.y;\r\n    ctx.fillStyle = \"cyan\";\r\n    ctx.fillRect(\r\n      newX * blockWidth,\r\n      newY * blockHeight,\r\n      playerBar.w * blockWidth,\r\n      blockHeight,\r\n    );\r\n  };\r\n  const drawHitbar = (ctx, blockWidth, blockHeight, obj) => {\r\n    let color;\r\n    switch (obj.h) {\r\n      case 3:\r\n        color = \"green\";\r\n        break;\r\n      case 2:\r\n        color = \"yellow\";\r\n        break;\r\n      case 1:\r\n        color = \"orange\";\r\n        break;\r\n      default:\r\n        color = \"blue\";\r\n        break;\r\n    }\r\n    ctx.fillStyle = color;\r\n    ctx.fillRect(\r\n      obj.x * blockWidth,\r\n      obj.y * blockHeight,\r\n      obj.w * blockWidth,\r\n      blockHeight,\r\n    );\r\n  };\r\n  const drawLevel = (ctx, blockWidth, blockHeight) => {\r\n    for (let i = 0; i < currLevel.Bars; i++) {\r\n      if (currLevel.Matrix[i].h > 0)\r\n        drawHitbar(ctx, blockWidth, blockHeight, currLevel.Matrix[i]);\r\n    }\r\n  };\r\n  const barHit = (bar) => {\r\n    if (bar.h - 1 >= 0) {\r\n      bar.h = bar.h - 1;\r\n      score = score + bar.s;\r\n      setScore(score);\r\n    }\r\n    if (bar.h === 0) {\r\n      setLevelHealth(levelHealth - 1);\r\n      if (levelHealth - 1 === 0) {\r\n        setGameState(\"LevelUp\");\r\n      }\r\n    }\r\n  };\r\n  //colisions against corners count as double damage\r\n  const checkColision = (currBall) => {\r\n    if (currBall.x === 0 || currBall.x === cols) {\r\n      currBall.dirX = -currBall.dirX;\r\n    }\r\n    if (currBall.y === 0) {\r\n      currBall.dirY = -currBall.dirY;\r\n    } else if (currBall.y === rows * 2) {\r\n      setGameState(\"End\");\r\n    }\r\n    if (currBall.y + currBall.r === playerBar.y * 2) {\r\n      if (\r\n        currBall.x >= playerBar.x &&\r\n        currBall.x <= playerBar.x + playerBar.w\r\n      ) {\r\n        currBall.dirY = -currBall.dirY;\r\n      }\r\n    }\r\n    let bar;\r\n    for (let i = 0; i < currLevel.Bars; i++) {\r\n      bar = currLevel.Matrix[i];\r\n      if (bar.h > 0) {\r\n        //compare boundaries\r\n        if (\r\n          currBall.x + currBall.r >= bar.x &&\r\n          currBall.x - currBall.r <= bar.x + bar.w &&\r\n          currBall.y + currBall.r >= bar.y * 2 &&\r\n          currBall.y - currBall.r <= (bar.y + 1) * 2\r\n        ) {\r\n          //horizontal colision\r\n          if (\r\n            currBall.x + currBall.r > bar.x &&\r\n            currBall.x - currBall.r < bar.x + bar.w\r\n          ) {\r\n            currBall.dirY = -currBall.dirY;\r\n            barHit(bar);\r\n          }\r\n          //vertical colision\r\n          if (\r\n            currBall.y + currBall.r > bar.y * 2 &&\r\n            currBall.y - currBall.r < (bar.y + 1) * 2\r\n          ) {\r\n            currBall.dirX = -currBall.dirX;\r\n            barHit(bar);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  // for some reason, arc is coming out as ellipse instead of simple sphere\r\n  // rescaling on the Y axis used as fix, all values for ball on this axis must be doubled\r\n  const drawBall = (ctx, blockWidth, blockHeight, currBall) => {\r\n    ctx.fillStyle = \"#FFFFFF\";\r\n    ctx.scale(1, 0.5);\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      currBall.x * blockWidth,\r\n      currBall.y * blockHeight,\r\n      currBall.r * blockWidth,\r\n      0,\r\n      Math.PI * 2,\r\n    );\r\n    ctx.fill();\r\n    ctx.closePath();\r\n    ctx.scale(1, 2);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n    let blockWidth = context.canvas.width / cols;\r\n    let blockHeight = context.canvas.height / rows;\r\n    let animationFrameId;\r\n    switch (gameState) {\r\n      case \"Play\":\r\n        clearDraws(context);\r\n        handleCanvasBorders(context, context.canvas.width, context.canvas.height);\r\n        drawPlayerBar(context, blockWidth, blockHeight);\r\n        drawLevel(context, blockWidth, blockHeight);\r\n        ball.x = ball.x + ball.dirX;\r\n        ball.y = ball.y + ball.dirY;\r\n        checkColision(ball);\r\n        drawBall(context, blockWidth, blockHeight, ball);\r\n        setTimeout(() => {\r\n          setFrameCount(frameCount + 1);\r\n        }, [frameRate]);\r\n        break;\r\n      case \"Pause\":\r\n        drawPauseGame(context, blockWidth, blockHeight);\r\n        break;\r\n      case \"End\":\r\n        drawGameOver(context, blockWidth, blockHeight);\r\n        break;\r\n      case \"Restart\":\r\n        setMaps(JSON.parse(JSON.stringify(LevelsJSON)));\r\n        setGameLevel(0);\r\n        setCurrLevel(Maps[gameLevel]);\r\n        setLevelHealth(currLevel.Bars);\r\n        setBall(Object.create(defaultBall));\r\n        setPlayerBar(Object.create(defaultPlayerBar));\r\n        setScore(0);\r\n        setFrameCount(1);\r\n        setGameState(\"Play\");\r\n        break;\r\n      case \"LevelUp\":\r\n        if (gameLevel + 1 === 3) {\r\n          setGameState(\"Win\");\r\n        } else {\r\n          drawLevelUp(context, blockWidth, blockHeight, 4);\r\n          setTimeout(() => {\r\n            clearDraws(context, blockWidth, blockHeight);\r\n            drawLevelUp(context, blockWidth, blockHeight, 3);\r\n          }, [1000]);\r\n          setTimeout(() => {\r\n            drawLevelUp(context, blockWidth, blockHeight, 2);\r\n          }, [2000]);\r\n          setTimeout(() => {\r\n            drawLevelUp(context, blockWidth, blockHeight, 1);\r\n          }, [3000]);\r\n          setTimeout(() => {\r\n            setGameLevel(gameLevel + 1);\r\n            setCurrLevel(Maps[gameLevel + 1]);\r\n            setLevelHealth(currLevel.Bars);\r\n            setBall(Object.create(defaultBall));\r\n            clearDraws(context);\r\n            drawLevel(context, blockWidth, blockHeight);\r\n            setGameState(\"Play\");\r\n          }, [4000]);\r\n        }\r\n        break;\r\n      case \"Win\":\r\n        setCurrLevel(Maps[3]);\r\n        drawWinGame(context, blockWidth, blockHeight);\r\n        drawPlayerBar(context, blockWidth, blockHeight);\r\n        handleFireworks(context, blockWidth, blockHeight);\r\n        setTimeout(() => {\r\n          setWinFrameCount(winFrameCount + 1);\r\n        }, [frameRate]);\r\n        break;\r\n      default:\r\n        clearDraws(context);\r\n        break;\r\n    }\r\n    scoreboard.time = Math.floor(frameCount / frequency);\r\n    scoreboard.score = score;\r\n    scoreboard.gameState = gameState;\r\n    updateScoreboard(scoreboard);\r\n    const render = () => {\r\n      animationFrameId = window.requestAnimationFrame(render);\r\n    };\r\n    render();\r\n    return () => {\r\n      window.cancelAnimationFrame(animationFrameId);\r\n    };\r\n  }, [frameCount, winFrameCount, gameState]);\r\n\r\n  return <canvas ref={canvasRef} \r\n  style={{ transform: `scale(${canvasZoom})` }}></canvas>;\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { handleCanvasBorders } from \"../../Handlers/handleCanvasBorders.js\";\r\n\r\nconst frequency = 4; //Hertz\r\nconst frameRate = 1000 / frequency; // frames / milisecond\r\n\r\nconst Snake = ({ controls, updateScoreboard, isSelected, gameState, setGameState, canvasZoom }) => {\r\n  const rows = 30;\r\n  const cols = 30;\r\n  let canvasRef = useRef(null);\r\n  let [fruit, setFruit] = useState(false);\r\n  let [fruitPos] = useState({ x: 0, y: 0 });\r\n  let [score, setScore] = useState(0);\r\n  let [snakeHeadPos] = useState({\r\n    direction: \"right\",\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n  let [previousDir, setPreviousDir] = useState(\"right\");\r\n  let [snakeBody, setSnakeBody] = useState({ x: [], y: [] });\r\n  let [initialPos, setInitialPos] = useState(false);\r\n  let [frameCount, setFrameCount] = useState(0);\r\n  const scoreboard = { time: 0, score: 0, gameState: \"Start\" };\r\n\r\n  useEffect(() => {\r\n    if (controls.pause) {\r\n      if (controls.pause) {\r\n        if (gameState === \"Play\") {\r\n          setGameState(\"Pause\");\r\n        } else if (gameState === \"Pause\") {\r\n          setGameState(\"Play\");\r\n        } else if (\r\n          gameState === \"Win\" ||\r\n          gameState === \"End\" ||\r\n          gameState === \"Start\"\r\n        ) {\r\n          setGameState(\"Restart\");\r\n        }\r\n      }\r\n    }\r\n  }, [controls]);\r\n\r\n  useEffect(() => {\r\n    if (snakeBody.x[0] === undefined) {\r\n      if (controls.up) {\r\n        snakeHeadPos.direction = \"up\";\r\n      } else if (controls.down) {\r\n        snakeHeadPos.direction = \"down\";\r\n      } else if (controls.left) {\r\n        snakeHeadPos.direction = \"left\";\r\n      } else if (controls.right) {\r\n        snakeHeadPos.direction = \"right\";\r\n      }\r\n    } else {\r\n      if (controls.up && previousDir !== \"down\") {\r\n        snakeHeadPos.direction = \"up\";\r\n      } else if (controls.down && previousDir !== \"up\") {\r\n        snakeHeadPos.direction = \"down\";\r\n      } else if (controls.left && previousDir !== \"right\") {\r\n        snakeHeadPos.direction = \"left\";\r\n      } else if (controls.right && previousDir !== \"left\") {\r\n        snakeHeadPos.direction = \"right\";\r\n      }\r\n    }\r\n  }, [controls, frameCount]);\r\n\r\n  const drawBoard = (ctx, canvasWidth, canvasHeight) => {\r\n    ctx.fillStyle = \"#000000\";\r\n    ctx.fillRect(0, 0, canvasWidth, canvasHeight);\r\n  };\r\n\r\n  const drawFruit = (ctx, blockWidth, blockHeight) => {\r\n    let newX, newY;\r\n    let overlapX,\r\n      overlapY = false;\r\n    if (!fruit) {\r\n      fruitPos.x = Math.floor(Math.random() * cols);\r\n      fruitPos.y = Math.floor(Math.random() * rows);\r\n      if (snakeBody.x[0] === undefined) {\r\n        while (fruitPos.x === snakeHeadPos.x && fruitPos.y === snakeHeadPos.y) {\r\n          fruitPos.x = Math.floor(Math.random() * cols);\r\n          fruitPos.y = Math.floor(Math.random() * rows);\r\n        }\r\n      } else {\r\n        for (let i = 0; i < snakeBody.x.length; i++) {\r\n          if (fruitPos.x === snakeBody.x[i]) {\r\n            overlapX = true;\r\n          }\r\n          if (fruitPos.y === snakeBody.y[i]) {\r\n            overlapY = true;\r\n          }\r\n        }\r\n        while (overlapX === true && overlapY === true) {\r\n          fruitPos.x = Math.floor(Math.random() * cols);\r\n          fruitPos.y = Math.floor(Math.random() * rows);\r\n          let flagX = false;\r\n          let flagY = false;\r\n          for (let i = 0; i < snakeBody.x.length; i++) {\r\n            if (fruitPos.x === snakeBody.x[i]) {\r\n              flagX = true;\r\n            }\r\n            if (fruitPos.y === snakeBody.y[i]) {\r\n              flagY = true;\r\n            }\r\n          }\r\n          overlapX = flagX;\r\n          overlapY = flagY;\r\n        }\r\n      }\r\n      newX = fruitPos.x;\r\n      newY = fruitPos.y;\r\n      setFruit(true);\r\n    } else {\r\n      newX = fruitPos.x;\r\n      newY = fruitPos.y;\r\n    }\r\n    ctx.fillStyle = \"#00FF00\";\r\n    ctx.fillRect(\r\n      newX * blockWidth,\r\n      newY * blockHeight,\r\n      blockWidth,\r\n      blockHeight,\r\n    );\r\n  };\r\n\r\n  const drawSnakeHead = (ctx, blockWidth, blockHeight) => {\r\n    let step = 1;\r\n    let newX, newY;\r\n    if (!initialPos) {\r\n      newX = 10 * blockWidth;\r\n      newY = 10 * blockHeight;\r\n      setInitialPos(true);\r\n      snakeHeadPos.x = 10;\r\n      snakeHeadPos.y = 10;\r\n    } else {\r\n      switch (snakeHeadPos.direction) {\r\n        case \"right\":\r\n          newX = snakeHeadPos.x + step;\r\n          newY = snakeHeadPos.y;\r\n          snakeHeadPos.x = snakeHeadPos.x + step;\r\n          break;\r\n        case \"left\":\r\n          newX = snakeHeadPos.x - step;\r\n          newY = snakeHeadPos.y;\r\n          snakeHeadPos.x = snakeHeadPos.x - step;\r\n          break;\r\n        case \"up\":\r\n          newX = snakeHeadPos.x;\r\n          newY = snakeHeadPos.y - step;\r\n          snakeHeadPos.y = snakeHeadPos.y - step;\r\n          break;\r\n        case \"down\":\r\n          newX = snakeHeadPos.x;\r\n          newY = snakeHeadPos.y + step;\r\n          snakeHeadPos.y = snakeHeadPos.y + step;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    setPreviousDir(snakeHeadPos.direction);\r\n    if (snakeBody.x[2] !== undefined) {\r\n      for (let i = 2; i < snakeBody.x.length; i++) {\r\n        if (\r\n          snakeBody.x[i] === snakeHeadPos.x &&\r\n          snakeBody.y[i] === snakeHeadPos.y\r\n        ) {\r\n          setGameState(\"End\");\r\n        }\r\n      }\r\n    }\r\n    if (\r\n      snakeHeadPos.x >= rows ||\r\n      snakeHeadPos.x < 0 ||\r\n      snakeHeadPos.y < 0 ||\r\n      snakeHeadPos.y >= cols\r\n    ) {\r\n      setGameState(\"End\");\r\n    } else if (fruitPos.x === snakeHeadPos.x && fruitPos.y === snakeHeadPos.y) {\r\n      setFruit(false);\r\n      setScore(score + 1);\r\n      snakeBody.x.unshift(snakeHeadPos.x);\r\n      snakeBody.y.unshift(snakeHeadPos.y);\r\n    }\r\n    ctx.fillStyle = \"#00FFFF\";\r\n    ctx.fillRect(\r\n      newX * blockWidth,\r\n      newY * blockHeight,\r\n      blockWidth,\r\n      blockHeight,\r\n    );\r\n  };\r\n\r\n  const drawSnakeBody = (ctx, blockWidth, blockHeight) => {\r\n    for (let i = 0; i < snakeBody.x.length; i++) {\r\n      ctx.fillStyle = \"#00FFFF\";\r\n      ctx.fillRect(\r\n        snakeBody.x[i] * blockWidth,\r\n        snakeBody.y[i] * blockHeight,\r\n        blockWidth,\r\n        blockHeight,\r\n      );\r\n    }\r\n    snakeBody.x.unshift(snakeHeadPos.x);\r\n    snakeBody.y.unshift(snakeHeadPos.y);\r\n    snakeBody.x.pop();\r\n    snakeBody.y.pop();\r\n  };\r\n\r\n  const endGame = (ctx, blockWidth, blockHeight) => {\r\n    drawBoard(ctx, blockWidth, blockHeight);\r\n    ctx.fillStyle = \"#FF0000\";\r\n    ctx.font = \"20px monospace\"; //I hate this\r\n    ctx.fillText(\"Game Over\", 5 * blockWidth, 17 * blockHeight, 500);\r\n  };\r\n  const pauseGame = (ctx, blockWidth, blockHeight) => {\r\n    drawBoard(ctx, blockWidth, blockHeight);\r\n    ctx.fillStyle = \"#FF0000\";\r\n    ctx.font = \"20px monospace\"; //I hate this\r\n    ctx.fillText(\"Paused\", 8 * blockWidth, 17 * blockHeight, 500);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n    let blockWidth = context.canvas.width / cols;\r\n    let blockHeight = context.canvas.height / rows;\r\n    let animationFrameId;\r\n    if (gameState === \"Play\") {\r\n      drawBoard(context, context.canvas.width, context.canvas.height);\r\n      handleCanvasBorders(context, context.canvas.width, context.canvas.height);\r\n      drawFruit(context, blockWidth, blockHeight);\r\n      drawSnakeHead(context, blockWidth, blockHeight);\r\n      drawSnakeBody(context, blockWidth, blockHeight);\r\n      setTimeout(() => {\r\n        setFrameCount(frameCount + 1);\r\n      }, [1000 / (score / 2 + frequency)]);\r\n    } else if (gameState === \"Pause\") {\r\n      pauseGame(context, blockWidth, blockHeight);\r\n    } else if (gameState === \"End\") {\r\n      drawBoard(context, context.canvas.width, context.canvas.height);\r\n      endGame(context, blockWidth, blockHeight);\r\n    } else if (gameState === \"Restart\") {\r\n      setGameState(\"Play\");\r\n      setFrameCount(1);\r\n      setFruit(false);\r\n      setInitialPos(false);\r\n      setScore(0);\r\n      setSnakeBody({ x: [], y: [] });\r\n    }\r\n    scoreboard.time = Math.floor(frameCount / (score / 2 + frequency));\r\n    scoreboard.score = score;\r\n    scoreboard.gameState = gameState;\r\n    updateScoreboard(scoreboard);\r\n    const render = () => {\r\n      animationFrameId = window.requestAnimationFrame(render);\r\n    };\r\n    render();\r\n    return () => {\r\n      window.cancelAnimationFrame(animationFrameId);\r\n    };\r\n  }, [frameCount, gameState]);\r\n\r\n  return <canvas height=\"150\" width=\"150\" ref={canvasRef} \r\n  style={{ transform: `scale(${canvasZoom})` }}></canvas>;\r\n};\r\nexport default Snake;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { handleCanvasBorders } from \"../../Handlers/handleCanvasBorders.js\";\r\nimport Maps from \"./Maps.json\";\r\n\r\nconst frequency = 60; //Hertz\r\nconst frameRate = 1000 / frequency; // frames / milisecond\r\nconst rows = 150;\r\nconst cols = 300;\r\nconst blockSize = 10;\r\nconst defaultInvaderOne = {\r\n    id: 1,\r\n    x: 10,\r\n    y: 10,\r\n    row: 0,\r\n    life: 1,\r\n    currSprite: 1,\r\n    totalSprites: 2,\r\n    w: 10,\r\n    h: 10,\r\n    hit: false,\r\n    color: \"green\",\r\n    sprites: {\r\n        1: [\r\n            [0, 0, 0, 1, 1, 1, 1, 0, 0, 0],\r\n            [0, 0, 1, 1, 1, 1, 1, 1, 0, 0],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 0, 0, 1, 1, 0, 0, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [0, 1, 1, 0, 1, 1, 0, 1, 1, 0],\r\n            [1, 1, 0, 0, 1, 1, 0, 0, 1, 1],\r\n            [1, 0, 0, 0, 0, 0, 0, 0, 0, 1],\r\n        ],\r\n        2: [\r\n            [0, 0, 0, 1, 1, 1, 1, 0, 0, 0],\r\n            [0, 0, 1, 1, 1, 1, 1, 1, 0, 0],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 0, 0, 1, 1, 0, 0, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [0, 0, 1, 0, 1, 1, 0, 1, 0, 0],\r\n            [0, 1, 1, 0, 1, 1, 0, 1, 1, 0],\r\n            [0, 1, 0, 0, 0, 0, 0, 0, 1, 1],\r\n        ]\r\n    }\r\n}\r\nconst defaultInvaderTwo = {\r\n    id: 2,\r\n    x: 10,\r\n    y: 10,\r\n    row: 0,\r\n    life: 2,\r\n    hit: false,\r\n    currSprite: 1,\r\n    totalSprites: 2,\r\n    w: 10,\r\n    h: 10,\r\n    color: \"red\",\r\n    sprites: {\r\n        1: [\r\n            [0, 1, 0, 0, 0, 0, 0, 0, 1, 0],\r\n            [0, 1, 1, 0, 0, 0, 0, 1, 1, 0],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 0, 1, 1, 1, 1, 0, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [1, 1, 1, 1, 0, 0, 1, 1, 1, 1],\r\n            [1, 1, 0, 0, 0, 0, 0, 0, 1, 1],\r\n            [0, 1, 1, 0, 0, 0, 0, 1, 1, 0],\r\n            [0, 0, 1, 1, 0, 0, 1, 1, 0, 0],\r\n        ],\r\n        2: [\r\n            [0, 0, 1, 0, 0, 0, 0, 1, 0, 0],\r\n            [0, 1, 1, 0, 0, 0, 0, 1, 1, 0],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 0, 1, 1, 1, 1, 0, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [1, 1, 1, 1, 0, 0, 1, 1, 1, 1],\r\n            [1, 1, 0, 0, 0, 0, 0, 0, 1, 1],\r\n            [1, 1, 0, 0, 0, 0, 0, 0, 1, 1],\r\n            [0, 1, 1, 1, 0, 0, 1, 1, 1, 0],\r\n        ]\r\n    }\r\n}\r\nconst defaultInvaderThree = {\r\n    id: 3,\r\n    x: 10,\r\n    y: 10,\r\n    row: 0,\r\n    life: 3,\r\n    hit: false,\r\n    currSprite: 1,\r\n    totalSprites: 2,\r\n    w: 10,\r\n    h: 10,\r\n    color: \"cyan\",\r\n    sprites: {\r\n        1: [\r\n            [0, 1, 1, 0, 0, 0, 0, 1, 1, 0],\r\n            [0, 0, 1, 0, 0, 0, 0, 1, 0, 0],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [1, 1, 0, 1, 1, 1, 1, 0, 1, 1],\r\n            [1, 1, 0, 0, 1, 1, 0, 0, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 0, 1, 1, 1, 1, 1, 1, 0, 1],\r\n            [1, 0, 1, 0, 1, 1, 0, 1, 0, 1],\r\n            [1, 0, 0, 0, 0, 0, 0, 0, 0, 1],\r\n        ],\r\n        2: [\r\n            [0, 0, 1, 0, 0, 0, 0, 1, 0, 0],\r\n            [0, 0, 1, 0, 0, 0, 0, 1, 0, 0],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [1, 1, 0, 1, 1, 1, 1, 0, 1, 1],\r\n            [1, 1, 0, 0, 1, 1, 0, 0, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 0, 1, 1, 1, 1, 1, 1, 0, 1],\r\n            [1, 0, 1, 0, 1, 1, 0, 1, 0, 1],\r\n            [1, 1, 0, 0, 0, 0, 0, 0, 1, 1],\r\n        ]\r\n    }\r\n}\r\nconst defaultBonusInvader = {\r\n    id: 8,\r\n    x: 10,\r\n    y: 10,\r\n    life: 1,\r\n    hit: false,\r\n    currSprite: 1,\r\n    totalSprites: 2,\r\n    w: 20,\r\n    h: 10,\r\n    color: \"magenta\",\r\n    sprites: {\r\n        1: [\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0],\r\n            [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0],\r\n            [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0],\r\n        ],\r\n        2: [\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0],\r\n            [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0],\r\n            [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0],\r\n\r\n        ]\r\n    }\r\n}\r\nconst defaultPlayer = {\r\n    id: 10,\r\n    x: 10,\r\n    y: 130,\r\n    speed: 2,\r\n    move: \"none\",\r\n    shooting: false,\r\n    cooling: 0,\r\n    currSprite: 1,\r\n    w: 10,\r\n    h: 10,\r\n    color: \"white\",\r\n    cooldown: 250, //milliseconds\r\n    sprites: {\r\n        1: [\r\n            [0, 0, 0, 0, 1, 1, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 1, 1, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 1, 1, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 1, 1, 0, 0, 0, 0],\r\n            [0, 0, 0, 1, 1, 1, 1, 0, 0, 0],\r\n            [0, 1, 0, 1, 1, 1, 1, 0, 1, 0],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\r\n        ]\r\n    },\r\n}\r\nconst defaultBlock = {\r\n    id: 9,\r\n    x: 10,\r\n    y: 10,\r\n    currSprite: 1,\r\n    w: 10,\r\n    h: 10,\r\n    color: \"gray\",\r\n    sprites: {\r\n        1: [\r\n            [0, 0, 0, 1, 1, 1, 1, 0, 0, 0],\r\n            [0, 0, 1, 1, 1, 1, 1, 1, 0, 0],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n            [0, 1, 1, 1, 1, 1, 1, 1, 1, 0],\r\n            [0, 0, 1, 1, 1, 1, 1, 1, 0, 0],\r\n            [0, 0, 0, 1, 1, 1, 1, 0, 0, 0],\r\n        ]\r\n    },\r\n}\r\nconst defaultPlayerBullet = {\r\n    id: \"player\",\r\n    x: 10,\r\n    y: 10,\r\n    h: 9,\r\n    w: 2,\r\n    speed: 5,\r\n    color: \"white\",\r\n    currSprite: 1,\r\n    totalSprites: 2,\r\n    sprites: {\r\n        1: [\r\n            [1, 1],\r\n            [1, 0],\r\n            [1, 1],\r\n            [0, 1],\r\n            [1, 1],\r\n            [1, 0],\r\n            [1, 1],\r\n            [0, 1],\r\n            [1, 1],\r\n        ],\r\n        2: [\r\n            [1, 1],\r\n            [0, 1],\r\n            [1, 1],\r\n            [1, 0],\r\n            [1, 1],\r\n            [0, 1],\r\n            [1, 1],\r\n            [1, 0],\r\n            [1, 1],\r\n        ]\r\n    }\r\n}\r\nconst defaultInvaderBullet = {\r\n    id: \"invader\",\r\n    x: 10,\r\n    y: 10,\r\n    currSprite: 1,\r\n    totalSprites: 1,\r\n    w: 2,\r\n    h: 9,\r\n    speed: 2,\r\n    color: \"yellow\",\r\n    sprites: {\r\n        1: [\r\n            [1, 1],\r\n            [1, 1],\r\n            [1, 1],\r\n            [1, 1],\r\n            [1, 1],\r\n            [1, 1],\r\n            [1, 1],\r\n            [1, 1],\r\n        ]\r\n    },\r\n}\r\n\r\nexport default function SpaceInvaders({ controls, updateScoreboard, isSelected, gameState, setGameState, canvasZoom }) {\r\n\r\n    const canvasRef = useRef(null);\r\n    const [score, setScore] = useState(0);\r\n    const [lives, setLives] = useState(3);\r\n    const [level, setLevel] = useState(1);\r\n    const [frameCount, setFrameCount] = useState(0);\r\n    const [enemies, setEnemies] = useState(0);\r\n    const [enemyMoveParam, setEnemyMoveParam] = useState({\r\n        index: 0,\r\n        rows: [],\r\n    });\r\n    const [entities, setEntities] = useState([]);\r\n    const [bullets, setBullets] = useState([]);\r\n    const [explosions, setExplosions] = useState([]);\r\n    const explosionLifetime = 500;\r\n    //let entities = [];\r\n    //let bullets = [];\r\n    let [player, setPlayer] = useState(Object.create(defaultPlayer));\r\n    const scoreboard = { time: 0, score: 0, gameState: \"Start\" };\r\n    const invaderSpeed = 1;\r\n\r\n    //Game state\r\n    useEffect(() => {\r\n        if (controls.pause) {\r\n            switch (gameState) {\r\n                case \"Play\":\r\n                    setGameState(\"Pause\");\r\n                    break;\r\n                case \"Pause\":\r\n                    setGameState(\"Play\");\r\n                    break;\r\n                case \"Win\":\r\n                case \"End\":\r\n                case \"Start\":\r\n                    setGameState(\"Restart\");\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }, [controls]);\r\n    //Player controls\r\n    useEffect(() => {\r\n        if (gameState === \"Play\") {\r\n            if (\r\n                controls.left &&\r\n                !controls.right &&\r\n                player.x + player.w > player.w\r\n            ) {\r\n                player.x = player.x - player.speed;\r\n            } else if (\r\n                controls.right &&\r\n                !controls.left &&\r\n                player.x + player.w < cols\r\n            ) {\r\n                player.x = player.x + player.speed;\r\n            } else if (controls.left && controls.right\r\n            ) {\r\n                player.move = \"none\";\r\n            } else if (!controls.left && !controls.right) {\r\n                player.move = \"none\";\r\n            }\r\n            if (controls.up &&\r\n                player.cooling === 0) {\r\n                player.shooting = true;\r\n            }\r\n        }\r\n    }, [controls, frameCount]);\r\n\r\n\r\n    //Drawing functions\r\n    const clearDraws = (ctx) => {\r\n        ctx.fillStyle = \"black\";\r\n        ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n    };\r\n    const drawSprite = (ctx, object) => {\r\n        if (object.hit === true) {\r\n            ctx.fillStyle = \"white\";\r\n        } else {\r\n            ctx.fillStyle = object.color;\r\n        }\r\n        for (let i = 0; i < object.sprites[object.currSprite].length; i++) {\r\n            for (let j = 0; j < object.sprites[object.currSprite][i].length; j++) {\r\n                if (object.sprites[object.currSprite][i][j] === 1) {\r\n                    ctx.fillRect(object.x + j, object.y + i, 1, 1);\r\n                }\r\n            }\r\n        }\r\n        if (object.sprites.length > 1) {\r\n            if (object.currSprite < object.sprites.length - 1) {\r\n                object.currSprite++;\r\n            } else {\r\n                object.currSprite = 1;\r\n            }\r\n        }\r\n    }\r\n    const drawExplosions = (ctx) => {\r\n        let redshift = 0;\r\n        let greenshift = 0;\r\n        let blueshift = 0;\r\n        if (explosions.length > 0) {\r\n            for (let i = 0; i < explosions.length; i++) {\r\n                if (explosions[i].decay <= explosionLifetime / 3) {\r\n                    redshift = Math.floor((explosions[i].decay) * 255 / (explosionLifetime / 3));\r\n                } else if (explosions[i].decay <= explosionLifetime * 2 / 3) {\r\n                    redshift = 255;\r\n                    greenshift = Math.floor((explosions[i].decay - explosionLifetime / 3) * 255 / (explosionLifetime / 3));\r\n                } else {\r\n                    redshift = 255;\r\n                    greenshift = 255;\r\n                    blueshift = Math.floor((explosions[i].decay - explosionLifetime * 2 / 3) * 255 / (explosionLifetime / 3));\r\n                }\r\n                ctx.fillStyle = \"rgb(\" + redshift + \",\" + greenshift + \",\" + blueshift + \")\";\r\n                let spread = 2 * explosions[i].decay / (explosionLifetime + explosions[i].decay);\r\n                let radius = explosions[i].w / 2 * spread - 10;\r\n                ctx.fillRect(explosions[i].x + radius * 2 / 3, explosions[i].y + radius * 2 / 3, 2, 2);\r\n                ctx.fillRect(explosions[i].x - radius * 2 / 3, explosions[i].y + radius * 2 / 3, 2, 2);\r\n                ctx.fillRect(explosions[i].x + radius * 2 / 3, explosions[i].y - radius * 2 / 3, 2, 2);\r\n                ctx.fillRect(explosions[i].x - radius * 2 / 3, explosions[i].y - radius * 2 / 3, 2, 2);\r\n                ctx.fillRect(explosions[i].x + radius, explosions[i].y, 2, 2);\r\n                ctx.fillRect(explosions[i].x - radius, explosions[i].y, 2, 2);\r\n                ctx.fillRect(explosions[i].x, explosions[i].y + radius, 2, 2);\r\n                ctx.fillRect(explosions[i].x, explosions[i].y - radius, 2, 2);\r\n            }\r\n\r\n        }\r\n    }\r\n    const drawGameOver = (ctx, blockWidth, blockHeight) => {\r\n        ctx.fillStyle = \"red\";\r\n        ctx.font = \"40px monospace\"; //change this nonsense static font size\r\n        ctx.fillText(\"Game Over\", 5 * blockWidth, 8 * blockHeight, 500);\r\n    };\r\n    const drawPauseGame = (ctx, blockWidth, blockHeight) => {\r\n        ctx.fillStyle = \"red\";\r\n        ctx.font = \"40px monospace\"; //and this\r\n        ctx.fillText(\"Paused\", 8 * blockWidth, 8 * blockHeight, 500);\r\n    };\r\n    const drawWinGame = (ctx, blockWidth, blockHeight) => {\r\n        clearDraws(ctx);\r\n        ctx.fillStyle = \"red\";\r\n        ctx.font = \"40px monospace\";\r\n        ctx.fillText(\"You Win\", 7 * blockWidth, 8 * blockHeight, 500);\r\n    };\r\n    const drawBottomText = (ctx, blockWidth, blockHeight) => {\r\n        ctx.fillStyle = \"red\";\r\n        ctx.font = \"10px monospace\";\r\n        ctx.fillText(\"LIFE:\" + lives, blockWidth / 2, rows - blockHeight / 4, 500);\r\n    }\r\n    const drawObjects = (context) => {\r\n        for (let i = 0; i < entities.length; i++) {\r\n            drawSprite(context, entities[i]);\r\n        }\r\n        for (let i = 0; i < bullets.length; i++) {\r\n            drawSprite(context, bullets[i]);\r\n        }\r\n        drawSprite(context, player);\r\n        drawExplosions(context);\r\n    }\r\n    //Game functions\r\n    const setUpLevel = () => {\r\n        let currEntity = {};\r\n        let newEntities = [];\r\n        let newEnemyMoveParam = { index: 0, rows: [] };\r\n        for (let i = 0; i < Maps[level].Matrix.length; i++) {\r\n            for (let j = 0; j < Maps[level].Matrix[i].length; j++) {\r\n                switch (Maps[level].Matrix[i][j]) {\r\n                    case 1:\r\n                        currEntity = Object.create(defaultInvaderOne);\r\n                        currEntity.x = j * blockSize * 1.2;\r\n                        currEntity.y = 15 + i * blockSize * 1.2;\r\n                        currEntity.row = i;\r\n                        newEntities.push(currEntity);\r\n                        if (newEnemyMoveParam.rows[i] === undefined) {\r\n                            newEnemyMoveParam.rows.push(\"right\");\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        currEntity = Object.create(defaultInvaderTwo);\r\n                        currEntity.x = j * blockSize * 1.2;\r\n                        currEntity.y = 15 + i * blockSize * 1.2;\r\n                        currEntity.row = i;\r\n                        newEntities.push(currEntity);\r\n                        if (newEnemyMoveParam.rows[i] === undefined) {\r\n                            newEnemyMoveParam.rows.push(\"right\");\r\n                        }\r\n                        break;\r\n                    case 3:\r\n                        currEntity = Object.create(defaultInvaderThree);\r\n                        currEntity.x = j * blockSize * 1.2;\r\n                        currEntity.y = 15 + i * blockSize * 1.2;\r\n                        currEntity.row = i;\r\n                        newEntities.push(currEntity);\r\n                        if (newEnemyMoveParam.rows[i] === undefined) {\r\n                            newEnemyMoveParam.rows.push(\"right\");\r\n                        }\r\n                        break;\r\n                    case 9:\r\n                        currEntity = Object.create(defaultBlock);\r\n                        currEntity.x = j * blockSize * 1.2;\r\n                        currEntity.y = 5 + i * blockSize * 1.2;\r\n                        newEntities.push(currEntity);\r\n                        break;\r\n                    case 0:\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        setEnemies(Maps[level].Enemies);\r\n        setEntities(newEntities);\r\n        setEnemyMoveParam(newEnemyMoveParam);\r\n    }\r\n    /*const playerMove = () => {\r\n        if (player.move === \"left\" &&\r\n            player.x + player.w > player.w) {\r\n            player.x = player.x - player.speed;\r\n        } else if (player.move === \"right\" &&\r\n            player.x + player.w < cols) {\r\n            player.x = player.x + player.speed;\r\n        }\r\n    }*/\r\n    const invaderMove = () => {\r\n        if (enemyMoveParam.index >= enemies) {\r\n            enemyMoveParam.index = 0;\r\n        }\r\n        switch (enemyMoveParam.rows[entities[enemyMoveParam.index].row]) {\r\n            case \"left\":\r\n                if (entities[enemyMoveParam.index].x > 2) {\r\n                    entities[enemyMoveParam.index].x = entities[enemyMoveParam.index].x - invaderSpeed;\r\n                }\r\n                else {\r\n                    enemyMoveParam.rows[entities[enemyMoveParam.index].row] = \"right\";\r\n                    entities[enemyMoveParam.index].x = entities[enemyMoveParam.index].x + invaderSpeed;\r\n                }\r\n                break;\r\n            case \"right\":\r\n                if (entities[enemyMoveParam.index].x + entities[enemyMoveParam.index].w < cols - 1) {\r\n                    entities[enemyMoveParam.index].x = entities[enemyMoveParam.index].x + invaderSpeed;\r\n                }\r\n                else {\r\n                    enemyMoveParam.rows[entities[enemyMoveParam.index].row] = \"left\";\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (entities[enemyMoveParam.index].currSprite < entities[enemyMoveParam.index].totalSprites) {\r\n            entities[enemyMoveParam.index].currSprite = entities[enemyMoveParam.index].currSprite + 1;\r\n        } else {\r\n            entities[enemyMoveParam.index].currSprite = 1;\r\n        }\r\n        enemyMoveParam.index++;\r\n        //console.log(entities[enemyMoveParam.index].sprites.length);\r\n        for (let i = 0; i < entities.length; i++) {\r\n            if (entities[i].id === 8) {\r\n                if (entities[i].x + entities[i].w > 0 && entities[i].x < cols) {\r\n                    entities[i].x = entities[i].x + entities[i].speed;\r\n                    if (entities[i].currSprite < entities[i].totalSprites) {\r\n                        entities[i].currSprite = entities[i].currSprite + 1;\r\n                    } else {\r\n                        entities[i].currSprite = 1;\r\n                    }\r\n                } else {\r\n                    entities.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n        setEntities(entities);\r\n        setEnemyMoveParam(enemyMoveParam);\r\n    }\r\n    const spawnBonusInvader = () => {\r\n        let newEntity = Object.create(defaultBonusInvader);\r\n        let side = Math.random();\r\n        if (side > 0.5) {\r\n            newEntity.x = 0;\r\n            newEntity.speed = invaderSpeed;\r\n        } else {\r\n            newEntity.x = cols - newEntity.w;\r\n            newEntity.speed = -invaderSpeed;\r\n        }\r\n        newEntity.y = 2;\r\n        entities.push(newEntity);\r\n        setEntities(entities);\r\n    }\r\n    const createExplosion = (target) => {\r\n        let newExplosion = {\r\n            x: target.x + target.w / 2 - 1,\r\n            y: target.y + target.h / 2 - 1,\r\n            w: target.w,\r\n            h: target.h,\r\n            decay: explosionLifetime\r\n        }\r\n        explosions.push(newExplosion);\r\n        setExplosions(explosions);\r\n    }\r\n    const playerShooting = () => {\r\n        let newBullet = {};\r\n        if (player.shooting === true &&\r\n            player.cooling === 0) {\r\n            newBullet = Object.create(defaultPlayerBullet);\r\n            newBullet.x = player.x - 1 + player.w / 2;\r\n            newBullet.y = player.y;\r\n            bullets.push(newBullet);\r\n            player.cooling = player.cooldown;\r\n            setTimeout(() => {\r\n                player.cooling = 0;\r\n            }, [player.cooldown]);\r\n            setBullets(bullets);\r\n            player.shooting = false;\r\n        }\r\n    }\r\n    const invaderShooting = () => {\r\n        let newBullet = {};\r\n        let chance = Math.random();\r\n        let invaderShooter = Math.floor(Math.random() * enemies);\r\n        if (chance > 0.95) {\r\n            newBullet = Object.create(defaultInvaderBullet);\r\n            newBullet.x = entities[invaderShooter].x + player.w / 2;\r\n            newBullet.y = entities[invaderShooter].y;\r\n            bullets.push(newBullet);\r\n            setBullets(bullets);\r\n        }\r\n    }\r\n    const playerHit = () => {\r\n        if (lives - 1 >= 0) {\r\n            setLives(lives - 1);\r\n            createExplosion(player);\r\n        } else {\r\n            setGameState(\"End\");\r\n        }\r\n    }\r\n    const invaderHit = (invaderIndex) => {\r\n        if (entities[invaderIndex].life - 1 > 0) {\r\n            entities[invaderIndex].life = entities[invaderIndex].life - 1;\r\n            entities[invaderIndex].hit = true;\r\n            setScore(score + 5);\r\n            setTimeout(() => {\r\n                entities[invaderIndex].hit = false;\r\n            }, [player.cooldown / 2]);\r\n        } else {\r\n            createExplosion(entities[invaderIndex]);\r\n            if (entities[invaderIndex].id !== 8) {\r\n                setEnemies(enemies - 1);\r\n                setScore(score + 10);\r\n            } else {\r\n                setScore(score + 150);\r\n            }\r\n            entities.splice(invaderIndex, 1);\r\n        }\r\n        setEntities(entities);\r\n    }\r\n    const blockHit = (blockIndex) => {\r\n        createExplosion(entities[blockIndex]);\r\n        //entities.splice(blockIndex, 1);\r\n        //setEntities(entities);\r\n    }\r\n    const checkColisions = (bulletIndex) => {\r\n        let colision = false;\r\n        for (let i = 0; i < entities.length; i++) {\r\n            if (bullets[bulletIndex].id === \"player\") {\r\n                if (bullets[bulletIndex].x > entities[i].x &&\r\n                    bullets[bulletIndex].x < entities[i].x + entities[i].w &&\r\n                    bullets[bulletIndex].y > entities[i].y &&\r\n                    bullets[bulletIndex].y < entities[i].y + entities[i].h) {\r\n                    colision = true;\r\n                    if (entities[i].id === 9) {\r\n                        blockHit(i);\r\n                    } else {\r\n                        invaderHit(i);\r\n                    }\r\n                }\r\n            } else {\r\n                if (bullets[bulletIndex].x > player.x &&\r\n                    bullets[bulletIndex].x < player.x + player.w &&\r\n                    bullets[bulletIndex].y > player.y - player.h &&\r\n                    bullets[bulletIndex].y < player.y) {\r\n                    colision = true;\r\n                    playerHit();\r\n                } else if (bullets[bulletIndex].x > entities[i].x &&\r\n                    bullets[bulletIndex].x < entities[i].x + entities[i].w &&\r\n                    bullets[bulletIndex].y > entities[i].y - entities[i].h &&\r\n                    bullets[bulletIndex].y < entities[i].y &&\r\n                    entities[i].id === 9) {\r\n                    colision = true;\r\n                    blockHit(i);\r\n                }\r\n            }\r\n        }\r\n        return colision;\r\n    }\r\n    const handleBullets = () => {\r\n        let newArray = [];\r\n        if (bullets.length > 0) {\r\n            //console.log(bullets);\r\n            for (let i = 0; i < bullets.length; i++) {\r\n                if (!checkColisions(i)) {\r\n                    if (bullets[i].id === \"player\") {\r\n                        if (bullets[i].y > 0) {\r\n                            bullets[i].y -= bullets[i].speed;\r\n                            if (bullets[i].currSprite < bullets[i].totalSprites) {\r\n                                bullets[i].currSprite = bullets[i].currSprite + 1;\r\n                            } else {\r\n                                bullets[i].currSprite = 1;\r\n                            }\r\n                            newArray.push(bullets[i]);\r\n                        }\r\n                    } else {\r\n                        if (bullets[i].y < rows) {\r\n                            bullets[i].y += bullets[i].speed;\r\n                            newArray.push(bullets[i]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            setBullets(newArray);\r\n        }\r\n    }\r\n    const handleExplosions = () => {\r\n        if (explosions.length > 0) {\r\n            for (let i = 0; i < explosions.length; i++) {\r\n                if (explosions[i].decay - frameRate > 0) {\r\n                    explosions[i].decay = explosions[i].decay - frameRate;\r\n                } else {\r\n                    explosions.splice(i, 1);\r\n                }\r\n            }\r\n            setExplosions(explosions);\r\n        }\r\n    }\r\n    const handleEvents = () => {\r\n        if ((frameCount * frameRate) % (1200 * frameRate) === 0) {\r\n            spawnBonusInvader();\r\n        }\r\n        playerShooting();\r\n        invaderShooting();\r\n        handleBullets();\r\n        handleExplosions();\r\n        //playerMove();\r\n        invaderMove();\r\n    }\r\n\r\n    //Game Loop\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const context = canvas.getContext(\"2d\");\r\n        let animationFrameId;\r\n        switch (gameState) {\r\n            case \"Play\":\r\n                if (lives >= 0 && enemies > 0) {\r\n                    clearDraws(context);\r\n                    handleCanvasBorders(context, context.canvas.width, context.canvas.height);\r\n                    handleEvents();\r\n                    drawObjects(context);\r\n                    drawBottomText(context, blockSize, blockSize);\r\n                    setTimeout(() => {\r\n                        setFrameCount(frameCount + 1);\r\n                    }, [frameRate]);\r\n                }\r\n                else if (lives < 0) {\r\n                    setGameState(\"End\");\r\n                }\r\n                else if (enemies === 0) {\r\n                    setGameState(\"Win\");\r\n                }\r\n                break;\r\n            case \"Pause\":\r\n                drawPauseGame(context, blockSize, blockSize);\r\n                break;\r\n            case \"Win\":\r\n                drawWinGame(context, blockSize, blockSize);\r\n                break;\r\n            case \"End\":\r\n                drawGameOver(context, blockSize, blockSize);\r\n                break;\r\n            case \"Start\":\r\n                //setUpLevel();\r\n                break;\r\n            case \"Restart\":\r\n                setLevel(1);\r\n                setScore(0);\r\n                setLives(3);\r\n                setExplosions([]);\r\n                setBullets([]);\r\n                setUpLevel();\r\n                setPlayer(Object.create(defaultPlayer));\r\n                setFrameCount(1);\r\n                setGameState(\"Play\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        scoreboard.time = Math.floor(frameCount / frequency);\r\n        scoreboard.score = score;\r\n        scoreboard.gameState = gameState;\r\n        updateScoreboard(scoreboard);\r\n        const render = () => {\r\n            animationFrameId = window.requestAnimationFrame(render);\r\n        };\r\n        render();\r\n        return () => {\r\n            window.cancelAnimationFrame(animationFrameId);\r\n        };\r\n    }, [gameState, frameCount]);\r\n\r\n    return <canvas ref={canvasRef} width={300} height={150}\r\n    style={{ transform: `scale(${canvasZoom})` }}></canvas>;\r\n}","export const handleAction = (action, setAction, appDialog, setAppDialog, args) =>{\r\n    switch (action) {\r\n        case \"Keybinds\":\r\n            args.setShowKeybindDialog(!args.showKeybindDialog);\r\n            setAction(false);\r\n            break;\r\n        case \"Play / Pause\":\r\n            if(args.gameState === \"Play\"){\r\n                args.setGameState(\"Pause\");\r\n            }else if(args.gameState === \"Pause\"){\r\n                args.setGameState(\"Play\");\r\n            }\r\n            setAction(false);\r\n            break;\r\n        case \"New\":\r\n            args.setGameState(\"Restart\");\r\n            setAction(false);\r\n            break;\r\n        case \"scoreboard\":\r\n            args.setShowScoreboard(!args.showScoreboard);\r\n            setAction(false);\r\n            break;\r\n        case \"touchscreenControls\":{\r\n            args.setShowControls(!args.showControls);\r\n            setAction(false);\r\n            break;\r\n        }\r\n        case false:\r\n            break;\r\n        default:\r\n            setAction(false);\r\n            break;\r\n    }\r\n}","export const handleTopMenu = (appMenu, setAppMenu, args) => {\r\n    //Default App Menu  \r\n    const defaultAppMenu = {\r\n        \"Game\": {\r\n            \"New Game\": {\r\n                \"action\": \"New\",\r\n                \"keybind\": \"Alt+N\",\r\n                \"disabled\": true\r\n            },\r\n            \"Play / Pause\": {\r\n                \"action\": \"Play / Pause\",\r\n                \"keybind\": \"P\",\r\n                \"disabled\": true\r\n            },\r\n            \"LineBreak1\":{},\r\n            \"Keybinds\": {\r\n                \"action\": \"Keybinds\",\r\n                \"disabled\": false\r\n            },\r\n            \"LineBreak2\":{},\r\n            \"Close\": {\r\n                \"action\": \"Close\",\r\n                \"keybind\": \"Alt+Shift+F4\",\r\n                \"disabled\": false\r\n            }\r\n        },\r\n        \"View\": {\r\n            \"Scoreboard\": {\r\n                \"action\": \"scoreboard\",\r\n                \"checkbox\": true,\r\n                \"disabled\": false\r\n            },\r\n            \"Touchscreen Controls\": {\r\n                \"action\": \"touchscreenControls\",\r\n                \"checkbox\": true,\r\n                \"disabled\": false\r\n            }\r\n        },\r\n        \"Help\": {\r\n            \"Help\": {\r\n                \"action\": \"help\",\r\n                \"keybind\": \"F1\",\r\n                \"disabled\": true,\r\n                \"title\": \"Not Implemented\"\r\n            },\r\n            \"About\": {\r\n                \"action\": \"about\",\r\n                \"disabled\": true,\r\n                \"title\": \"Not Implemented\"\r\n            }\r\n        }\r\n    }\r\n    if (appMenu === null) {\r\n        setAppMenu(defaultAppMenu);\r\n    }\r\n    else {\r\n        let updatedAppMenu = { \r\n            ...appMenu,\r\n                    \"Game\": {\r\n                        ...appMenu[\"Game\"],\r\n                        \"New Game\": {\r\n                            ...appMenu[\"Game\"][\"New Game\"],\r\n                            \"disabled\": !args.gameChoice\r\n                        },\r\n                        \"Play / Pause\": {\r\n                            ...appMenu[\"Game\"][\"Play / Pause\"],\r\n                            \"disabled\": !args.gameChoice\r\n                        }\r\n                    },\r\n                    \"View\": {\r\n                        ...appMenu[\"View\"],\r\n                        \"Scoreboard\": {\r\n                            ...appMenu[\"View\"][\"Scoreboard\"],\r\n                            \"checkbox\": args.showScoreboard\r\n                        },\r\n                        \"Touchscreen Controls\": {\r\n                            ...appMenu[\"View\"][\"Touchscreen Controls\"],\r\n                            \"checkbox\": args.showControls\r\n                        }\r\n                    }\r\n         };\r\n        setAppMenu(updatedAppMenu);\r\n    }\r\n}","import { useState, useEffect } from \"react\";\r\nexport const KeybindDialog = ({ showKeybindDialog, setShowKeybindDialog, setAppDialog, keyboard, setKeyboard }) => {\r\n    const [newKeybinds, setNewKeybinds] = useState(structuredClone(keyboard));\r\n    const [keybindState, setKeybindState] = useState(\"\");\r\n    const [update, setUpdate] = useState(0);\r\n    const title = \"Keybinds\";\r\n    \r\n    const addNewKeybind = (key) => {\r\n        setKeybindState(\"Press new key...\");\r\n        const keyPromise = new Promise((resolve, reject) => {\r\n            document.addEventListener(\"keydown\", (e) => resolve(e.key));\r\n            setTimeout(() => {\r\n                document.removeEventListener(\"keydown\", (e) => resolve(e.key));\r\n                reject(\"timeout\");\r\n            }, 10000);\r\n        });\r\n        keyPromise.then((value) => {\r\n            newKeybinds[key].keys[newKeybinds[key].keys.length] = value;\r\n            setNewKeybinds(newKeybinds);\r\n            setKeybindState(\"\");\r\n        }).catch((error) => {\r\n            setKeybindState(error);\r\n        });\r\n    };\r\n    const changeKeybind = (key, index) => {\r\n        setKeybindState(\"Press new key...\");\r\n        const keyPromise = new Promise((resolve, reject) => {\r\n            document.addEventListener(\"keydown\", (e) => resolve(e.key));\r\n            setTimeout(() => {\r\n                document.removeEventListener(\"keydown\", (e) => resolve(e.key));\r\n                reject(\"timeout\");\r\n            }, 10000);\r\n        });\r\n        keyPromise.then((value) => {\r\n            newKeybinds[key].keys[index] = value;\r\n            setNewKeybinds(newKeybinds);\r\n            setKeybindState(\"\");\r\n        }).catch((error) => {\r\n            setKeybindState(error);\r\n        });\r\n    };\r\n    const removeKeybind = (key, index) => {\r\n        newKeybinds[key].keys.splice(index, 1);\r\n        setNewKeybinds(newKeybinds);\r\n        setUpdate(update + 1);\r\n    };\r\n    const info =\r\n        <div>\r\n            {Object.keys(newKeybinds).map((key) => (\r\n                <div key={key} style={{ display: \"flex\", flexDirection: \"row\", width: \"100%\", marginLeft: \"5px\" }}>\r\n                    <div style={{ width: \"55px\", height:\"30px\", display: \"flex\", justifyContent: \"start\", alignItems: \"center\", textAlign: \"center\" }}><b>{key}:</b></div>\r\n                    {newKeybinds[key].keys.map((keybind, index) =>\r\n                        <button\r\n                            key={key}\r\n                            style={{ width: \"75px\", height:\"30px\", border: \"1px solid dimgray\"}}\r\n                            onContextMenu={(e) => removeKeybind(key, index)}\r\n                            onClick={() => changeKeybind(key, index)}\r\n                        >{keybind}</button>\r\n                    )}\r\n                    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                        {newKeybinds[key].keys.length < 3 &&\r\n                            <button onClick={() => addNewKeybind(key)}>+</button>}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            {keybindState}\r\n        </div>;\r\n\r\n    const actions = {\r\n        Confirm: () => {\r\n            setKeyboard(newKeybinds);\r\n            setShowKeybindDialog(false);\r\n            setAppDialog(null);\r\n        },\r\n        Reset: () => {\r\n            setNewKeybinds(keyboard);\r\n            setUpdate(update + 1);\r\n        },\r\n        Cancel: () => {\r\n            setNewKeybinds(keyboard);\r\n            setShowKeybindDialog(false);\r\n            setAppDialog(null);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (showKeybindDialog) {\r\n            setAppDialog({ title: title, info: info, actions: actions });\r\n        }\r\n    }, [showKeybindDialog, newKeybinds, keybindState, update]);\r\n    return <></>;\r\n}","import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  FaArrowLeft,\r\n  FaArrowRight,\r\n  FaArrowUp,\r\n  FaArrowDown,\r\n} from \"react-icons/fa\";\r\nimport { BsFillPlayFill, BsPauseFill, BsEjectFill, BsZoomIn, BsZoomOut } from \"react-icons/bs\";\r\nimport Controls from \"./Controls/Keyboard.js\";\r\nimport Breakout from \"./Games/Breakout/Breakout.js\";\r\nimport Snake from \"./Games/Snake/Snake.js\";\r\nimport SpaceInvaders from \"./Games/Space Invaders/SpaceInvaders.js\";\r\nimport { handleAction } from \"./Handlers/handleAction.js\";\r\nimport { handleTopMenu } from \"./Handlers/handleTopMenu.js\";\r\nimport { KeybindDialog } from \"./Components/KeybindDialog.jsx\";\r\nimport \"./style.css\";\r\nimport { set } from \"ol/transform.js\";\r\n\r\nexport default function Arcade({ isSelected, action, setAction, appMenu, setAppMenu, appDialog, setAppDialog, contextMenu }) {\r\n  const canvasContainer = useRef();\r\n  const [keyboard, setKeyboard] = useState({\r\n    up: { keys: [\"w\", \"W\", \"ArrowUp\"], active: true },\r\n    down: { keys: [\"s\", \"S\", \"ArrowDown\"], active: true },\r\n    left: { keys: [\"a\", \"A\", \"ArrowLeft\"], active: true },\r\n    right: { keys: [\"d\", \"D\", \"ArrowRight\"], active: true },\r\n    one: { keys: [\"1\"], active: true },\r\n    two: { keys: [\"2\"], active: true },\r\n    pause: { keys: [\"p\", \"P\", \"Pause\"], active: true },\r\n  });\r\n  const controls = Controls(isSelected, keyboard);\r\n  const [gameState, setGameState] = useState(\"Start\");\r\n  const [gameChoice, setGameChoice] = useState(\"None\");\r\n  const [canvasZoom, setCanvasZoom] = useState(1);\r\n  const [playButtonFlag, setPlayButtonFlag] = useState(true);\r\n  const [showControls, setShowControls] = useState(true);\r\n  const [showScoreboard, setShowScoreboard] = useState(true);\r\n  const [showKeybindDialog, setShowKeybindDialog] = useState(false);\r\n  const [scoreboard, setScoreboard] = useState({\r\n    time: 0,\r\n    score: 0,\r\n    gameState: \"Start\",\r\n  });\r\n  const updateScoreboard = (scoreboard) => {\r\n    setScoreboard(scoreboard);\r\n  };\r\n\r\n  const handleScreenButton = (key, state, repeat) => {\r\n    document.dispatchEvent(new KeyboardEvent(state, { key: keyboard[key].keys[0], repeat: repeat }),)\r\n  };\r\n\r\n  const handleTouchEvent = (event, target) => {\r\n    if (event.type === \"touchstart\") {\r\n      controls[target] = true;\r\n    }\r\n    else if (event.type === \"touchend\") {\r\n      controls[target] = false;\r\n    }\r\n    else if (event.type === \"touchcancel\") {\r\n      controls[target] = false;\r\n    }\r\n    else if (event.type === \"touchmove\") {\r\n      Object.values(event.touches).forEach((t) => {\r\n        let keys = [];\r\n        let pos = { x: t.clientX, y: t.clientY };\r\n        let boundingRects = {\r\n          up: document.getElementById(\"arcadeButtonUp\").getBoundingClientRect(),\r\n          down: document.getElementById(\"arcadeButtonDown\").getBoundingClientRect(),\r\n          left: document.getElementById(\"arcadeButtonLeft\").getBoundingClientRect(),\r\n          right: document.getElementById(\"arcadeButtonRight\").getBoundingClientRect(),\r\n          one: document.getElementById(\"arcadeButtonA\").getBoundingClientRect(),\r\n          two: document.getElementById(\"arcadeButtonB\").getBoundingClientRect(),\r\n        };\r\n        Object.keys(boundingRects).forEach((key) => {\r\n          if (pos.x >= boundingRects[key].x && pos.x <= boundingRects[key].x + boundingRects[key].width && pos.y >= boundingRects[key].y && pos.y <= boundingRects[key].y + boundingRects[key].height) {\r\n            keys.push(key);\r\n          }\r\n        })\r\n        Object.keys(keyboard).forEach((key) => {\r\n          if (keys.includes(key)) {\r\n            controls[key] = true;\r\n          } else {\r\n            controls[key] = false;\r\n          }\r\n        })\r\n      })\r\n    }\r\n  };\r\n\r\n  const handleContextMenu = (event, target) => {\r\n    let content = {};\r\n    event.preventDefault();\r\n    if (target === \"keypad\") {\r\n      content = {\r\n        \"Hide\": { action: () => { setShowControls(false); } },\r\n      }\r\n    } else if (target === \"scoreboard\") {\r\n      content = {\r\n        \"Hide\": { action: () => { setShowScoreboard(false); } },\r\n      }\r\n    } else if (target === \"canvas\") {\r\n      if (gameChoice !== \"None\") {\r\n        let playpause = gameState === \"Play\" ? \"Pause\" : \"Play\";\r\n        content = {\r\n          \"Play/Pause\": { action: () => { setGameState(playpause); } },\r\n          \"New Game\": { action: () => { setGameState(\"Restart\"); } },\r\n        }\r\n      }\r\n    }\r\n    contextMenu.setOpen();\r\n    contextMenu.setPosition(event.clientX, event.clientY);\r\n    contextMenu.setContent(content);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (gameState === \"Play\") {\r\n      setPlayButtonFlag(false);\r\n    } else {\r\n      setPlayButtonFlag(true);\r\n    }\r\n  }, [gameState]);\r\n\r\n  useEffect(() => {\r\n    const args = {\r\n      gameState: gameState,\r\n      setGameState: setGameState,\r\n      showControls: showControls,\r\n      setShowControls: setShowControls,\r\n      showScoreboard: showScoreboard,\r\n      setShowScoreboard: setShowScoreboard,\r\n      showKeybindDialog: showKeybindDialog,\r\n      setShowKeybindDialog: setShowKeybindDialog\r\n    }\r\n    handleAction(action, setAction, appDialog, setAppDialog, args);\r\n  }, [action]);\r\n\r\n  useEffect(() => {\r\n    const args = {\r\n      gameState: gameState,\r\n      showControls: showControls,\r\n      showScoreboard: showScoreboard,\r\n      gameChoice: gameChoice\r\n    };\r\n    handleTopMenu(appMenu, setAppMenu, args);\r\n  }, [gameState, gameChoice, showControls, showScoreboard]);\r\n\r\n  return (\r\n    <div id=\"arcadeContainer\">\r\n      <div\r\n        id=\"arcadeCanvasContainer\"\r\n        ref={canvasContainer}\r\n        onContextMenu={(e) => handleContextMenu(e, \"canvas\")}\r\n      >\r\n        {gameChoice === \"None\" ?\r\n          <div id=\"arcadeStartScreen\">\r\n            <select\r\n              id=\"gameMenu\"\r\n              onChange={(e) => {\r\n                setGameChoice(e.target.value);\r\n                setGameState(\"Start\");\r\n              }}\r\n            >\r\n              <option value=\"None\" >Select Game</option>\r\n              <option value=\"Snake\">Snake</option>\r\n              <option value=\"Breakout\">Breakout</option>\r\n              <option value=\"Space Invaders\">Space Invaders</option>\r\n            </select>\r\n          </div> :\r\n          gameChoice === \"Snake\" ? (\r\n            <Snake controls={controls} updateScoreboard={updateScoreboard} isSelected={isSelected} gameState={gameState} setGameState={setGameState} canvasZoom={canvasZoom} />\r\n          ) :\r\n            gameChoice === \"Breakout\" ? (\r\n              <Breakout controls={controls} updateScoreboard={updateScoreboard} isSelected={isSelected} gameState={gameState} setGameState={setGameState} canvasZoom={canvasZoom} />\r\n            ) :\r\n              gameChoice === \"Space Invaders\" ? (\r\n                <SpaceInvaders controls={controls} updateScoreboard={updateScoreboard} isSelected={isSelected} gameState={gameState} setGameState={setGameState} canvasZoom={canvasZoom} />\r\n              ) : (\r\n                <></>\r\n              )}\r\n      </div>\r\n      {showControls &&\r\n        <>\r\n          <div id=\"arcadeZoomControls\">\r\n            <div\r\n              id=\"arcadeZoomInButton\"\r\n              className=\"arcadeButton arcadeButtonOff\"\r\n              onClick={() => {if(canvasZoom < 2) {setCanvasZoom(canvasZoom + 0.1)}}}\r\n            >\r\n              <BsZoomIn />\r\n            </div>\r\n            <div\r\n              id=\"arcadeZoomOutButton\"\r\n              className=\"arcadeButton arcadeButtonOff\"\r\n              onClick={() => {if(canvasZoom > 0.1) {setCanvasZoom(canvasZoom - 0.1)}}}\r\n            >\r\n              <BsZoomOut />\r\n            </div>\r\n          </div>\r\n          <div id=\"arcadeStateControls\">\r\n            <div\r\n              id=\"arcadeEjectButton\"\r\n              className=\"arcadeButton arcadeButtonOff\"\r\n              onClick={() => { setGameChoice(\"None\"); setGameState(\"Start\"); }}\r\n            >\r\n              <BsEjectFill />\r\n            </div>\r\n            <div\r\n              id=\"arcadePlayButton\"\r\n              className=\"arcadeButton arcadeButtonOff\"\r\n              onClick={() => {\r\n                handleScreenButton(\"pause\", \"keydown\", false);\r\n                setTimeout(() => handleScreenButton(\"pause\", \"keyup\", false), 50);\r\n              }}\r\n            >\r\n              {playButtonFlag ? <BsFillPlayFill /> : <BsPauseFill />}\r\n            </div>\r\n          </div>\r\n          <div id=\"arcadeArrowControls\">\r\n            <div\r\n              id=\"arcadeButtonLeft\"\r\n              className={controls.left ? \"arcadeButton arcadeButtonOn\" : \"arcadeButton arcadeButtonOff\"}\r\n              onMouseDown={() => handleScreenButton(\"left\", \"keydown\", true)}\r\n              onMouseUp={() => handleScreenButton(\"left\", \"keyup\", true)}\r\n              onTouchStart={(e) => handleTouchEvent(e, \"left\")}\r\n              onTouchMove={(e) => handleTouchEvent(e, \"left\")}\r\n              onTouchEnd={(e) => handleTouchEvent(e, \"left\")}\r\n              onTouchCancel={(e) => handleTouchEvent(e, \"left\")}\r\n            >\r\n              <FaArrowLeft />\r\n            </div>\r\n            <div>\r\n              <div\r\n                id=\"arcadeButtonUp\"\r\n                className={controls.up ? \"arcadeButton arcadeButtonOn\" : \"arcadeButton arcadeButtonOff\"}\r\n                onMouseDown={() => handleScreenButton(\"up\", \"keydown\", true)}\r\n                onMouseUp={() => handleScreenButton(\"up\", \"keyup\", true)}\r\n                onTouchStart={(e) => handleTouchEvent(e, \"up\")}\r\n                onTouchMove={(e) => handleTouchEvent(e, \"up\")}\r\n                onTouchEnd={(e) => handleTouchEvent(e, \"up\")}\r\n                onTouchCancel={(e) => handleTouchEvent(e, \"up\")}\r\n              >\r\n                <FaArrowUp />\r\n              </div>\r\n              <div\r\n                id=\"arcadeButtonDown\"\r\n                className={controls.down ? \"arcadeButton arcadeButtonOn\" : \"arcadeButton arcadeButtonOff\"}\r\n                onMouseDown={() => handleScreenButton(\"down\", \"keydown\", true)}\r\n                onMouseUp={() => handleScreenButton(\"down\", \"keyup\", true)}\r\n                onTouchStart={(e) => handleTouchEvent(e, \"down\")}\r\n                onTouchMove={(e) => handleTouchEvent(e, \"down\")}\r\n                onTouchEnd={(e) => handleTouchEvent(e, \"down\")}\r\n                onTouchCancel={(e) => handleTouchEvent(e, \"down\")}\r\n              >\r\n                <FaArrowDown />\r\n              </div>\r\n            </div>\r\n            <div\r\n              id=\"arcadeButtonRight\"\r\n              className={controls.right ? \"arcadeButton arcadeButtonOn\" : \"arcadeButton arcadeButtonOff\"}\r\n              onMouseDown={() => handleScreenButton(\"right\", \"keydown\", true)}\r\n              onMouseUp={() => handleScreenButton(\"right\", \"keyup\", true)}\r\n              onTouchStart={(e) => handleTouchEvent(e, \"right\")}\r\n              onTouchMove={(e) => handleTouchEvent(e, \"right\")}\r\n              onTouchEnd={(e) => handleTouchEvent(e, \"right\")}\r\n              onTouchCancel={(e) => handleTouchEvent(e, \"right\")}\r\n            >\r\n              <FaArrowRight />\r\n            </div>\r\n          </div>\r\n          <div id=\"arcadeFireControls\">\r\n            <div id=\"arcadeButtonA\"\r\n              className={controls.one ? \"arcadeButton arcadeButtonOn\" : \"arcadeButton arcadeButtonOff\"}\r\n              onMouseDown={() => handleScreenButton(\"one\", \"keydown\", true)}\r\n              onMouseUp={() => handleScreenButton(\"one\", \"keyup\", true)}\r\n              onTouchStart={(e) => handleTouchEvent(e, \"one\")}\r\n              onTouchMove={(e) => handleTouchEvent(e, \"one\")}\r\n              onTouchEnd={(e) => handleTouchEvent(e, \"one\")}\r\n              onTouchCancel={(e) => handleTouchEvent(e, \"one\")}\r\n            >A</div>\r\n            <div id=\"arcadeButtonB\"\r\n              className={controls.two ? \"arcadeButton arcadeButtonOn\" : \"arcadeButton arcadeButtonOff\"}\r\n              onMouseDown={() => handleScreenButton(\"two\", \"keydown\", true)}\r\n              onMouseUp={() => handleScreenButton(\"two\", \"keyup\", true)}\r\n              onTouchStart={(e) => handleTouchEvent(e, \"two\")}\r\n              onTouchMove={(e) => handleTouchEvent(e, \"two\")}\r\n              onTouchEnd={(e) => handleTouchEvent(e, \"two\")}\r\n              onTouchCancel={(e) => handleTouchEvent(e, \"two\")}\r\n            >B</div>\r\n          </div>\r\n        </>\r\n      }\r\n      <KeybindDialog\r\n        showKeybindDialog={showKeybindDialog}\r\n        setShowKeybindDialog={setShowKeybindDialog}\r\n        setAppDialog={setAppDialog}\r\n        keyboard={keyboard}\r\n        setKeyboard={setKeyboard}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useEffect, useCallback } from \"react\";\r\n\r\nexport default function Controls(isSelected, keyboard) {\r\n\r\n  var [command, setCommand] = useState({\r\n    up: false,\r\n    down: false,\r\n    left: false,\r\n    right: false,\r\n    one: false,\r\n    two: false,\r\n    pause: false,\r\n  });\r\n  const validateKey = useCallback(\r\n    (key, state) => {\r\n      const keyArray = Object.keys(keyboard);\r\n      for (let i = 0; i < keyArray.length; i++) {\r\n        let currKeyArray = keyboard[keyArray[i]].keys;\r\n        for (let j = 0; j < currKeyArray.length; j++) {\r\n          if (currKeyArray[j] === key) {\r\n            setCommand((c) => ({ ...c, [keyArray[i]]: state }));\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [keyboard],\r\n  );\r\n\r\n  const handleKeyPress = useCallback(\r\n    (event) => {\r\n      validateKey(event.key, true);\r\n    },\r\n    [validateKey],\r\n  );\r\n  const handleKeyRelease = useCallback(\r\n    (event) => {\r\n      validateKey(event.key, false);\r\n    },\r\n    [validateKey],\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", handleKeyPress);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleKeyPress);\r\n    };\r\n  }, [handleKeyPress]);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keyup\", handleKeyRelease);\r\n    return () => {\r\n      document.removeEventListener(\"keyup\", handleKeyRelease);\r\n    };\r\n  }, [handleKeyRelease]);\r\n\r\n  useEffect(() => {\r\n    if (!isSelected) {\r\n      setCommand({ ...command, pause: true });\r\n    }\r\n  }, [isSelected]);\r\n\r\n  return command;\r\n}\r\n"],"names":["handleCanvasBorders","ctx","width","height","fillStyle","fillRect","frequency","frameRate","rows","cols","defaultPlayerBar","x","y","w","speed","defaultBall","r","dirX","dirY","defaultFirework","t","color","Breakout","_ref","controls","updateScoreboard","isSelected","gameState","setGameState","canvasZoom","canvasRef","useRef","Maps","setMaps","useState","JSON","parse","stringify","LevelsJSON","gameLevel","setGameLevel","currLevel","setCurrLevel","levelHealth","setLevelHealth","Bars","frameCount","setFrameCount","winFrameCount","setWinFrameCount","playerBar","setPlayerBar","Object","create","ball","setBall","firework1","firework2","firework3","firework4","firework5","firework6","firework7","scoreboard","time","score","setScore","useEffect","pause","left","right","clearDraws","canvas","drawFirework","blockWidth","blockHeight","currBall","i","scale","beginPath","arc","Math","cos","PI","sin","fill","closePath","drawLevelUp","font","fillText","drawPlayerBar","newX","newY","drawHitbar","obj","h","drawLevel","Matrix","barHit","bar","s","checkColision","drawBall","context","current","getContext","animationFrameId","setTimeout","drawPauseGame","drawGameOver","drawWinGame","handleFireworks","currFirework","floor","random","render","window","requestAnimationFrame","cancelAnimationFrame","_jsx","ref","style","transform","fruit","setFruit","fruitPos","snakeHeadPos","direction","previousDir","setPreviousDir","snakeBody","setSnakeBody","initialPos","setInitialPos","undefined","up","down","drawBoard","canvasWidth","canvasHeight","drawFruit","overlapX","overlapY","length","flagX","flagY","drawSnakeHead","unshift","drawSnakeBody","pop","pauseGame","endGame","blockSize","defaultInvaderOne","id","row","life","currSprite","totalSprites","hit","sprites","defaultInvaderTwo","defaultInvaderThree","defaultBonusInvader","defaultPlayer","move","shooting","cooling","cooldown","defaultBlock","defaultPlayerBullet","defaultInvaderBullet","SpaceInvaders","lives","setLives","level","setLevel","enemies","setEnemies","enemyMoveParam","setEnemyMoveParam","index","entities","setEntities","bullets","setBullets","explosions","setExplosions","explosionLifetime","player","setPlayer","drawSprite","object","j","drawObjects","redshift","greenshift","blueshift","decay","spread","radius","drawExplosions","createExplosion","target","newExplosion","push","invaderHit","invaderIndex","splice","blockHit","blockIndex","checkColisions","bulletIndex","colision","handleEvents","spawnBonusInvader","newEntity","playerShooting","newBullet","invaderShooting","chance","invaderShooter","handleBullets","newArray","handleExplosions","invaderMove","setUpLevel","currEntity","newEntities","newEnemyMoveParam","Enemies","drawBottomText","handleAction","action","setAction","appDialog","setAppDialog","args","setShowKeybindDialog","showKeybindDialog","setShowScoreboard","showScoreboard","setShowControls","showControls","handleTopMenu","appMenu","setAppMenu","gameChoice","KeybindDialog","keyboard","setKeyboard","newKeybinds","setNewKeybinds","structuredClone","keybindState","setKeybindState","update","setUpdate","info","_jsxs","children","keys","map","key","display","flexDirection","marginLeft","justifyContent","alignItems","textAlign","keybind","border","onContextMenu","e","removeKeybind","onClick","changeKeybind","Promise","resolve","reject","document","addEventListener","removeEventListener","then","value","catch","error","addNewKeybind","actions","Confirm","Reset","Cancel","title","_Fragment","Arcade","contextMenu","canvasContainer","active","one","two","command","setCommand","validateKey","useCallback","state","keyArray","currKeyArray","c","handleKeyPress","event","handleKeyRelease","Controls","setGameChoice","setCanvasZoom","playButtonFlag","setPlayButtonFlag","setScoreboard","handleScreenButton","repeat","dispatchEvent","KeyboardEvent","handleTouchEvent","type","values","touches","forEach","pos","clientX","clientY","boundingRects","getElementById","getBoundingClientRect","includes","handleContextMenu","content","preventDefault","playpause","setOpen","setPosition","setContent","onChange","Snake","className","BsZoomIn","BsZoomOut","BsEjectFill","BsFillPlayFill","BsPauseFill","onMouseDown","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","FaArrowLeft","FaArrowUp","FaArrowDown","FaArrowRight"],"sourceRoot":""}