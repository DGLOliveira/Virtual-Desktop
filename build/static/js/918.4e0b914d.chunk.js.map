{"version":3,"file":"static/js/918.4e0b914d.chunk.js","mappings":"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","sources":["Apps/Compass/index.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport default function Compass() {\r\n    const [state, setState] = useState(\"ready\");\r\n    const [angles, setAngles] = useState({ heading: 0, pitch: 0, roll: 0 });\r\n    const sensor = null;\r\n\r\n    // generate compass rose\r\n    var compassRosePoints = [];\r\n    function compassRosePointsCalc() {\r\n        compassRosePoints = [];\r\n        const center = 100;\r\n        let ptx1, pty1, ptx2, pty2, ptx3, pty3, ptx4, pty4, points1, points2, deg, distLong, distShort;\r\n        for (let i = 0; i < 16; i++) {\r\n            if (i >= 12) {\r\n                deg = i * 90;\r\n                distLong = 60;\r\n                distShort = 15;\r\n            } else if (i >= 8) {\r\n                deg = i * 90 - 45;\r\n                distLong = 50;\r\n                distShort = 12.5;\r\n            } else {\r\n                deg = i * 360 / 8 + 360 / 16;\r\n                distLong = 40;\r\n                distShort = 10;\r\n            }\r\n            ptx1 = Math.cos(deg * (Math.PI / 180)) * distLong + center;\r\n            pty1 = Math.sin(deg * (Math.PI / 180)) * distLong + center;\r\n            ptx2 = Math.cos((deg + 45) * (Math.PI / 180)) * distShort + center;\r\n            pty2 = Math.sin((deg + 45) * (Math.PI / 180)) * distShort + center;\r\n            ptx3 = center;\r\n            pty3 = center;\r\n            ptx4 = Math.cos((deg - 45) * (Math.PI / 180)) * distShort + center;\r\n            pty4 = Math.sin((deg - 45) * (Math.PI / 180)) * distShort + center;\r\n            points1 = ptx1 + \",\" + pty1 + \" \" + ptx2 + \",\" + pty2 + \" \" + ptx3 + \",\" + pty3 + \" \" + ptx4 + \",\" + pty4;\r\n            points2 = ptx1 + \",\" + pty1 + \" \" + ptx2 + \",\" + pty2 + \" \" + ptx3 + \",\" + pty3;\r\n            compassRosePoints.push([points1, points2]);\r\n        }\r\n    }\r\n    compassRosePointsCalc();\r\n\r\n    // generate compass degree pointers\r\n    var compassDegreePointers = [];\r\n    function compassDegreesPointersCalc() {\r\n        compassDegreePointers = [];\r\n        for (let i = 0; i < 360; i++) {\r\n            var xHeight, yHeight;\r\n            if (i % 90 === 0) {\r\n                xHeight = 20;\r\n                yHeight = 20;\r\n            } else if ((i + 45) % 90 === 0) {\r\n                xHeight = 15;\r\n                yHeight = 15;\r\n            } else if (i % 15 === 0) {\r\n                xHeight = 10;\r\n                yHeight = 10;\r\n            } else {\r\n                xHeight = 5;\r\n                yHeight = 5;\r\n            }\r\n            compassDegreePointers.push([xHeight, yHeight]);\r\n        }\r\n    };\r\n    compassDegreesPointersCalc();\r\n\r\n    // start absolute orientation sensors\r\n    function runSensors() {\r\n        const options = { frequency: 2, referenceFrame: \"device\" };\r\n        sensor = new AbsoluteOrientationSensor(options);\r\n        sensor.start();\r\n        sensor.onreading = () => {\r\n            const x = sensor.quaternion[0];\r\n            const y = sensor.quaternion[1];\r\n            const z = sensor.quaternion[2];\r\n            const w = sensor.quaternion[3];\r\n            const heading = Math.atan2(2 * (x * y + z * w), 1 - 2 * (y * y + z * z));\r\n            const pitch = Math.asin(2 * (x * z - w * y));\r\n            const roll = Math.atan2(2 * (x * w + y * z), 1 - 2 * (x * x + y * y));\r\n            setAngles({\r\n                heading: heading,\r\n                pitch: pitch,\r\n                roll: roll\r\n            });\r\n        }\r\n    }\r\n\r\n    // state machine\r\n    useEffect(() => {\r\n        if (state === \"start\") {\r\n            if (\"AbsoluteOrientationSensor\" in window) {\r\n                Promise.all([\r\n                    navigator.permissions.query({ name: \"accelerometer\" }),\r\n                    navigator.permissions.query({ name: \"magnetometer\" }),\r\n                    navigator.permissions.query({ name: \"gyroscope\" }),\r\n                ]).then((results) => {\r\n                    if (results.every((result) => result.state === \"granted\")) {\r\n                        setState(\"running\");\r\n                    } else {\r\n                        setState(\"not allowed\");\r\n                    }\r\n                });\r\n            } else {\r\n                setState(\"not supported\");\r\n            }\r\n\r\n        }\r\n        if (state === \"running\") {\r\n            runSensors();\r\n        }\r\n    }, [state]);\r\n\r\n    // cleanup sensor\r\n    useEffect(() => {\r\n        return () => {\r\n            if (sensor) {\r\n                sensor.stop();\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {state === \"ready\" &&\r\n                <button\r\n                    style={{ position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\", color: \"black\", backgroundColor: \"lightgray\", border: \"1px black solid\", padding: \"5px\", boxSizing: \"border-box\", fontSize: \"20px\" }}\r\n                    onClick={() => setState(\"start\")}\r\n                    title=\"Start\"\r\n                >\r\n                    Start\r\n                </button>\r\n            }\r\n            {state === \"not supported\" &&\r\n                <div style={{ position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\", color: \"red\", backgroundColor: \"white\", border: \"1px black solid\", padding: \"5px\", boxSizing: \"border-box\" }}>\r\n                    This feature is not supported on your device and/or browser\r\n                </div>\r\n            }\r\n            {state === \"not allowed\" &&\r\n                <div style={{ position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\", color: \"red\", backgroundColor: \"white\", border: \"1px black solid\", padding: \"5px\", boxSizing: \"border-box\" }}>\r\n                    This feature does not have permission to access your device sensors\r\n                </div>\r\n            }\r\n            <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", width: \"100%\", height: \"100%\", padding: \"5px\", boxSizing: \"border-box\" }}>\r\n                <svg style={{ width: \"inherit\", height: \"inherit\", transformOrigin: \"center\", transition: \"transform 0.5s\" }} shapeRendering=\"geometricprecision\" width=\"200\" height=\"200\" viewBox=\"0 0 200 200\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <text x=\"100\" y=\"5\" textAnchor=\"middle\" dominantBaseline=\"middle\" fontSize=\"10\" fill=\"red\" >{angles.heading}°</text>\r\n                    <circle cx=\"100\" cy=\"100\" r=\"90\" fill=\"lightgray\" stroke=\"black\" strokeWidth=\"1\" />\r\n                    <circle cx=\"100\" cy=\"100\" r=\"70\" fill=\"white\" stroke=\"black\" strokeWidth=\"1\" />\r\n                    <circle cx=\"100\" cy=\"100\" r=\"60\" fill=\"lightgray\" stroke=\"black\" strokeWidth=\"1\" />\r\n                    <circle cx=\"100\" cy=\"100\" r=\"50.5\" stroke=\"gray\" strokeWidth=\"0.5\" />\r\n                    <circle cx=\"100\" cy=\"100\" r=\"40.5\" stroke=\"gray\" strokeWidth=\"0.5\" />\r\n                    <g id=\"rose\" style={{ transform: `rotate(${angles.heading})` }}>\r\n                        {compassRosePoints.map((val, index) => {\r\n                            return (\r\n                                <>\r\n                                    <polygon key={index + \"a\"} points={val[0]} fill=\"white\" stroke=\"black\" strokeWidth=\"1\" />\r\n                                    <polygon key={index + \"b\"} points={val[1]} fill=\"black\" />\r\n                                </>\r\n                            )\r\n                        })}\r\n                        <polygon points=\"100,30 96,45 100,50 104,45\" fill=\"white\" stroke=\"black\" strokeWidth=\"1\" />\r\n                        <polygon points=\"100,30 104,45 100,45\" fill=\"black\" />\r\n                        <polygon points=\"100,45 96,45 100,50\" fill=\"black\" />\r\n                        <rect x=\"96\" y=\"48\" width=\"8\" height=\"2\" fill=\"white\" stroke=\"black\" strokeWidth=\"1\" rx=\"1\" />\r\n                    </g>\r\n                    <g id=\"degrees\">\r\n                        {compassDegreePointers.map((val, index) => {\r\n                            return (\r\n                                <line\r\n                                    key={index}\r\n                                    x1={Math.cos(index * (Math.PI / 180)) * (90 - val[0]) + 100}\r\n                                    y1={Math.sin(index * (Math.PI / 180)) * (90 - val[1]) + 100}\r\n                                    x2={Math.cos(index * (Math.PI / 180)) * 90 + 100}\r\n                                    y2={Math.sin(index * (Math.PI / 180)) * 90 + 100}\r\n                                    stroke={index === 270 ? \"red\" : \"black\"}\r\n                                    strokeWidth=\"1\"\r\n                                />\r\n                            )\r\n                        })}\r\n                        <polygon points=\"100,30 96,20 100,22 104,20\" fill=\"red\" />\r\n                    </g>\r\n                    <g id=\"rollPitch\" style={{ isolation: \"isolate\", filter: \" invert(100%)\" }}>\r\n                        <circle\r\n                            cx=\"100\"\r\n                            cy=\"100\"\r\n                            r=\"13\"\r\n                            fill=\"white\"\r\n                            stroke=\"black\"\r\n                            strokeWidth=\"2\"\r\n                            style={{ filter: \" invert(100%)\" }}\r\n                        />\r\n                        <circle\r\n                            cx={Math.sin(angles.pitch) * 5 + 100}\r\n                            cy={Math.sin(angles.roll) * 5 + 100}\r\n                            r=\"5\"\r\n                            fill=\"black\"\r\n                            style={{ mixBlendMode: \"difference\", filter: \" invert(100%)\" }}\r\n                        />\r\n                        <circle\r\n                            cx={-Math.sin(angles.pitch) * 5.5 + 100}\r\n                            cy={-Math.sin(angles.roll) * 5.5 + 100}\r\n                            r=\"4.5\"\r\n                            fill=\"black\"\r\n                            style={{ mixBlendMode: \"difference\", filter: \"invert(100%)\" }}\r\n                        />\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n        </>\r\n    );\r\n}"],"names":["Compass","state","setState","useState","angles","setAngles","heading","pitch","roll","sensor","compassRosePoints","center","ptx1","pty1","ptx2","pty2","ptx3","pty3","ptx4","pty4","points1","points2","deg","distLong","distShort","i","Math","cos","PI","sin","push","compassRosePointsCalc","compassDegreePointers","xHeight","yHeight","compassDegreesPointersCalc","useEffect","window","Promise","all","navigator","permissions","query","name","then","results","every","result","AbsoluteOrientationSensor","frequency","referenceFrame","start","onreading","x","quaternion","y","z","w","atan2","asin","stop","_jsxs","_Fragment","children","_jsx","style","position","top","left","transform","color","backgroundColor","border","padding","boxSizing","fontSize","onClick","title","display","flexDirection","alignItems","justifyContent","width","height","transformOrigin","transition","shapeRendering","viewBox","fill","xmlns","textAnchor","dominantBaseline","cx","cy","r","stroke","strokeWidth","id","map","val","index","points","rx","x1","y1","x2","y2","isolation","filter","mixBlendMode"],"sourceRoot":""}