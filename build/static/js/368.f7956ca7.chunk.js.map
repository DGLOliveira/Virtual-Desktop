{"version":3,"file":"static/js/368.f7956ca7.chunk.js","mappings":"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","sources":["System/Desktop/Scenario.jsx"],"sourcesContent":["import { Canvas } from \"@react-three/fiber\";\r\nimport * as THREE from \"three\";\r\nimport { useRef, useMemo, useContext, Suspense } from \"react\";\r\nimport { BackgroundContext } from \"./BackgroundContext.js\";\r\nimport { OrbitControls, Plane, Stars, Sky } from \"@react-three/drei\";\r\nimport { extend, useFrame, useThree, useLoader } from \"@react-three/fiber\";\r\nimport { Water } from \"three-stdlib\";\r\nimport * as WaterNormals from \"./Textures/waternormals.jpeg\";\r\nimport * as HillsNormals from \"./Textures/DesertNormal.png\";\r\nimport * as SandTexture from \"./Textures/SandTexture1.jpg\";\r\n\r\nextend({ Water });\r\n\r\nexport default function Scenario() {\r\n  const background = useContext(BackgroundContext);\r\n  const Ocean = () => {\r\n    const ref = useRef();\r\n    const gl = useThree((state) => state.gl);\r\n    const waterNormals = useLoader(THREE.TextureLoader, WaterNormals.default);\r\n    waterNormals.wrapS = waterNormals.wrapT = THREE.RepeatWrapping;\r\n    const geom = useMemo(() => new THREE.PlaneGeometry(1500, 1500), []);\r\n    const config = useMemo(\r\n      () => ({\r\n        textureWidth: 1036,\r\n        textureHeight: 1036,\r\n        waterNormals,\r\n        sunDirection: new THREE.Vector3(),\r\n        sunColor: 0xffffff,\r\n        waterColor: 0x001e0f,\r\n        distortionScale: 0.8,\r\n        fog: true,\r\n        format: gl.encoding,\r\n      }),\r\n      [waterNormals],\r\n    );\r\n    useFrame(\r\n      (state, delta) => (ref.current.material.uniforms.time.value += delta),\r\n    );\r\n    return <water ref={ref} args={[geom, config]} rotation-x={-Math.PI / 2} />;\r\n  };\r\n\r\n  const Desert = () => {\r\n    const ref = useRef();\r\n    const hillsNormals = useLoader(THREE.TextureLoader, HillsNormals.default);\r\n    hillsNormals.wrapS = hillsNormals.wrapT = THREE.ClampToEdgeWrapping;\r\n    const sandTexture = useLoader(THREE.TextureLoader, SandTexture.default);\r\n    sandTexture.wrapS = sandTexture.wrapT = THREE.RepeatWrapping;\r\n    sandTexture.repeat.set(100, 100);\r\n    return <Plane ref={ref} position={[0, -15, 0]} args={[1500, 1500, 150, 150]} rotation-x={-Math.PI / 2}>\r\n      <meshStandardMaterial\r\n        color=\"white\"\r\n        metalness={0.5}\r\n        roughness={0.8}\r\n        map={sandTexture}\r\n        normalMap={hillsNormals}\r\n        normalScale={new THREE.Vector2(0.8, 0.8)}\r\n        displacementMap={hillsNormals}\r\n        displacementScale={50} />\r\n    </Plane>;\r\n  };\r\n\r\n  return (\r\n    <Canvas\r\n      style={{\r\n        position: \"absolute\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n      }}\r\n      dpr={window.devicePixelRatio}\r\n      camera={{ position: [0, 25, 10], near: 2 }}\r\n    >\r\n      {background.state[\"scenario\"][\"fog\"].isActive &&\r\n        <fog\r\n          attach=\"fog\"\r\n          color={background.state[\"scenario\"][\"fog\"].color}\r\n          near={background.state[\"scenario\"][\"fog\"].near}\r\n          far={background.state[\"scenario\"][\"fog\"].far}\r\n        />}\r\n      <OrbitControls target={[0, 25, 0]} />\r\n      <Suspense fallback={null}>\r\n        {background.state[\"scenario\"][\"sun\"].isActive &&\r\n          <Sky\r\n            distance={450000}\r\n            inclination={background.state[\"scenario\"][\"sun\"].inclination}\r\n            azimuth={background.state[\"scenario\"][\"sun\"].azimuth}\r\n            rayleigh={background.state[\"scenario\"][\"sun\"].rayleight}\r\n            turbidity={background.state[\"scenario\"][\"sun\"].turbidity}\r\n            exposure={background.state[\"scenario\"][\"sun\"].exposure}\r\n          />}\r\n      </Suspense>\r\n      <Suspense fallback={null}>\r\n        {background.state[\"scenario\"][\"stars\"].isActive &&\r\n          <Stars\r\n            radius={440}\r\n            count={background.state[\"scenario\"][\"stars\"].count}\r\n          />}\r\n      </Suspense>\r\n      {background.state[\"scenario\"][\"directionalLight\"].isActive &&\r\n        <pointLight\r\n          color={background.state[\"scenario\"][\"directionalLight\"].color}\r\n          intensity={background.state[\"scenario\"][\"directionalLight\"].intensity}\r\n          position={[0, 10000, -1500]}\r\n        />}\r\n      {background.state[\"scenario\"][\"ambientLight\"].isActive &&\r\n        <ambientLight\r\n          intensity={background.state[\"scenario\"][\"ambientLight\"].intensity}\r\n          color={background.state[\"scenario\"][\"ambientLight\"].color}\r\n        />}\r\n      <Suspense fallback={null}>\r\n        {background.state[\"scenario\"][\"ocean\"].isActive && <Ocean />}\r\n      </Suspense>\r\n      <Suspense fallback={null}>\r\n        {background.state[\"scenario\"][\"desert\"].isActive && <Desert />}\r\n      </Suspense>\r\n    </Canvas>\r\n  );\r\n};\r\n"],"names":["Scenario","background","useContext","BackgroundContext","Ocean","ref","useRef","gl","useThree","state","waterNormals","useLoader","THREE","WaterNormals","wrapS","wrapT","geom","useMemo","config","textureWidth","textureHeight","sunDirection","sunColor","waterColor","distortionScale","fog","format","encoding","useFrame","delta","current","material","uniforms","time","value","_jsx","args","Math","PI","Desert","hillsNormals","HillsNormals","sandTexture","SandTexture","repeat","set","Plane","position","children","color","metalness","roughness","map","normalMap","normalScale","displacementMap","displacementScale","_jsxs","Canvas","style","top","left","dpr","window","devicePixelRatio","camera","near","isActive","attach","far","OrbitControls","target","Suspense","fallback","Sky","distance","inclination","azimuth","rayleigh","rayleight","turbidity","exposure","Stars","radius","count","intensity","extend","Water"],"sourceRoot":""}