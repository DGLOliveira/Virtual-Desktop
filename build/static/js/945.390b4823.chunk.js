"use strict";(self.webpackChunkpc=self.webpackChunkpc||[]).push([[945],{6303:(t,n,e)=>{e.r(n),e.d(n,{default:()=>l});var a=e(5043),o=e(749),s=e(8711),i=e(7174),r=e(2373);const c=e.p+"static/media/Gyroscope.572cdad23e89a59df442.glb";var h=e(579);function l(){const[t,n]=(0,a.useState)("ready"),[e,l]=(0,a.useState)({heading:0,pitch:0,roll:0,screenOrientationAngle:screen.orientation.angle});var M=null;const u=()=>{const n=(0,i.p)(c),s=(0,a.useRef)();let r,l,M;n.scene.children.forEach((t=>{"External_Gimbal"===t.name&&(r=t),"Internal_Gimbal"===t.name&&(l=t),"Axis"===t.name&&(M=t)}));let u=0;return(0,o.F)((n=>{if("running"===t&&(u+=10*n),void 0!==r&&void 0!==l&&void 0!==M){let t,n,a=u;90===e.screenOrientationAngle?(t=-e.roll+Math.PI,n=e.pitch+Math.PI/2):270===e.screenOrientationAngle?(t=-e.roll+Math.PI,n=-e.pitch+Math.PI/2):0===e.screenOrientationAngle?(t=e.pitch+Math.PI,n=e.roll+Math.PI/2):(t=e.pitch+Math.PI,n=-e.roll+Math.PI/2),r.quaternion.w=Math.cos(t/2),r.quaternion.y=Math.sin(t/2),r.quaternion.x=0,r.quaternion.z=0,l.quaternion.w=Math.cos(t/2)*Math.cos(n/2),l.quaternion.y=Math.sin(t/2)*Math.cos(n/2),l.quaternion.x=Math.cos(t/2)*Math.sin(n/2),l.quaternion.z=-Math.sin(t/2)*Math.sin(n/2),M.quaternion.w=Math.cos(t/2)*Math.cos((n+Math.PI/2)/2)*Math.cos(a/2)+Math.sin(t/2)*Math.sin((n+Math.PI/2)/2)*Math.sin(a/2),M.quaternion.y=Math.sin(t/2)*Math.cos((n+Math.PI/2)/2)*Math.cos(a/2)-Math.cos(t/2)*Math.sin((n+Math.PI/2)/2)*Math.sin(a/2),M.quaternion.x=Math.cos(t/2)*Math.sin((n+Math.PI/2)/2)*Math.cos(a/2)+Math.sin(t/2)*Math.cos((n+Math.PI/2)/2)*Math.sin(a/2),M.quaternion.z=Math.cos(t/2)*Math.cos((n+Math.PI/2)/2)*Math.sin(a/2)-Math.sin(t/2)*Math.sin((n+Math.PI/2)/2)*Math.cos(a/2)}})),(0,h.jsx)("primitive",{ref:s,object:n.scene,scale:1.6})};const d=()=>{(M=new RelativeOrientationSensor({frequency:4,referenceFrame:"device"})).start(),console.log("gyroscope started"),M.onreading=()=>{let t=(n=M.quaternion[0],e=M.quaternion[1],a=M.quaternion[2],o=M.quaternion[3],{heading:Math.atan2(2*(n*e+a*o),1-2*(e*e+a*a)),pitch:Math.asin(2*(n*a-o*e)),roll:Math.atan2(2*(n*o+e*a),1-2*(n*n+e*e))});var n,e,a,o;let s=screen.orientation.angle;l({...t,newOrientationAngle:s}),console.log({...t,newOrientationAngle:s})}};return(0,a.useEffect)((()=>{"start"===t&&("AbsoluteOrientationSensor"in window?Promise.all([navigator.permissions.query({name:"gyroscope"}),navigator.permissions.query({name:"accelerometer"})]).then((t=>{t.every((t=>"granted"===t.state))?n("running"):n("not allowed")})):n("not supported")),"running"===t&&d()}),[t]),(0,a.useEffect)((()=>()=>{M&&(M.stop(),console.log("stopped sensor"))}),[]),(0,h.jsxs)(h.Fragment,{children:[(0,h.jsxs)(s.Hl,{id:"gyroscopeCanvas",children:[(0,h.jsx)("ambientLight",{intensity:1}),(0,h.jsx)("pointLight",{position:[-10,-10,10],intensity:500}),(0,h.jsx)(u,{}),(0,h.jsx)(r.q,{makeDefault:!0,zoom:50,position:[0,0,10]})]}),"ready"===t&&(0,h.jsx)("button",{className:"gyroscopeStartButton",onClick:()=>n("start"),children:"Start"}),"not supported"===t&&(0,h.jsx)("div",{className:"gyroscopeWarning",children:"This feature is not supported on your device and/or browser"}),"not allowed"===t&&(0,h.jsx)("div",{className:"gyroscopeWarning",children:"This feature does not have permission to access your device sensors"})]})}}}]);
//# sourceMappingURL=945.390b4823.chunk.js.map