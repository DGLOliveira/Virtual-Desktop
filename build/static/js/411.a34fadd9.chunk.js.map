{"version":3,"file":"static/js/411.a34fadd9.chunk.js","mappings":"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","sources":["Apps/DrawDoc/Context.jsx","Apps/DrawDoc/Handlers/handleDraw.js","Apps/DrawDoc/Handlers/handleTools.js","Apps/DrawDoc/Handlers/handleTopMenu.js","Apps/DrawDoc/Handlers/handleHistory.js","Apps/DrawDoc/Handlers/handleFile.js","Apps/DrawDoc/Handlers/handleAction.jsx","Apps/DrawDoc/Dialog/new.jsx","Apps/DrawDoc/Dialog/changeName.jsx","Apps/DrawDoc/Components/DrawCanvas.jsx","Apps/DrawDoc/Components/PreviewCanvas.jsx","Apps/DrawDoc/Components/TopNavBar.jsx","Apps/DrawDoc/Components/SubToolIcon.jsx","Apps/DrawDoc/Components/ToolBar.jsx","Apps/DrawDoc/Components/BottomNavBar.jsx","Apps/DrawDoc/index.jsx","System/GlobalComponents/ColorPicker/Converters/rgbToHsl.js","System/GlobalComponents/ColorPicker/Converters/rgbaToHsla.js","System/GlobalComponents/ColorPicker/ColorPicker.jsx","System/GlobalComponents/ColorPicker/Converters/hexToRgba.js","System/GlobalComponents/ColorPicker/Converters/hexToRgb.js","System/GlobalComponents/ColorPicker/Converters/nameToHsl.js"],"sourcesContent":["import React, { useState, createContext } from \"react\";\r\n\r\nexport const Context = createContext({\r\n    name: \"\",\r\n    setName: ()=>{},\r\n    history: {},\r\n    setHistory: () => { },\r\n    dimention:{},\r\n    setDimention: () => { },\r\n    tool: \"\",\r\n    setTool: () => { },\r\n    subTool: {},\r\n    setSubTool: () => { },\r\n    curveControls:{},\r\n    setCurveControls: () => { },\r\n    color:{},\r\n    setColor: () => { },\r\n    size: 0,\r\n    setSize: () => { },\r\n    text: {},\r\n    setText: () => { },\r\n    clipboard: {},\r\n    setClipboard: () => { },\r\n    zoom: 1,\r\n    setZoom: () => { },\r\n    cursor: {},\r\n    setCursor: () => { },\r\n    view: {},\r\n    setView: () => { },\r\n});\r\n\r\nexport function ContextProvider({ children }) {\r\n    const [name, setName] = useState(\"Untitled\");\r\n    const [history, setHistory] = useState({\r\n        history: [],\r\n        index: 0,\r\n        canUndo: false,\r\n        canRedo: false\r\n      });\r\n    \r\n      const [dimentions, setDimentions] = useState({ width: 350, height: 350, });\r\n      const [tool, setTool] = useState(\"Brush\");\r\n      const [subTool, setSubTool] = useState({\r\n        shape: \"Circle\",\r\n        fill: false,\r\n        stretch: false,\r\n        sides: 4,\r\n        angle: 0,\r\n        startAngle: 0\r\n      });\r\n      const [curveControls, setCurveControls] = useState({\r\n        state: \"none\",\r\n        start:{x:-1, y:-1},\r\n        end:{x:-1, y:-1},\r\n        controlPoint1:{x:-1, y:-1},\r\n        controlPoint2:{x:-1, y:-1}\r\n      });\r\n      const [color, setColor] = useState({\r\n        selected:\"hsl(0, 100%, 0%)\",\r\n        1: \"hsl(0, 100%, 0%)\",\r\n        2: \"hsl(0, 100%, 100%)\",\r\n      });\r\n      const [size, setSize] = useState(16);\r\n      const [text, setText] = useState({\r\n        text: \"\",\r\n        top: 0,\r\n        left: 0,\r\n        color: \"\",\r\n        fontSize: \"\",\r\n        fontFamily: \"Arial\",\r\n        state: \"none\",\r\n      });\r\n      const [clipboard, setClipboard] = useState({\r\n        data: {},\r\n        state: \"none\",\r\n      });\r\n      const [zoom, setZoom] = useState(1);\r\n      const [cursor, setCursor] = useState({\r\n        current: { x: 0, y: 0, },\r\n        start: { x: 0, y: 0, },\r\n        end: { x: 0, y: 0, },\r\n        down: false,\r\n      });\r\n      const [view, setView] = useState({\r\n        toolBar: true,\r\n        topNavBar: true,\r\n        bottomNavBar: true,\r\n        menu:true\r\n      })\r\n\r\n    const contextValue = {\r\n        name: name,\r\n        setName: setName,\r\n        history: history,\r\n        setHistory: setHistory,\r\n        dimention: dimentions,\r\n        setDimention: setDimentions,\r\n        tool: tool,\r\n        setTool: setTool,\r\n        subTool: subTool,\r\n        setSubTool: setSubTool,\r\n        curveControls: curveControls,\r\n        setCurveControls: setCurveControls,\r\n        color: color,\r\n        setColor: setColor,\r\n        size: size,\r\n        setSize: setSize,\r\n        text: text,\r\n        setText: setText,\r\n        clipboard: clipboard,\r\n        setClipboard: setClipboard,\r\n        zoom: zoom,\r\n        setZoom: setZoom,\r\n        cursor: cursor,\r\n        setCursor: setCursor,\r\n        view: view,\r\n        setView: setView\r\n    };\r\n\r\n    return (\r\n        <Context.Provider value={contextValue}>{children}</Context.Provider>\r\n    );\r\n}\r\n\r\nexport default ContextProvider;","export const handleDraw = (canvas, cursor, param, preview) => {\r\n    let ctx;\r\n    if (preview) {\r\n        ctx = canvas.getContext('2d', { alpha: true });\r\n    } else {\r\n        ctx = canvas.getContext('2d', { alpha: false });\r\n    }\r\n    ctx.webkitImageSmoothingEnabled = false;\r\n    ctx.mozImageSmoothingEnabled = false;\r\n    ctx.imageSmoothingEnabled = false;\r\n    const boundary = canvas.getBoundingClientRect();\r\n    const height = ctx.canvas.height;\r\n    const width = ctx.canvas.width;\r\n    const scaleX = width / boundary.width;\r\n    const scaleY = height / boundary.height;\r\n    const x = cursor.current.x;\r\n    const y = cursor.current.y;\r\n    const startX = cursor.start.x;\r\n    const startY = cursor.start.y;\r\n    const endX = cursor.end.x;\r\n    const endY = cursor.end.y;\r\n\r\n    const drawBrush = () => {\r\n        ctx.fillStyle = param.selectedColor;\r\n        ctx.strokeStyle = param.selectedColor;\r\n        ctx.lineWidth = 1;\r\n        ctx.setLineDash([]);\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n            (x - boundary.left) * scaleX,\r\n            (y - boundary.top) * scaleY,\r\n            param.size,\r\n            0,\r\n            Math.PI * 2,\r\n        );\r\n        ctx.stroke();\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    };\r\n\r\n    const drawEraser = () => {\r\n        ctx.strokeStyle = param.selectedColor;\r\n        ctx.fillStyle = param.selectedColor;\r\n        ctx.lineWidth = 1;\r\n        ctx.setLineDash([]);\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n            (x - boundary.left) * scaleX,\r\n            (y - boundary.top) * scaleY,\r\n            param.size,\r\n            0,\r\n            Math.PI * 2,\r\n        );\r\n        if (!preview) {\r\n            ctx.fill();\r\n        } else {\r\n            ctx.stroke();\r\n        }\r\n        ctx.closePath();\r\n    }\r\n\r\n    const drawSpray = () => {\r\n        let randomX = Math.random() * param.size;\r\n        let randomNegativeX = Math.random();\r\n        let randomY = Math.random() * param.size;\r\n        let randomNegativeY = Math.random();\r\n        while (Math.sqrt(Math.pow(randomX, 2) + Math.pow(randomY, 2)) > param.size) {\r\n            randomX = Math.random() * param.size;\r\n            randomY = Math.random() * param.size;\r\n        }\r\n        if (randomNegativeY > 0.5) {\r\n            randomY = randomY * -1;\r\n        }\r\n        if (randomNegativeX > 0.5) {\r\n            randomX = randomX * -1;\r\n        }\r\n        ctx.fillStyle = param.selectedColor;\r\n        ctx.fillRect(\r\n            (x - boundary.left) * scaleX + randomX,\r\n            (y - boundary.top) * scaleY + randomY,\r\n            1,\r\n            1,\r\n        );\r\n    };\r\n\r\n    const drawPipette = () => {\r\n        let pixel = ctx.getImageData(\r\n            (x - boundary.left) * scaleX,\r\n            (y - boundary.top) * scaleY,\r\n            1,\r\n            1,\r\n        );\r\n        // convert from rgb to hsl\r\n        let r = pixel.data[0],\r\n            g = pixel.data[1],\r\n            b = pixel.data[2];\r\n        r /= 255;\r\n        g /= 255;\r\n        b /= 255;\r\n        let cmin = Math.min(r, g, b),\r\n            cmax = Math.max(r, g, b),\r\n            delta = cmax - cmin,\r\n            h = 0,\r\n            s = 0,\r\n            l = ((cmax + cmin) / 2);\r\n        if (delta === 0) {\r\n            s = 0;\r\n            h = 0;\r\n        }else {\r\n            if (l <= 0.5) {\r\n                s = delta / (cmax + cmin);\r\n            } else {\r\n                s = delta / (2 - cmax-cmin);\r\n            };\r\n            if (cmax === r) {\r\n                h = (g - b) / delta;\r\n            } else if (cmax === g) {\r\n                h = ((b - r) / delta) + 2;\r\n            } else if(cmax === b) {\r\n                h = ((r - g) / delta) + 4;\r\n            }\r\n        }\r\n        h = Math.round(h * 60);\r\n        if (h < 0) {\r\n            h += 360;\r\n        }\r\n        s = Math.abs(s * 100).toFixed(0);\r\n        l = (l * 100 ).toFixed(0);\r\n        let color = \"hsl(\" + h + \",\" + s + \"%,\" + l + \"%)\";\r\n        //assign color\r\n        if (param.tool === \"Pipette\") {\r\n            if (param.selectedColor === param.color1) {\r\n                param.setColor1(color);\r\n            } else {\r\n                param.setColor2(color);\r\n            }\r\n        } else {\r\n            return color;\r\n        }\r\n    };\r\n\r\n    //Bucket code based on Spawn Fill algorithm in \r\n    //https://stackoverflow.com/questions/2106995/how-can-i-perform-flood-fill-with-html-canvas/56221940#56221940\r\n    //answer from user gman.\r\n    //Regular flood fill algorithm is too slow as it looks at individual pixels.\r\n    //This solution looks at entire lines and fills them in.\r\n    const drawBucket = () => {\r\n        let r, g, b, h, s, l;\r\n        let hslaColor = [];\r\n        for (let i = 0; i < param.selectedColor.length; i++) {\r\n            var start;\r\n            var end;\r\n            if (param.selectedColor[i] === \"(\") {\r\n                start = i + 1;\r\n            } else if (param.selectedColor[i] === \")\") {\r\n                end = i;\r\n                hslaColor.push(param.selectedColor.slice(start, end));\r\n            } else if (param.selectedColor[i] === \",\") {\r\n                hslaColor.push(param.selectedColor.slice(start, i));\r\n                start = i + 1;\r\n            }\r\n        }\r\n        h=hslaColor[0]/360;\r\n        s=hslaColor[1].slice(0, -1)/100;\r\n        l=hslaColor[2].slice(0, -1)/100;\r\n        if(s === 0) {\r\n            r = l * 255;\r\n            g = l * 255;\r\n            b = l * 255;\r\n        }else{\r\n            let temp1, temp2, tempR, tempG, tempB;\r\n            if(l < 0.5){\r\n                temp1 = l * (1 + s);\r\n            }else{\r\n                temp1 = (l + s) - (l * s);\r\n            }\r\n            temp2 = 2 * l - temp1;\r\n            function secondTest(value) {\r\n                if(value < 0){\r\n                    return value + 1;\r\n                }else if(value > 1){\r\n                    return value - 1;\r\n                }else{\r\n                    return value;\r\n                }\r\n            }\r\n            tempR = secondTest(h + 1 / 3);\r\n            tempG = secondTest(h);\r\n            tempB = secondTest(h - 1 / 3);\r\n            function finalTest(temp1, temp2, tempColor) {\r\n                if(6*tempColor < 1){\r\n                    return temp2 + (temp1 - temp2) * 6 * tempColor;\r\n                }else if(2*tempColor < 1){\r\n                    return temp1;\r\n                }else if(3*tempColor < 2){\r\n                    return temp2 + (temp1 - temp2) * (2 / 3 - tempColor) * 6;\r\n                }else{\r\n                    return temp2;\r\n                }\r\n            }\r\n            r = Math.round(finalTest(temp1, temp2, tempR) * 255);\r\n            g = Math.round(finalTest(temp1, temp2, tempG) * 255);\r\n            b = Math.round(finalTest(temp1, temp2, tempB) * 255);\r\n        }\r\n        function componentToHex(c) {\r\n            var hex = Number(c).toString(16);\r\n            return hex.length == 1 ? \"0\" + hex : hex;\r\n          }\r\n        let hexColor =  \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n        let spans = [];\r\n        let selectedColor = parseInt(\"FF\" + hexColor.slice(5, 7) + hexColor.slice(3, 5) + hexColor.slice(1, 3), 16);\r\n        //get copy of canvas and convert to a more performant format\r\n        //canvas data has no negative values and none of the data points require the standard 64 bit\r\n        const imageData = ctx.getImageData(0, 0, width, height);\r\n        const pixelData = {\r\n            width: imageData.width,\r\n            height: imageData.height,\r\n            data: new Uint32Array(imageData.data.buffer),\r\n        };\r\n        //get color from pixel in buffer\r\n        function getPixel(currX, currY) {\r\n            if (currX < 0 || currX < 0 || currX >= pixelData.width || currX >= pixelData.height) {\r\n                return -1;  // impossible color\r\n            }\r\n            return pixelData.data[currY * imageData.width + currX];\r\n        };\r\n        //break addBucket if color is the same\r\n        let targetColor = getPixel((x - boundary.left) * scaleX, (y - boundary.top) * scaleY);\r\n        //add line to check to spans\r\n        const addSpan = (left, right, line, direction) => {\r\n            spans.push({\r\n                left,\r\n                right,\r\n                line,\r\n                direction\r\n            });\r\n        };\r\n        //check span for color and length\r\n        const checkSpan = (left, right, line, direction) => {\r\n            let flag = false;\r\n            let start;\r\n            let column;\r\n            for (column = left; column < right; ++column) {\r\n                const color = getPixel(column, line);\r\n                if (color === targetColor) {\r\n                    if (!flag) {\r\n                        flag = true;\r\n                        start = column;\r\n                    }\r\n                } else {\r\n                    if (flag) {\r\n                        flag = false;\r\n                        addSpan(start, column - 1, line, direction);\r\n                    }\r\n                }\r\n            }\r\n            if (flag) {\r\n                flag = false;\r\n                addSpan(start, right - 1, line, direction);\r\n            }\r\n        };\r\n        addSpan((x - boundary.left) * scaleX, (x - boundary.left) * scaleX, (y - boundary.top) * scaleY, 0);\r\n        let whileBreak = 0;\r\n        while (spans.length > 0 && whileBreak < 10000) {\r\n            whileBreak++;\r\n            const { left, right, line, direction } = spans.pop();\r\n            let l = left;\r\n            for (; ;) {\r\n                l--;\r\n                const color = getPixel(l, line);\r\n                if (color !== targetColor) {\r\n                    break;\r\n                }\r\n            }\r\n            ++l;\r\n            let r = right;\r\n            for (; ;) {\r\n                ++r;\r\n                const color = getPixel(r, line);\r\n                if (color !== targetColor) {\r\n                    break;\r\n                }\r\n            }\r\n            const lineOffset = line * width;\r\n            pixelData.data.fill(selectedColor, lineOffset + l, lineOffset + r);\r\n            if (direction <= 0) {\r\n                checkSpan(l, r, line - 1, -1);\r\n            } else {\r\n                checkSpan(l, left, line - 1, -1);\r\n                checkSpan(right, r, line - 1, -1);\r\n            }\r\n            if (direction >= 0) {\r\n                checkSpan(l, r, line + 1, +1);\r\n            } else {\r\n                checkSpan(l, left, line + 1, +1);\r\n                checkSpan(right, r, line + 1, +1);\r\n            }\r\n        }\r\n        ctx.putImageData(imageData, 0, 0);\r\n    };\r\n\r\n    const drawText = () => {\r\n        ctx.fillStyle = param.selectedColor;\r\n        ctx.font = String(param.size + \"px \" + param.text.fontFamily);\r\n        ctx.fillText(\r\n            param.text.text,\r\n            (endX - boundary.left) * scaleX,\r\n            (endY - boundary.top) * scaleY,\r\n        );\r\n    };\r\n\r\n    const drawSelect = () => {\r\n        switch (param.clipboard.state) {\r\n            case \"copy\":\r\n                if (!preview && endX - startX !== 0 && endY - startY !== 0) {\r\n                    let data = ctx.getImageData(\r\n                        (startX - boundary.left) * scaleX,\r\n                        (startY - boundary.top) * scaleY,\r\n                        endX - startX,\r\n                        endY - startY\r\n                    );\r\n                    param.setClipboard({\r\n                        data: data,\r\n                        state: \"carry\"\r\n                    });\r\n                }\r\n                break;\r\n            case \"cut\":\r\n                if (!preview && endX - startX !== 0 && endY - startY !== 0) {\r\n                    let data = ctx.getImageData(\r\n                        (startX - boundary.left) * scaleX,\r\n                        (startY - boundary.top) * scaleY,\r\n                        endX - startX,\r\n                        endY - startY\r\n                    );\r\n                    param.setClipboard({\r\n                        data: data,\r\n                        state: \"carry\"\r\n                    });\r\n                    if (param.selectedColor === param.color1) {\r\n                        ctx.fillStyle = param.color2;\r\n                    } else {\r\n                        ctx.fillStyle = param.color1;\r\n                    }\r\n                    ctx.fillRect(\r\n                        (startX - boundary.left) * scaleX,\r\n                        (startY - boundary.top) * scaleY,\r\n                        (endX - startX),\r\n                        (endY - startY),\r\n                    );\r\n                }\r\n                break;\r\n            case \"carry\":\r\n                ctx.strokeStyle = param.selectedColor;\r\n                ctx.lineWidth = 1;\r\n                ctx.setLineDash([5]);\r\n                if (cursor.down) {\r\n                    ctx.putImageData(\r\n                        param.clipboard.data,\r\n                        (x - boundary.left) * scaleX,\r\n                        (y - boundary.top) * scaleY\r\n                    );\r\n                    ctx.strokeRect(\r\n                        (x - boundary.left) * scaleX,\r\n                        (y - boundary.top) * scaleY,\r\n                        param.clipboard.data.width,\r\n                        param.clipboard.data.height,\r\n                    );\r\n                } else {\r\n                    ctx.putImageData(\r\n                        param.clipboard.data,\r\n                        (endX - boundary.left) * scaleX,\r\n                        (endY - boundary.top) * scaleY\r\n                    );\r\n                    ctx.strokeRect(\r\n                        (endX - boundary.left) * scaleX,\r\n                        (endY - boundary.top) * scaleY,\r\n                        param.clipboard.data.width,\r\n                        param.clipboard.data.height,\r\n                    );\r\n                }\r\n                break;\r\n            case \"paste\":\r\n                if (!preview) {\r\n                    ctx.putImageData(\r\n                        param.clipboard.data,\r\n                        (endX - boundary.left) * scaleX,\r\n                        (endY - boundary.top) * scaleY\r\n                    );\r\n                    param.setClipboard({\r\n                        ...param.clipboard,\r\n                        state: \"none\"\r\n                    });\r\n                }\r\n                break;\r\n            case \"none\":\r\n            default:\r\n                ctx.strokeStyle = param.selectedColor;\r\n                ctx.lineWidth = 1;\r\n                ctx.setLineDash([5]);\r\n                ctx.strokeRect(\r\n                    (startX - boundary.left) * scaleX,\r\n                    (startY - boundary.top) * scaleY,\r\n                    (endX - startX),\r\n                    (endY - startY),\r\n                );\r\n                break;\r\n        }\r\n    };\r\n\r\n    const drawRectangleSelection = () => {\r\n        ctx.strokeStyle = param.selectedColor;\r\n        ctx.lineWidth = 1;\r\n        ctx.setLineDash([5]);\r\n        ctx.strokeRect(\r\n            (startX - boundary.left) * scaleX,\r\n            (startY - boundary.top) * scaleY,\r\n            (endX - startX),\r\n            (endY - startY),\r\n        );\r\n    }\r\n\r\n    const drawCircleSelection = (centerX, centerY, radius) => {\r\n        ctx.strokeStyle = param.selectedColor;\r\n        ctx.lineWidth = 1;\r\n        ctx.setLineDash([5]);\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n            (startX + centerX - boundary.left) * scaleX,\r\n            (startY + centerY - boundary.top) * scaleY,\r\n            radius,\r\n            0,\r\n            Math.PI * 2,\r\n        );\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n\r\n    const drawEllipseSelection = (centerX, centerY, stretchX, stretchY, radius) => {\r\n        ctx.strokeStyle = param.selectedColor;\r\n        ctx.lineWidth = 1;\r\n        ctx.setLineDash([5]);\r\n        ctx.beginPath();\r\n        ctx.ellipse(\r\n            (startX + centerX - boundary.left) * scaleX,\r\n            (startY + centerY - boundary.top) * scaleY,\r\n            stretchX * radius,\r\n            stretchY * radius,\r\n            Math.PI / 180 * param.subTool.angle,\r\n            0,\r\n            Math.PI * 2,\r\n        );\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n\r\n    const drawShape = () => {\r\n        ctx.strokeStyle = param.color1;\r\n        ctx.fillStyle = param.color2;\r\n        ctx.setLineDash([]);\r\n        ctx.lineWidth = param.size;\r\n        let centerX = (endX - startX) / 2;\r\n        let centerY = (endY - startY) / 2;\r\n        let radius;\r\n        if (Math.sqrt(Math.pow(endX - startX, 2)) / 2 < Math.sqrt(Math.pow(endY - startY, 2)) / 2) {\r\n            radius = Math.sqrt(Math.pow(endX - startX, 2)) / 2;\r\n        } else {\r\n            radius = Math.sqrt(Math.pow(endY - startY, 2)) / 2;\r\n        }\r\n        let stretchX = Math.sqrt(Math.pow((endX - startX) / (endY - startY), 2));\r\n        let stretchY = Math.sqrt(Math.pow((endY - startY) / (endX - startX), 2));\r\n        if (param.subTool.stretch) {\r\n            if (stretchX > stretchY) {\r\n                stretchY = 1;\r\n            } else {\r\n                stretchX = 1;\r\n            }\r\n        } else {\r\n            stretchX = 1;\r\n            stretchY = 1;\r\n        }\r\n        if (param.subTool.shape !== \"Curve\" && param.subTool.shape !== \"Line\") {\r\n            ctx.save();\r\n            ctx.translate((startX + centerX - boundary.left) * scaleX, (startY + centerY - boundary.top) * scaleY);\r\n            ctx.rotate((Math.PI * param.subTool.angle) / 180);\r\n        }\r\n        if (param.subTool.shape === \"Rectangle\") {\r\n            drawFunctions[\"draw\" + param.subTool.shape](centerX, centerY);\r\n        } else {\r\n            drawFunctions[\"draw\" + param.subTool.shape](stretchX, stretchY, radius);\r\n        }\r\n        if (param.subTool.shape !== \"Line\" &&\r\n            param.subTool.shape !== \"Curve\") {\r\n            ctx.restore();\r\n            if (preview) {\r\n                drawRectangleSelection();\r\n                drawCircleSelection(centerX, centerY, radius);\r\n                if (param.subTool.stretch) {\r\n                    drawEllipseSelection(centerX, centerY, stretchX, stretchY, radius);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const drawLine = () => {\r\n        ctx.beginPath();\r\n        ctx.moveTo(\r\n            (startX - boundary.left) * scaleX,\r\n            (startY - boundary.top) * scaleY,\r\n        )\r\n        ctx.lineTo(\r\n            (endX - boundary.left) * scaleX,\r\n            (endY - boundary.top) * scaleY,\r\n        )\r\n        ctx.stroke();\r\n    }\r\n\r\n    const drawCurve = () => {\r\n        let startPoint = { x: 0, y: 0 };\r\n        let endPoint = { x: 0, y: 0 };\r\n        let controlPoint1 = { x: 0, y: 0 };\r\n        let controlPoint2 = { x: 0, y: 0 };\r\n        ctx.beginPath();\r\n        if (param.curveControls.start.x === -1) {\r\n            startPoint = { x: startX, y: startY };\r\n            endPoint = { x: endX, y: endY };\r\n            controlPoint1 = { x: startX, y: startY };\r\n            controlPoint2 = { x: endX, y: endY };\r\n        } else if (param.curveControls.controlPoint1.x === -1) {\r\n            startPoint = param.curveControls.start;\r\n            endPoint = param.curveControls.end;\r\n            controlPoint1 = { x: endX, y: endY };\r\n            controlPoint2 = param.curveControls.end;\r\n        } else if (param.curveControls.controlPoint2.x === -1) {\r\n            startPoint = param.curveControls.start;\r\n            endPoint = param.curveControls.end;\r\n            controlPoint1 = param.curveControls.controlPoint1;\r\n            controlPoint2 = { x: endX, y: endY };\r\n        } else {\r\n            startPoint = param.curveControls.start;\r\n            endPoint = param.curveControls.end;\r\n            controlPoint1 = param.curveControls.controlPoint1;\r\n            controlPoint2 = param.curveControls.controlPoint2;\r\n        }\r\n        ctx.moveTo(\r\n            (startPoint.x - boundary.left) * scaleX,\r\n            (startPoint.y - boundary.top) * scaleY,\r\n        )\r\n        ctx.bezierCurveTo(\r\n            (controlPoint1.x - boundary.left) * scaleX,\r\n            (controlPoint1.y - boundary.top) * scaleY,\r\n            (controlPoint2.x - boundary.left) * scaleX,\r\n            (controlPoint2.y - boundary.top) * scaleY,\r\n            (endPoint.x - boundary.left) * scaleX,\r\n            (endPoint.y - boundary.top) * scaleY,\r\n        )\r\n        ctx.stroke();\r\n    }\r\n    const drawRectangle = (centerX, centerY) => {\r\n        if (param.subTool.fill) {\r\n            ctx.fillRect(\r\n                -centerX,\r\n                -centerY,\r\n                (endX - startX),\r\n                (endY - startY),\r\n            );\r\n        }\r\n        ctx.strokeRect(\r\n            -centerX,\r\n            -centerY,\r\n            (endX - startX),\r\n            (endY - startY),\r\n        );\r\n    }\r\n\r\n    const drawCircle = (stretchX, stretchY, radius) => {\r\n        ctx.beginPath();\r\n        ctx.ellipse(\r\n            0,\r\n            0,\r\n            stretchX * radius,\r\n            stretchY * radius,\r\n            0,\r\n            0,\r\n            2 * Math.PI\r\n        );\r\n        if (param.subTool.fill) {\r\n            ctx.fill();\r\n        }\r\n        ctx.stroke();\r\n    }\r\n\r\n    const drawPolygon = (stretchX, stretchY, radius) => {\r\n        ctx.beginPath();\r\n        for (let i = 0; i < param.subTool.sides + 2; i++) {\r\n            ctx.lineTo(\r\n                stretchX * radius * Math.cos((2 * Math.PI * i / param.subTool.sides) - Math.PI / 2 + (Math.PI / 180 * param.subTool.startAngle)),\r\n                stretchY * radius * Math.sin((2 * Math.PI * i / param.subTool.sides) - Math.PI / 2 + (Math.PI / 180 * param.subTool.startAngle))\r\n            );\r\n        };\r\n        if (param.subTool.fill) {\r\n            ctx.fill();\r\n        }\r\n        ctx.stroke();\r\n    }\r\n\r\n    const drawStar = (stretchX, stretchY, radius) => {\r\n        ctx.beginPath();\r\n        for (let i = 0; i < param.subTool.sides * 2 + 2; i++) {\r\n            if (i % 2 === 0) {\r\n                ctx.lineTo(\r\n                    stretchX * radius * Math.cos((Math.PI * i / param.subTool.sides) - Math.PI / 2 + (Math.PI / 180 * param.subTool.startAngle)),\r\n                    stretchY * radius * Math.sin((Math.PI * i / param.subTool.sides) - Math.PI / 2 + (Math.PI / 180 * param.subTool.startAngle))\r\n                );\r\n            } else {\r\n                ctx.lineTo(\r\n                    stretchX * radius / 3 * Math.cos((Math.PI * i / param.subTool.sides) - Math.PI / 2 + (Math.PI / 180 * param.subTool.startAngle)),\r\n                    stretchY * radius / 3 * Math.sin((Math.PI * i / param.subTool.sides) - Math.PI / 2 + (Math.PI / 180 * param.subTool.startAngle))\r\n                );\r\n            }\r\n        };\r\n        if (param.subTool.fill) {\r\n            ctx.fill();\r\n        }\r\n        ctx.stroke();\r\n    }\r\n\r\n    const drawArrow = (stretchX, stretchY, radius) => {\r\n        ctx.beginPath();\r\n        ctx.moveTo(stretchX * -radius * Math.cos(Math.PI / 8), stretchY * -radius * Math.sin(Math.PI / 8));\r\n        ctx.lineTo(0, stretchY * -radius * Math.sin(Math.PI / 8));\r\n        ctx.lineTo(0, stretchY * -radius);\r\n        ctx.lineTo(stretchX * radius, 0);\r\n        ctx.lineTo(0, stretchY * radius);\r\n        ctx.lineTo(0, stretchY * radius * Math.sin(Math.PI / 8));\r\n        ctx.lineTo(stretchX * -radius * Math.cos(Math.PI / 8), stretchY * radius * Math.sin(Math.PI / 8));\r\n        ctx.closePath();\r\n        if (param.subTool.fill) {\r\n            ctx.fill();\r\n        }\r\n        ctx.stroke();\r\n    }\r\n\r\n    const drawHeart = (stretchX, stretchY, radius) => {\r\n        if (param.subTool.stretch) {\r\n            if (stretchX > stretchY) {\r\n                ctx.scale(stretchX, 1);\r\n            } else {\r\n                ctx.scale(1, stretchY);\r\n            }\r\n        }\r\n        ctx.beginPath();\r\n        ctx.moveTo(0, radius);\r\n        ctx.arc(-radius / 2, -radius / 5, radius / 2, 3 * Math.PI / 4, 0, false);\r\n        ctx.arc(radius / 2, -radius / 5, radius / 2, Math.PI, Math.PI / 4, false);\r\n        ctx.closePath();\r\n        if (param.subTool.fill) {\r\n            ctx.fill();\r\n        }\r\n        ctx.stroke();\r\n    }\r\n\r\n    const drawFunctions = {\r\n        drawBrush,\r\n        drawEraser,\r\n        drawSpray,\r\n        drawBucket,\r\n        drawText,\r\n        drawPipette,\r\n        drawSelect,\r\n        drawShape,\r\n        drawLine,\r\n        drawCurve,\r\n        drawCircle,\r\n        drawRectangle,\r\n        drawPolygon,\r\n        drawStar,\r\n        drawArrow,\r\n        drawHeart,\r\n    };\r\n    if (preview) {\r\n        ctx.clearRect(0, 0, width, height);\r\n        if (param.tool !== \"Magnifier\") {\r\n            if (param.tool === \"Bucket\" || param.tool === \"Pipette\") {\r\n                return;\r\n            } else if (param.tool === \"Spray\") {\r\n                drawEraser();\r\n            }\r\n            else {\r\n                drawFunctions[\"draw\" + param.tool]();\r\n            }\r\n        }\r\n    } else if (param.tool !== \"Magnifier\") {\r\n        drawFunctions[\"draw\" + param.tool]();\r\n    }\r\n}","import { handleDraw } from \"./handleDraw.js\";\r\nexport const handleTools = (canvas, cursor, setCursor, params, action, setAction) => {\r\n  switch (params.tool) {\r\n    case \"Brush\":\r\n    case \"Eraser\":\r\n      handleDraw(canvas, cursor, params, false);\r\n      if (action !== \"drawing\") {\r\n        setAction(\"drawing\");\r\n      }\r\n      break;\r\n    case \"Bucket\":\r\n      handleDraw(canvas, cursor, params, false);\r\n      setAction(\"finished\");\r\n      break;\r\n    case \"Spray\":\r\n      for (let i = 0; i < 10; i++) {\r\n        handleDraw(canvas, cursor, params, false);\r\n      }\r\n      setAction(\"drawing\");\r\n      break;\r\n    case \"Text\":\r\n      if (\r\n        cursor.current.x !== 0 &&\r\n        cursor.current.y !== 0\r\n      ) {\r\n        const boundary = canvas.getBoundingClientRect();\r\n        params.setText({\r\n          ...params.text,\r\n          left: cursor.start.x - boundary.x,\r\n          top: cursor.start.y - boundary.y,\r\n          color: params.selectedColor,\r\n          size: params.size + \"px\",\r\n          state: \"preview\",\r\n        });\r\n      }\r\n      if (action === \"confirm\") {\r\n        handleDraw(canvas, cursor, params, false);\r\n        params.setText({ ...params.text, text: \"\", state: \"none\" });\r\n        setAction(\"finished\");\r\n      }\r\n      break;\r\n    case \"Pipette\":\r\n      handleDraw(canvas, cursor, params, false);\r\n      break;\r\n    case \"Magnifier\":\r\n      break;\r\n    case \"Select\":\r\n      if (action === \"clipping\" && params.clipboard.state !== \"carry\") {\r\n        handleDraw(canvas, cursor, params, false);\r\n      } else if (action === \"confirm\") {\r\n        handleDraw(canvas, cursor, params, false);\r\n        setAction(\"finished\");\r\n      }\r\n      break;\r\n    case \"Shape\":\r\n      if (params.subTool.shape === \"Curve\" && cursor.down) {\r\n        let newState = params.curveControls.state;\r\n        let newStart = params.curveControls.start;\r\n        let newEnd = params.curveControls.end;\r\n        let newControlPoint1 = params.curveControls.controlPoint1;\r\n        let newControlPoint2 = params.curveControls.controlPoint2;\r\n        if (params.curveControls.state===\"none\") {\r\n          setAction(\"settingPoints\");\r\n          newState = \"start\";\r\n          newStart = { x: cursor.start.x, y: cursor.start.y };\r\n          newEnd = { x: cursor.end.x, y: cursor.end.y };\r\n        }\r\n        else if(params.curveControls.state===\"start\") {\r\n            if(action===\"settingPoints\"){\r\n              newEnd = { x: cursor.end.x, y: cursor.end.y };\r\n            }else{\r\n              setAction(\"settingPoints\");\r\n              newState = \"point1\";\r\n              newControlPoint1 = { x: cursor.end.x, y: cursor.end.y };\r\n            }\r\n        } else if (params.curveControls.state === \"point1\") {\r\n          if(action===\"settingPoints\"){\r\n            newControlPoint1 = { x: cursor.end.x, y: cursor.end.y };\r\n          }else{\r\n            setAction(\"settingPoints\");\r\n            newState = \"point2\";\r\n            newControlPoint2 = { x: cursor.end.x, y: cursor.end.y };\r\n          }\r\n        } else if (params.curveControls.state === \"point2\") {\r\n          newControlPoint2 = { x: cursor.end.x, y: cursor.end.y };\r\n        }\r\n        params.setCurveControls({\r\n          ...params.curveControls,\r\n          state: newState,\r\n          start: newStart,\r\n          end: newEnd,\r\n          controlPoint1: newControlPoint1,\r\n          controlPoint2: newControlPoint2\r\n        });\r\n      } else if(params.subTool.shape === \"Curve\" && action===\"cancel\") {\r\n        params.setCurveControls({\r\n          state: \"none\",\r\n          start: { x: -1, y: -1 },\r\n          end: { x: -1, y: -1 },\r\n          controlPoint1: { x: -1, y: -1 },\r\n          controlPoint2: { x: -1, y: -1 }\r\n        })\r\n      }\r\n      \r\n\r\n      if (action === \"confirm\") {\r\n        handleDraw(canvas, cursor, params, false);\r\n        if (params.subTool.shape === \"Curve\") {\r\n          params.setCurveControls({\r\n            state: \"none\",\r\n            start: { x: -1, y: -1 },\r\n            end: { x: -1, y: -1 },\r\n            controlPoint1: { x: -1, y: -1 },\r\n            controlPoint2: { x: -1, y: -1 }\r\n          })\r\n        }\r\n        setAction(\"finished\");\r\n        setCursor({\r\n          ...cursor,\r\n          start: { x: 0, y: 0 },\r\n          end: { x: 0, y: 0 },\r\n        })\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};","export const handleTopMenu = (appMenu, setAppMenu, args, flag) => {\r\n    //Default App Menu  \r\n    const defaultAppMenu = {\r\n        \"File\": {\r\n            \"New\": {\r\n                \"action\": \"New\",\r\n                \"keybind\": \"Alt+N\",\r\n                \"disabled\": false\r\n            },\r\n            \"Open\": {\r\n                \"action\": \"Open\",\r\n                \"keybind\": \"Alt+O\",\r\n                \"disabled\": true,\r\n                \"title\": \"Not Implemented\"\r\n            },\r\n            \"Save\": {\r\n                \"action\": \"Save\",\r\n                \"keybind\": \"Ctrl+Alt+S\",\r\n                \"disabled\": true\r\n            },\r\n            \"Save As\": {\r\n                \"action\": \"Save As\",\r\n                \"keybind\": \"Ctrl+Alt+Shift+S\",\r\n                \"disabled\": true,\r\n                \"title\": \"Not Implemented\"\r\n            },\r\n            \"Change Name\": {\r\n                \"action\": \"Change Name\",\r\n                \"keybind\": \"F2\",\r\n                \"disabled\": false\r\n            },\r\n            \"Close\": {\r\n                \"action\": \"Close\",\r\n                \"keybind\": \"Alt+Shift+F4\",\r\n                \"disabled\": false\r\n            }\r\n        },\r\n        \"Edit\": {\r\n            \"Undo\": {\r\n                \"action\": \"Undo\",\r\n                \"keybind\": \"Ctrl+Z\",\r\n                \"disabled\": false\r\n            },\r\n            \"Redo\": {\r\n                \"action\": \"Redo\",\r\n                \"keybind\": \"Ctrl+Y\",\r\n                \"disabled\": false\r\n            },\r\n            \"LineBreak1\":{},\r\n            \"Cut\": {\r\n                \"action\": \"Cut\",\r\n                \"keybind\": \"Ctrl+X\",\r\n                \"disabled\": true,\r\n                \"title\": \"Not Implemented\"\r\n            },\r\n            \"Copy\": {\r\n                \"action\": \"Copy\",\r\n                \"keybind\": \"Ctrl+C\",\r\n                \"disabled\": true,\r\n                \"title\": \"Not Implemented\"\r\n            },\r\n            \"Paste\": {\r\n                \"action\": \"Paste\",\r\n                \"keybind\": \"Ctrl+V\",\r\n                \"disabled\": true,\r\n                \"title\": \"Not Implemented\"\r\n            },\r\n            \"LineBreak2\":{},\r\n            \"Select All\": {\r\n                \"action\": \"SelectAll\",\r\n                \"keybind\": \"Ctrl+A\",\r\n                \"disabled\": true,\r\n                \"title\": \"Not Implemented\"\r\n            },\r\n            \"Clear\": {\r\n                \"action\": \"SelectClear\",\r\n                \"keybind\": \"Ctrl+Shift+C\",\r\n                \"disabled\": true,\r\n                \"title\": \"Not Implemented\"\r\n            }\r\n        },\r\n        \"View\": {\r\n            \"Zoom In\": {\r\n                \"action\": \"Zoom In\",\r\n                \"keybind\": \"Alt++\",\r\n                \"disabled\": false\r\n            },\r\n            \"Zoom Out\": {\r\n                \"action\": \"Zoom Out\",\r\n                \"keybind\": \"Alt+-\",\r\n                \"disabled\": false\r\n            },\r\n            \"Zoom Reset\": {\r\n                \"action\": \"Zoom Reset\",\r\n                \"keybind\": \"Alt+0\",\r\n                \"disabled\": true\r\n            },\r\n            \"LineBreak1\":{},\r\n            \"Tool Bar\": {\r\n                \"action\": \"toolBar\",\r\n                \"checkbox\": true,\r\n                \"disabled\": false\r\n            },\r\n            \"Bottom Bar\": {\r\n                \"action\": \"bottomNavBar\",\r\n                \"checkbox\": true,\r\n                \"disabled\": false\r\n            },\r\n            \"Top Bar\": {\r\n                \"action\": \"topNavBar\",\r\n                \"checkbox\": true,\r\n                \"disabled\": false\r\n            }\r\n        },\r\n        \"Help\": {\r\n            \"Help\": {\r\n                \"action\": \"help\",\r\n                \"keybind\": \"F1\",\r\n                \"disabled\": true,\r\n                \"title\": \"Not Implemented\"\r\n            },\r\n            \"About\": {\r\n                \"action\": \"about\",\r\n                \"disabled\": true,\r\n                \"title\": \"Not Implemented\"\r\n            }\r\n        }\r\n    }\r\n    if (appMenu === null) {\r\n        setAppMenu(defaultAppMenu);\r\n    }\r\n    else {\r\n        let updatedAppMenu = { ...appMenu };\r\n        switch (flag) {\r\n            case \"history\":\r\n                let hasHistory = args.history.canUndo || args.history.canRedo;\r\n                updatedAppMenu = {\r\n                    ...updatedAppMenu,\r\n                    \"File\": {\r\n                        ...updatedAppMenu[\"File\"],\r\n                        \"Save\": {\r\n                            ...updatedAppMenu[\"File\"][\"Save\"],\r\n                            \"disabled\": !hasHistory\r\n                        },\r\n                        \"Save As\": {\r\n                            ...updatedAppMenu[\"File\"][\"Save As\"],\r\n                            \"disabled\": !hasHistory\r\n                        }\r\n                    },\r\n                    \"Edit\": {\r\n                        ...updatedAppMenu[\"Edit\"],\r\n                        \"Undo\": {\r\n                            ...updatedAppMenu[\"Edit\"][\"Undo\"],\r\n                            \"disabled\": !args.history.canUndo\r\n                        },\r\n                        \"Redo\": {\r\n                            ...updatedAppMenu[\"Edit\"][\"Redo\"],\r\n                            \"disabled\": !args.history.canRedo\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case \"view\":\r\n                updatedAppMenu = {\r\n                    ...updatedAppMenu,\r\n                    \"View\": {\r\n                        ...updatedAppMenu[\"View\"],\r\n                        \"Tool Bar\": {\r\n                            ...updatedAppMenu[\"View\"][\"Tool Bar\"],\r\n                            \"checkbox\": args.view.toolBar\r\n                        },\r\n                        \"Bottom Bar\": {\r\n                            ...updatedAppMenu[\"View\"][\"Bottom Bar\"],\r\n                            \"checkbox\": args.view.bottomNavBar\r\n                        },\r\n                        \"Top Bar\": {\r\n                            ...updatedAppMenu[\"View\"][\"Top Bar\"],\r\n                            \"checkbox\": args.view.topNavBar\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n                case \"zoom\":\r\n                updatedAppMenu = {\r\n                    ...updatedAppMenu,\r\n                    \"View\": {\r\n                        ...updatedAppMenu[\"View\"],\r\n                        \"Zoom In\": {\r\n                            ...updatedAppMenu[\"View\"][\"Zoom In\"],\r\n                            \"disabled\": args.zoom === 4\r\n                        },\r\n                        \"Zoom Out\": {\r\n                            ...updatedAppMenu[\"View\"][\"Zoom Out\"],\r\n                            \"disabled\": args.zoom === 0.25\r\n                        },\r\n                        \"Zoom Reset\": {\r\n                            ...updatedAppMenu[\"View\"][\"Zoom Reset\"],\r\n                            \"disabled\": args.zoom === 1\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setAppMenu(updatedAppMenu);\r\n    }\r\n}","import { handleTopMenu } from \"./handleTopMenu.js\";\r\n\r\nexport const handleHistory = (context, history, setHistory, command, appMenu, setAppMenu, setCanClose) => {\r\n    let updatedHistory = {};\r\n    let args={};\r\n    const height = context.canvas.height;\r\n    const width = context.canvas.width;\r\n    const MAX_HISTORY_LENGTH = 50;\r\n    const hist = history.history;\r\n    const histIndex = history.index;\r\n    const saveAction = () => {\r\n        if (hist.length < MAX_HISTORY_LENGTH && histIndex === hist.length) {\r\n            updatedHistory = {\r\n                history: [...hist, context.getImageData(0, 0, width, height),],\r\n                index: histIndex + 1,\r\n                canUndo: true,\r\n                canRedo: false\r\n            };\r\n            setHistory(updatedHistory);\r\n            handleTopMenu(appMenu, setAppMenu, args={history:{...updatedHistory}}, \"history\");\r\n        } else if (hist.length === MAX_HISTORY_LENGTH && histIndex === hist.length) {\r\n            updatedHistory = {\r\n                history: [...hist.slice(1), context.getImageData(0, 0, width, height)],\r\n                index: histIndex,\r\n                canUndo: true,\r\n                canRedo: false\r\n            };\r\n            setHistory(updatedHistory);\r\n            handleTopMenu(appMenu, setAppMenu, args={history:{...updatedHistory}}, \"history\");\r\n        } else if (histIndex < hist.length) {\r\n                updatedHistory = {\r\n                history: [...hist.slice(0, histIndex + 1), context.getImageData(0, 0, width, height)],\r\n                index: histIndex + 1,\r\n                canUndo: true,\r\n                canRedo: false\r\n            };\r\n            setHistory(updatedHistory);\r\n            handleTopMenu(appMenu, setAppMenu, args={history:{...updatedHistory}}, \"history\");\r\n        }\r\n        setCanClose(false);\r\n    };\r\n    const undoAction = () => {\r\n        if (hist.length > 0 && histIndex > 0) {\r\n            let undoFlag = true;\r\n            if (histIndex - 1 === 0) {\r\n                undoFlag = false;\r\n            }\r\n            context.putImageData(hist[histIndex - 1], 0, 0);\r\n            updatedHistory = {\r\n                ...history,\r\n                index: histIndex - 1,\r\n                canUndo: undoFlag,\r\n                canRedo: true\r\n            };\r\n            setCanClose(undoFlag);\r\n            setHistory(updatedHistory);\r\n            handleTopMenu(appMenu, setAppMenu, args={history:{...updatedHistory}}, \"history\");\r\n        }\r\n    };\r\n    const redoAction = () => {\r\n        let redoFlag = true;\r\n        if (histIndex + 1 === hist.length - 1) {\r\n            redoFlag = false;\r\n        }\r\n        if (histIndex < hist.length - 1) {\r\n            context.putImageData(hist[histIndex + 1], 0, 0);\r\n            updatedHistory = {\r\n                ...history,\r\n                index: histIndex + 1,\r\n                canUndo: true,\r\n                canRedo: redoFlag\r\n            };\r\n            setHistory(updatedHistory);\r\n            setCanClose(false);\r\n            handleTopMenu(appMenu, setAppMenu, args={history:{...updatedHistory}}, \"history\");\r\n        }\r\n    };\r\n    const clearAction = () => {\r\n        updatedHistory = {\r\n            history: [context.getImageData(0, 0, width, height)],\r\n            index: 0,\r\n            canUndo: false,\r\n            canRedo: false\r\n        };\r\n        setHistory(updatedHistory);\r\n        setCanClose(true);\r\n        handleTopMenu(appMenu, setAppMenu, args={history:{...updatedHistory}}, \"history\");\r\n    }\r\n\r\n    switch (command) {\r\n        case \"undo\":\r\n            undoAction();\r\n            break;\r\n        case \"redo\":\r\n            redoAction();\r\n            break;\r\n        case \"save\":\r\n            saveAction();\r\n            break;\r\n        case \"clear\":\r\n            clearAction();\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n}","export const handleFile = (ctx, name, action) => {\r\n\r\n    const height = ctx.canvas.height;\r\n    const width = ctx.canvas.width;\r\n\r\n    const saveFile = (ctx) => {\r\n        let downloadLink = document.createElement(\"a\");\r\n        downloadLink.setAttribute(\"download\", name + \".png\");\r\n        let dataURL = ctx.canvas.toDataURL(\"image/png\");\r\n        let url = dataURL.replace(\r\n            /^data:image\\/png/,\r\n            \"data:application/octet-stream\",\r\n        );\r\n        downloadLink.setAttribute(\"href\", url);\r\n        downloadLink.click();\r\n    };\r\n    const newFile = (ctx) => {\r\n        ctx.fillStyle = \"#FFFFFF\";\r\n        ctx.fillRect(0, 0, width, height);\r\n    };\r\n\r\n    switch (action) {\r\n        case \"new\":\r\n            newFile(ctx);\r\n            break;\r\n        case \"save\":\r\n            saveFile(ctx);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}","import { handleTools } from \"./handleTools.js\";\r\nimport { handleHistory } from \"./handleHistory.js\";\r\nimport { handleFile } from \"./handleFile.js\";\r\nimport { handleTopMenu } from \"./handleTopMenu.js\";\r\n\r\nimport { dialogNew } from \"../Dialog/new.jsx\";\r\nimport { dialogChangeName } from \"../Dialog/changeName.jsx\";\r\nexport const handleAction = (canvas, ctx, params, action, setAction, context, appMenu, setAppMenu, appDialog, setAppDialog, contextMenu, canCLose, setCanClose) => {\r\n  let args = {};\r\n  switch (action) {\r\n    case \"Startup\":\r\n      handleFile(ctx, context.name, \"new\");\r\n      handleHistory(ctx, context.history, context.setHistory, \"clear\", appMenu, setAppMenu, setCanClose);\r\n      setAction(false);\r\n      break;\r\n    case \"New\":\r\n      dialogNew(context, setAction, setAppDialog);\r\n      setAction(false);\r\n      break;\r\n    case \"New Confirm\":\r\n      setAppDialog(null);\r\n      handleFile(ctx, context.name, \"new\");\r\n      handleHistory(ctx, context.history, context.setHistory, \"clear\", appMenu, setAppMenu, setCanClose);\r\n      setAction(false);\r\n      break;\r\n    case \"Save\":\r\n      handleFile(ctx, context.name, \"save\");\r\n      setAction(false);\r\n      break;\r\n    case \"Save As\":\r\n      break;\r\n    case \"Change Name\":\r\n      dialogChangeName(context, setAction, setAppDialog);\r\n      setAction(false);\r\n      break;\r\n    case \"Change Name Confirm\":\r\n      setAppDialog(null);\r\n      setAction(false);\r\n      break;\r\n    case \"Undo\":\r\n      handleHistory(ctx, context.history, context.setHistory, \"undo\", appMenu, setAppMenu, setCanClose);\r\n      setAction(false);\r\n      break;\r\n    case \"Redo\":\r\n      handleHistory(ctx, context.history, context.setHistory, \"redo\", appMenu, setAppMenu, setCanClose);\r\n      setAction(false);\r\n      break;\r\n    case \"Zoom In\":\r\n      if (context.zoom < 4) {\r\n        if (context.zoom < 1) {\r\n          context.setZoom(context.zoom + 0.25);\r\n          args = { zoom: context.zoom + 0.25 };\r\n        } else {\r\n          context.setZoom(context.zoom + 1);\r\n          args = { zoom: context.zoom + 1 };\r\n        }\r\n        handleTopMenu(appMenu, setAppMenu, args, \"zoom\");\r\n      }\r\n      setAction(false);\r\n      break;\r\n    case \"Zoom Out\":\r\n      if (context.zoom > 0.25) {\r\n        if (context.zoom <= 1) {\r\n          context.setZoom(context.zoom - 0.25);\r\n          args = { zoom: context.zoom - 0.25 };\r\n        } else {\r\n          context.setZoom(context.zoom - 1);\r\n          args = { zoom: context.zoom - 1 };\r\n        }\r\n        handleTopMenu(appMenu, setAppMenu, args, \"zoom\");\r\n      }\r\n      setAction(false);\r\n      break;\r\n    case \"Zoom Reset\":\r\n      context.setZoom(1);\r\n      args = { zoom: 1 };\r\n      handleTopMenu(appMenu, setAppMenu, args, \"zoom\");\r\n      setAction(false);\r\n      break;\r\n    case \"Zoom Min\":\r\n      args = { zoom: 0.25 };\r\n      handleTopMenu(appMenu, setAppMenu, args, \"zoom\");\r\n      setAction(false);\r\n      break;\r\n    case \"Zoom Max\":\r\n      args = { zoom: 4 };\r\n      handleTopMenu(appMenu, setAppMenu, args, \"zoom\");\r\n      setAction(false);\r\n      break;\r\n    case \"Zoom Default\":\r\n      args = { zoom: 1 };\r\n      handleTopMenu(appMenu, setAppMenu, args, \"zoom\");\r\n      setAction(false);\r\n      break;\r\n    case \"Zoom Change\":\r\n      args = { zoom: 2 } // Any value between 0.25 and 4 except for 1 will work to correctly update top menu\r\n      handleTopMenu(appMenu, setAppMenu, args, \"zoom\");\r\n      setAction(false);\r\n      break;\r\n    case \"Cut\":\r\n      //TODO\r\n      setAction(false);\r\n      break;\r\n    case \"Copy\":\r\n      //TODO\r\n      setAction(false);\r\n      break;\r\n    case \"Paste\":\r\n      //TODO\r\n      setAction(false);\r\n      break;\r\n    case \"Select All\":\r\n      //TODO\r\n      setAction(false);\r\n      break;\r\n    case \"Select Clear\":\r\n      //TODO\r\n      setAction(false);\r\n      break;\r\n    case \"finished\":\r\n      handleHistory(ctx, context.history, context.setHistory, \"save\", appMenu, setAppMenu, setCanClose);\r\n      setAction(false);\r\n      break;\r\n    case \"drawing\":\r\n      if (context.cursor.down) {\r\n        handleTools(canvas, context.cursor, context.setCursor, params, action, setAction);\r\n      } else {\r\n        setAction(\"finished\");\r\n      }\r\n      break;\r\n    case \"settingPoints\":\r\n      if(context.cursor.down) {\r\n        handleTools(canvas, context.cursor, context.setCursor, params, action, setAction);\r\n      } else{\r\n        setAction(false);\r\n      }\r\n    break;\r\n    case \"cancel\":\r\n    case \"clipping\":\r\n    case \"confirm\":\r\n      handleTools(canvas, context.cursor, context.setCursor, params, action, setAction);\r\n      break;\r\n    case false:\r\n      if (context.cursor.down) {\r\n        handleTools(canvas, context.cursor, context.setCursor, params, action, setAction);\r\n      }\r\n      break;\r\n    case \"topNavBar\":\r\n      context.setView({ ...context.view, topNavBar: !context.view.topNavBar });\r\n      args = { view: { ...context.view, topNavBar: !context.view.topNavBar } };\r\n      handleTopMenu(appMenu, setAppMenu, args, \"view\");\r\n      setAction(false);\r\n      break;\r\n    case \"bottomNavBar\":\r\n      context.setView({ ...context.view, bottomNavBar: !context.view.bottomNavBar });\r\n      args = { view: { ...context.view, bottomNavBar: !context.view.bottomNavBar } };\r\n      handleTopMenu(appMenu, setAppMenu, args, \"view\");\r\n      setAction(false);\r\n      break;\r\n    case \"toolBar\":\r\n      context.setView({ ...context.view, toolBar: !context.view.toolBar });\r\n      args = { view: { ...context.view, toolBar: !context.view.toolBar } };\r\n      handleTopMenu(appMenu, setAppMenu, args, \"view\");\r\n      setAction(false);\r\n      break;\r\n    /*case \"menuBar\":\r\n      context.setView({ ...context.view, menuBar: !context.view.menuBar });\r\n      args={view: { ...context.view, menuBar: !context.view.menuBar }};\r\n      handleTopMenu(appMenu, setAppMenu, args, \"view\");\r\n      setAction(false);\r\n      break;*/\r\n    case \"Close\":\r\n      if(!canCLose){\r\n        setAppDialog({\r\n          title: \"Warning\",\r\n          info: \"Do you want to download the file before closing?\",\r\n          actions:{\r\n            Save: () => {\r\n              handleFile(ctx, context.name, \"save\");\r\n              setCanClose(true);\r\n              setAppDialog(null);\r\n            },\r\n            Close: () => {\r\n              setCanClose(true);\r\n              setAppDialog(null);\r\n            },\r\n            Cancel: () => {\r\n              setAppDialog(null);\r\n              setAction(false);\r\n            }\r\n          }\r\n        });\r\n      }\r\n      break;\r\n    default:\r\n      setAction(false);\r\n      break;\r\n  }\r\n};","export const dialogNew = (context, setAction, setAppDialog) => {\r\n\r\n    let title = \"New File\";\r\n\r\n    const info = <>\r\n        <label htmlFor=\"New title\">Name</label>\r\n        <br/>\r\n        <input\r\n            id=\"New title\"\r\n            type=\"text\"\r\n            value={context.name}\r\n            onChange={(e) => {context.setName(e.target.value);setAction(\"New\") }} />\r\n        <br />\r\n        <label htmlFor=\"Width\">Width</label>\r\n        <br/>\r\n        <input\r\n            id=\"Width\"\r\n            type=\"number\"\r\n            value={context.dimention.width}\r\n            onChange={(e) => {context.setDimention({ ...context.dimention, width: e.target.value });setAction(\"New\")}} />\r\n        <br />\r\n        <label htmlFor=\"Height\">Height</label>\r\n        <br/>\r\n        <input\r\n            id=\"Height\"\r\n            type=\"number\"\r\n            value={context.dimention.height}\r\n            onChange={(e) => {context.setDimention({ ...context.dimention, height: e.target.value });setAction(\"New\")}} />\r\n        <br />\r\n    </>;\r\n\r\n    \r\n    const actions = {\r\n        Confirm: () => {\r\n            setAction(\"New Confirm\");\r\n            setAppDialog(null);\r\n        },\r\n        Cancel: () => {\r\n            setAppDialog(null);\r\n            setAction(false);\r\n        }\r\n    }\r\n    \r\n    setAppDialog({ title: title, info: info, actions: actions });\r\n}","export const dialogChangeName = (context, setAction, setAppDialog) => {\r\n\r\n    const title = \"Change Name\";\r\n\r\n    const info = <>\r\n        <label htmlFor=\"New title\">Name</label>\r\n        <br />\r\n        <input\r\n            id=\"New title\"\r\n            type=\"text\"\r\n            value={context.name}\r\n            onChange={(e) => { context.setName(e.target.value); setAction(\"Change Name\") }} />\r\n        <br />\r\n    </>;\r\n\r\n    const actions = {\r\n        Confirm: () => {\r\n            setAction(\"Change Name Confirm\");\r\n            setAppDialog(null);\r\n        },\r\n        Cancel: () => {\r\n            setAppDialog(null);\r\n            setAction(false);\r\n        }\r\n    };\r\n\r\n    setAppDialog({ title: title, info: info, actions: actions });\r\n}","import { useRef, useContext, useEffect } from \"react\";\r\nimport { Context } from \"../Context.jsx\";\r\nimport { handleAction } from \"../Handlers/handleAction.jsx\";\r\nexport const DrawCanvas = ({ action, setAction, appMenu, setAppMenu, appDialog, setAppDialog, contextMenu, canClose, setCanClose }) => {\r\n  const canvasMainRef = useRef(null);\r\n  const context = useContext(Context);\r\n    const tool = context.tool;\r\n    const subTool = context.subTool;\r\n    const curveControls = context.curveControls;\r\n    const setCurveControls = context.setCurveControls;\r\n    const size = context.size;\r\n    const selectedColor = context.color.selected;\r\n    const color1 = context.color[1];\r\n    const setColor1 = (v) => context.setColor({...context.color, 1: v, selected: v});\r\n    const color2 = context.color[2];\r\n    const setColor2 = (v) => context.setColor({...context.color, 2: v, selected: v});\r\n    const text = context.text;\r\n    const setText = context.setText;\r\n    const clipboard = context.clipboard;\r\n    const setClipboard = context.setClipboard;\r\n    const params = {\r\n        tool,\r\n        subTool,\r\n        curveControls,\r\n        setCurveControls,\r\n        size,\r\n        selectedColor,\r\n        color1,\r\n        setColor1,\r\n        color2,\r\n        setColor2,\r\n        text,\r\n        setText,\r\n        clipboard,\r\n        setClipboard,\r\n      };\r\n\r\n  useEffect(() => {\r\n    let canvas = canvasMainRef.current;\r\n    let ctx = canvas.getContext(\"2d\", {\r\n      willReadFrequently: true,\r\n    });\r\n    handleAction(canvas, ctx, params, action, setAction, context, appMenu, setAppMenu, appDialog, setAppDialog, contextMenu, canClose, setCanClose );\r\n  }, [context.cursor, action]);\r\n  useEffect(() => {\r\n    let offsetX = (context.dimention.width / 2 - context.zoom * context.dimention.width / 2) * -1 / context.zoom;\r\n    let offsetY = (context.dimention.height / 2 - context.zoom * context.dimention.height / 2) * -1 / context.zoom;\r\n    document.getElementById(\"previewCanvas\").style.transform = `scale(${context.zoom}) translate(${offsetX}px,${offsetY}px)`;\r\n    document.getElementById(\"drawCanvas\").style.transform = `scale(${context.zoom}) translate(${offsetX}px,${offsetY}px)`;\r\n\r\n  }, [context.zoom]);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasMainRef}\r\n      id=\"drawCanvas\"\r\n      height={context.dimention.height} width={context.dimention.width}\r\n    />\r\n  );\r\n};","import { useRef, useEffect, useContext } from \"react\";\r\nimport { Context } from \"../Context.jsx\";\r\nimport { handleDraw } from \"../Handlers/handleDraw.js\";\r\n\r\nexport const PreviewCanvas = ({ setAction, contextMenu }) => {\r\n    const context = useContext(Context);\r\n    const canvasPreviewRef = useRef(null);\r\n    const cursor = context.cursor;\r\n    const setCursor = context.setCursor;\r\n    const tool = context.tool;\r\n    const subTool = context.subTool;\r\n    const curveControls = context.curveControls;\r\n    const setCurveControls = context.setCurveControls;\r\n    const size = context.size;\r\n    const selectedColor = context.color.selected;\r\n    const color1 = context.color[1];\r\n    const setColor1 = (v) => context.setColor({ ...context.color, 1: v });\r\n    const color2 = context.color[2];\r\n    const setColor2 = (v) => context.setColor({ ...context.color, 2: v });\r\n    const text = context.text;\r\n    const setText = context.setText;\r\n    const clipboard = context.clipboard;\r\n    const setClipboard = context.setClipboard;\r\n    const params = {\r\n        tool,\r\n        subTool,\r\n        curveControls,\r\n        setCurveControls,\r\n        size,\r\n        selectedColor,\r\n        color1,\r\n        setColor1,\r\n        color2,\r\n        setColor2,\r\n        text,\r\n        setText,\r\n        clipboard,\r\n        setClipboard,\r\n    };\r\n    const handleCursor = (e) => {\r\n        if (e.button === 0) {\r\n            switch (e.type) {\r\n                case \"mousedown\":\r\n                    if (cursor.down) {\r\n                        setCursor({\r\n                            ...cursor,\r\n                            current: { x: e.clientX, y: e.clientY },\r\n                            end: { x: e.clientX, y: e.clientY },\r\n                        });\r\n                    } else {\r\n                        setCursor({\r\n                            ...cursor,\r\n                            down: true,\r\n                            start: { x: e.clientX, y: e.clientY }\r\n                        });\r\n                    }\r\n                    break;\r\n                case \"mouseup\":\r\n                    setCursor({\r\n                        ...cursor,\r\n                        end: { x: e.clientX, y: e.clientY },\r\n                        down: false\r\n                    });\r\n                    break;\r\n                case \"mousemove\":\r\n                    if (!cursor.down) {\r\n                        setCursor({\r\n                            ...cursor,\r\n                            current: { x: e.clientX, y: e.clientY }\r\n                        });\r\n                    }\r\n                    else {\r\n                        setCursor({\r\n                            ...cursor,\r\n                            current: { x: e.clientX, y: e.clientY },\r\n                            end: { x: e.clientX, y: e.clientY },\r\n                        })\r\n                    }\r\n                    break;\r\n                case \"mouseleave\":\r\n                    setCursor({\r\n                        ...cursor,\r\n                        current: { x: 0, y: 0 }\r\n                    });\r\n                    break;\r\n                case \"mouseenter\":\r\n                    if (e.buttons !== 0) {\r\n                        setCursor({\r\n                            ...cursor,\r\n                            down: true,\r\n                            current: { x: e.clientX, y: e.clientY },\r\n                            end: { x: e.clientX, y: e.clientY },\r\n                        });\r\n                    }\r\n                    else {\r\n                        setCursor({\r\n                            ...cursor,\r\n                            down: false,\r\n                            current: { x: e.clientX, y: e.clientY },\r\n                        })\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleTouch = (e) => {\r\n        e.preventDefault();\r\n        if (e.touches.length === 1) {\r\n            switch (e.type) {\r\n                case \"touchstart\":\r\n                    if (cursor.down) {\r\n                        setCursor({\r\n                            ...cursor,\r\n                            current: { x: e.touches[0].clientX, y: e.touches[0].clientY },\r\n                            end: { x: e.touches[0].clientX, y: e.touches[0].clientY },\r\n                        });\r\n                    } else {\r\n                        setCursor({\r\n                            ...cursor,\r\n                            down: true,\r\n                            start: { x: e.touches[0].clientX, y: e.touches[0].clientY }\r\n                        });\r\n                    }\r\n                    break;\r\n                case \"touchend\":\r\n                    setCursor({\r\n                        ...cursor,\r\n                        end: { x: e.touches[0].clientX, y: e.touches[0].clientY },\r\n                        down: false\r\n                    });\r\n                    break;\r\n                case \"touchmove\":\r\n                    if (!cursor.down) {\r\n                        setCursor({\r\n                            ...cursor,\r\n                            current: { x: e.touches[0].clientX, y: e.touches[0].clientY }\r\n                        });\r\n                    }\r\n                    else {\r\n                        setCursor({\r\n                            ...cursor,\r\n                            current: { x: e.touches[0].clientX, y: e.touches[0].clientY },\r\n                            end: { x: e.touches[0].clientX, y: e.touches[0].clientY },\r\n                        })\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            };\r\n        }else{\r\n            setCursor({\r\n                ...cursor,\r\n                current: { x: 0, y: 0 },\r\n                end: { x: cursor.current.x, y: cursor.current.y },\r\n                down: false\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        handleDraw(canvasPreviewRef.current, cursor, params, true);\r\n    }, [cursor, params]);\r\n\r\n    const handleContextMenu = (event) => {\r\n        event.preventDefault();\r\n        let content = {\r\n            \"Undo\": { action: () => setAction(\"Undo\"), disabled: !context.history.canUndo },\r\n            \"Redo\": { action: () => setAction(\"Redo\"), disabled: !context.history.canRedo },\r\n            \"LineBreak\": {},\r\n            \"Zoom In\": { action: () => setAction(\"Zoom In\"), disabled: context.zoom === 4 },\r\n            \"Zoom Out\": { action: () => setAction(\"Zoom Out\"), disabled: context.zoom === 0.25 },\r\n            \"Zoom Reset\": { action: () => setAction(\"Zoom Reset\"), disabled: context.zoom === 1 },\r\n        };\r\n        contextMenu.setOpen();\r\n        contextMenu.setPosition(event.clientX, event.clientY);\r\n        contextMenu.setContent(content);\r\n    };\r\n    return (\r\n        <canvas\r\n            ref={canvasPreviewRef}\r\n            style={{ color: params.selectedColor }}\r\n            className={(\"cursor\" + params.tool)}\r\n            id=\"previewCanvas\"\r\n            height={context.dimention.height}\r\n            width={context.dimention.width}\r\n            onMouseDown={(e) => handleCursor(e)}\r\n            onMouseUp={(e) => handleCursor(e)}\r\n            onMouseMove={(e) => handleCursor(e)}\r\n            onMouseLeave={(e) => handleCursor(e)}\r\n            onMouseEnter={(e) => handleCursor(e)}\r\n            onTouchStart={(e) => handleTouch(e)}\r\n            onTouchEnd={(e) => handleTouch(e)}\r\n            onTouchMove={(e) => handleTouch(e)}\r\n            onTouchCancel={(e) => handleTouch(e)}\r\n            onContextMenu={(e) => handleContextMenu(e)}\r\n        />\r\n    );\r\n};","import { useContext } from \"react\";\r\nimport { Context } from \"../Context.jsx\";\r\nimport { BiUndo, BiRedo } from \"react-icons/bi\";\r\nimport { TfiSave, TfiFile } from \"react-icons/tfi\";\r\n\r\nimport ColorPicker from \"../../../System/GlobalComponents/ColorPicker/ColorPicker.jsx\";\r\n\r\nexport const TopNavBar = ({ setAction, contextMenu }) => {\r\n  const context = useContext(Context);\r\n  const handleZoom = (e) => {\r\n    context.setZoom(Number(e.target.value));\r\n    if (e.target.value === \"0.25\") {\r\n      setAction(\"Zoom Min\");\r\n    } else if (e.target.value === \"4\") {\r\n      setAction(\"Zoom Max\");\r\n    }\r\n    else if (e.target.value === \"1\") {\r\n      setAction(\"Zoom Default\");\r\n    }\r\n    else {\r\n      setAction(\"Zoom Change\");\r\n    }\r\n  }\r\n\r\n  const handleContextMenu = (event) => {\r\n    event.preventDefault();\r\n    let content = { \"Hide\": { action: () => setAction(\"topNavBar\") } };\r\n    contextMenu.setOpen();\r\n    contextMenu.setPosition(event.clientX, event.clientY);\r\n    contextMenu.setContent(content);\r\n  };\r\n\r\n  if (context.view.topNavBar) {\r\n    return (\r\n      <nav onContextMenu={(event) => handleContextMenu(event)}>\r\n        <button onClick={() => setAction(\"Undo\")} disabled={!context.history.canUndo}>\r\n          <BiUndo title=\"Undo\" />\r\n        </button>\r\n        <button onClick={() => setAction(\"Redo\")} disabled={!context.history.canRedo}>\r\n          <BiRedo title=\"Redo\" />\r\n        </button>\r\n        <vertical-rect ></vertical-rect>\r\n        <button onClick={() => setAction(\"New\")}>\r\n          <TfiFile title=\"New File\" />\r\n        </button>\r\n        <button onClick={() => setAction(\"Save\")} disabled={!(context.history.canRedo || context.history.canUndo)}>\r\n          <TfiSave title=\"Save File\" />\r\n        </button>\r\n        <vertical-rect ></vertical-rect>\r\n        <div style={{ display: \"flex\" }}>\r\n          <button className={context.color.selected === context.color[1] ? \"buttonActive\" : \"\"}\r\n            onClick={() => context.setColor({ ...context.color, selected: context.color[1] })}>\r\n            <label htmlFor=\"drawColor1\" onClick={(e) => e.preventDefault()}>1</label>\r\n          </button>\r\n          <ColorPicker\r\n            color={context.color[1]}\r\n            setColor={(color) => { context.setColor({ ...context.color, selected: color, 1: color }) }}\r\n            useAlpha={false}\r\n          />\r\n        </div>\r\n        <vertical-rect ></vertical-rect>\r\n        <div style={{ display: \"flex\" }}>\r\n          <button className={context.color.selected === context.color[2] ? \"buttonActive\" : \"\"}\r\n            onClick={() => context.setColor({ ...context.color, selected: context.color[2] })}>\r\n            <label htmlFor=\"drawColor2\" onClick={(e) => e.preventDefault()}>2</label>\r\n          </button>\r\n          <ColorPicker\r\n            color={context.color[2]}\r\n            setColor={(color) => context.setColor({ ...context.color, selected: color, 2: color })}\r\n            useAlpha={false}\r\n          />\r\n        </div>\r\n        <vertical-rect ></vertical-rect>\r\n        {context.tool === \"Magnifier\" &&\r\n          <select\r\n            value={context.zoom}\r\n            onChange={(e) => { handleZoom(e) }}\r\n            title=\"Zoom\"\r\n          >\r\n            <option value={0.25}>25%</option>\r\n            <option value={0.5}>50%</option>\r\n            <option value={0.75}>75%</option>\r\n            <option value={1}>100%</option>\r\n            <option value={2}>200%</option>\r\n            <option value={3}>300%</option>\r\n            <option value={4}>400%</option>\r\n          </select>}\r\n        {context.tool !== \"Select\" && context.tool !== \"Pipette\" && context.tool !== \"Magnifier\" &&\r\n          <select\r\n            value={context.size}\r\n            onChange={(e) => {\r\n              context.setSize(e.target.value);\r\n            }}\r\n            title={context.tool === \"Text\" ? \"Font Size\" : context.tool === \"Shape\" ? \"Line Width\" : \"Radius\"}\r\n          >\r\n            <option value={1}>1px</option>\r\n            <option value={2}>2px</option>\r\n            <option value={4}>4px</option>\r\n            <option value={8}>8px</option>\r\n            <option value={16}>16px</option>\r\n            <option value={32}>32px</option>\r\n          </select>}\r\n        {context.tool === \"Text\" &&\r\n          <select\r\n            title=\"Font Family\"\r\n            value={context.text.fontFamily}\r\n            onChange={(e) => context.setText({ ...context.text, fontFamily: e.target.value })}\r\n          >\r\n            <option>Arial</option>\r\n            <option>Times New Roman</option>\r\n            <option>Monospace</option>\r\n            <option>Verdana</option>\r\n            <option>Georgia</option>\r\n            <option>Courier New</option>\r\n            <option>Tahoma</option>\r\n            <option>Garamond</option>\r\n            <option>Impact</option>\r\n            <option>Comic Sans MS</option>\r\n            <option>Lucida Console</option>\r\n            <option>Lucida Sans Unicode</option>\r\n            <option>Palatino Linotype</option>\r\n            <option>Symbol</option>\r\n            <option>Wingdings</option>\r\n            <option>Helvetica</option>\r\n          </select>}\r\n        {context.tool === \"Shape\" &&\r\n          <>\r\n            <select\r\n              title=\"Shape\"\r\n              value={context.subTool.shape}\r\n              onChange={(e) => context.setSubTool({ ...context.subTool, shape: e.target.value })}\r\n            >\r\n              <option>Line</option>\r\n              <option>Curve</option>\r\n              <option>Circle</option>\r\n              <option>Rectangle</option>\r\n              <option>Polygon</option>\r\n              <option>Star</option>\r\n              <option>Arrow</option>\r\n              <option>Heart</option>\r\n            </select>\r\n            {(context.subTool.shape === \"Polygon\" || context.subTool.shape === \"Star\") &&\r\n              <input\r\n                type=\"number\"\r\n                title=\"Sides\"\r\n                value={context.subTool.sides}\r\n                onChange={(e) => context.setSubTool({ ...context.subTool, sides: e.target.value })}\r\n                min=\"3\"\r\n                step=\"1\" />\r\n            }\r\n          </>}\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n","import { useRef, useEffect } from \"react\";\r\n\r\nexport const SubToolIcon = ({ subtool }) => {\r\n    let canvasSubToolRef = useRef(null);\r\n\r\n    const drawCircleIcon = (context, width, height) => {\r\n        context.beginPath();\r\n        context.arc(\r\n            width / 2,\r\n            height / 2,\r\n            (height / 2) - 2,\r\n            0,\r\n            Math.PI * 2,\r\n        );\r\n        if (subtool.fill) {\r\n            context.fill();\r\n        }\r\n        context.stroke();\r\n        context.closePath();\r\n    };\r\n    const drawEllipseIcon = (context, width, height) => {\r\n        context.scale(1,0.5);\r\n        context.beginPath();\r\n        context.beginPath();\r\n        context.arc(\r\n            width / 2,\r\n            height,\r\n            (height / 2) - 2,\r\n            0,\r\n            Math.PI * 2,\r\n        );\r\n        if (subtool.fill) {\r\n            context.fill();\r\n        }\r\n        context.stroke();\r\n        context.closePath();\r\n        context.scale(1,2);\r\n    }\r\n    const drawRectangleIcon = (context, width, height) => {\r\n        if (subtool.fill) {\r\n            context.fillRect(0, height / 4, width, height / 2);\r\n        }\r\n        context.strokeRect(0, height / 4, width, height / 2);\r\n\r\n    };\r\n    const drawPolygonIcon = (context, width, height) => {\r\n        context.beginPath();\r\n        //context.moveTo(width/2, 0);\r\n        for (let i = 0; i < subtool.sides; i++) {\r\n            context.lineTo(\r\n                width / 2 + (width / 2 - 3) * Math.cos((2 * Math.PI * i / subtool.sides) - Math.PI / 2),\r\n                height / 2 + (height / 2 - 3) * Math.sin((2 * Math.PI * i / subtool.sides) - Math.PI / 2)\r\n            );\r\n        };\r\n        context.closePath();\r\n        context.stroke();\r\n        if (subtool.fill) {\r\n            context.fill();\r\n        }\r\n    }\r\n    const drawLineIcon = (context, width, height) => {\r\n        context.beginPath();\r\n        context.moveTo(width / 4, 2);\r\n        context.lineTo(3 * width / 4, height - 2);\r\n        context.closePath();\r\n        context.stroke();\r\n    }\r\n    const drawCurveIcon = (context, width, height) => {\r\n        context.beginPath();\r\n        context.moveTo(width / 6, 2);\r\n        context.bezierCurveTo(5 * width / 6, height / 5, width / 6, 4 * height / 5 - 2, 5 * width / 6, height - 2);\r\n        context.stroke();\r\n    }\r\n    const drawArrowIcon = (context, width, height) => {\r\n        context.beginPath();\r\n        context.moveTo(2, height / 3);\r\n        context.lineTo(width / 2, height / 3);\r\n        context.lineTo(width / 2, 2);\r\n        context.lineTo(width - 2, height / 2);\r\n        context.lineTo(width / 2, height - 2);\r\n        context.lineTo(width / 2, 2 * height / 3);\r\n        context.lineTo(2, 2 * height / 3);\r\n        context.closePath();\r\n        context.stroke();\r\n        if (subtool.fill) {\r\n            context.fill();\r\n        }\r\n    }\r\n    const drawStarIcon = (context, width, height) => {\r\n        context.beginPath();\r\n        context.moveTo(width / 2, 3);\r\n        for (let i = 0; i < subtool.sides * 2; i++) {\r\n            if (i % 2 === 0) {\r\n                context.lineTo(\r\n                    width / 2 + (width / 2 - 3) * Math.cos((2 * Math.PI * i / (subtool.sides * 2)) - Math.PI / 2),\r\n                    height / 2 + (height / 2 - 3) * Math.sin((2 * Math.PI * i / (subtool.sides * 2)) - Math.PI / 2)\r\n                );\r\n            } else {\r\n                context.lineTo(\r\n                    width / 2 + (width / 4 - 3) * Math.cos((2 * Math.PI * i / (subtool.sides * 2)) - Math.PI / 2),\r\n                    height / 2 + (height / 4 - 3) * Math.sin((2 * Math.PI * i / (subtool.sides * 2)) - Math.PI / 2)\r\n                );\r\n            }\r\n        };\r\n        context.closePath();\r\n        context.stroke();\r\n        if (subtool.fill) {\r\n            context.fill();\r\n        }\r\n    }\r\n    const drawHeartIcon = (context, width, height) => {\r\n        context.beginPath();\r\n        context.moveTo(width / 2, height-3);\r\n        //context.lineTo(width / 4, 2*height/3);\r\n        context.arc(width/4+1, height/3, width/4-1, 3*Math.PI/4, 0, false);\r\n        context.arc(3*width/4-1, height/3, width/4-1, Math.PI, Math.PI/4, false);\r\n        context.closePath();\r\n        context.stroke();\r\n        if (subtool.fill) {\r\n            context.fill();\r\n        }\r\n\r\n    }\r\n\r\n    const functionList = {\r\n        drawCircleIcon,\r\n        drawEllipseIcon,\r\n        drawRectangleIcon,\r\n        drawPolygonIcon,\r\n        drawLineIcon,\r\n        drawCurveIcon,\r\n        drawStarIcon,\r\n        drawArrowIcon,\r\n        drawHeartIcon\r\n    };\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasSubToolRef.current;\r\n        const context = canvas.getContext(\"2d\");\r\n        const height = context.canvas.height;\r\n        const width = context.canvas.width;\r\n        context.clearRect(0, 0, width, height);\r\n        context.fillStyle = \"lightgray\";\r\n        context.strokeStyle = \"white\";\r\n        context.lineWidth = 2;\r\n        functionList[\"draw\"+subtool.shape+\"Icon\"](context, width, height);\r\n    }, [subtool]);\r\n\r\n    return <canvas ref={canvasSubToolRef} id=\"shapeCanvas\" width=\"25\" height=\"25\"  title=\"Custom Shape\"/>\r\n}","import { useContext } from \"react\";\r\nimport { Context } from \"../Context.jsx\";\r\nimport { SubToolIcon } from \"./SubToolIcon.jsx\";\r\nimport { GiPaintBrush } from \"react-icons/gi\";\r\nimport {\r\n    TfiSpray,\r\n    TfiPaintBucket,\r\n    TfiEraser,\r\n} from \"react-icons/tfi\";\r\nimport { CgColorPicker } from \"react-icons/cg\";\r\nimport { RxLetterCaseCapitalize } from \"react-icons/rx\";\r\nimport { HiOutlineMagnifyingGlass } from \"react-icons/hi2\";\r\nimport { LuBoxSelect } from \"react-icons/lu\";\r\n\r\nexport const ToolBar = ({ setAction, contextMenu }) => {\r\n    const context = useContext(Context);\r\n    const tool = context.tool;\r\n    const subTool = context.subTool;\r\n    const setTool = context.setTool;\r\n    const toolComponents = {\r\n        Brush: <GiPaintBrush title=\"Brush\" />,\r\n        Eraser: <TfiEraser title=\"Eraser\" />,\r\n        Bucket: <TfiPaintBucket title=\"Bucket\" />,\r\n        Spray: <TfiSpray title=\"Spray Can\" />,\r\n        Text: <RxLetterCaseCapitalize title=\"Insert Text\" />,\r\n        Pipette: <CgColorPicker title=\"Color Picker\" />,\r\n        Magnifier: <HiOutlineMagnifyingGlass title=\"Zoom\" />,\r\n        Select: <LuBoxSelect title=\"Selection\" />,\r\n        Shape: <SubToolIcon subtool={subTool} />,\r\n    };\r\n    const handleContextMenu = (event) => {\r\n        event.preventDefault();\r\n        let content = { \"Hide\": { action:()=>setAction(\"toolBar\")} };\r\n        contextMenu.setOpen();\r\n        contextMenu.setPosition(event.clientX, event.clientY);\r\n        contextMenu.setContent(content);\r\n    };\r\n    if (context.view.toolBar) {\r\n        return (\r\n            <tool-bar onContextMenu={(event) => handleContextMenu(event)}>\r\n                {Object.keys(toolComponents).map((name) => (\r\n                    <button\r\n                        key={name + \"drawToolDropdown\"}\r\n                        onClick={() => setTool(name)}\r\n                        className={tool === name ? \"buttonActive\" : \"\"}\r\n                    >\r\n                        {toolComponents[name]}\r\n                    </button>\r\n                ))}\r\n            </tool-bar>\r\n        )\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport { Context } from \"../Context.jsx\";\r\nexport const BottomNavBar = ({ action, setAction, contextMenu }) => {\r\n  const context = useContext(Context);\r\n  const handleContextMenu = (event) => {\r\n    event.preventDefault();\r\n    let content = { \"Hide\": { action:() => setAction(\"bottomNavBar\")}, }\r\n    contextMenu.setOpen();\r\n    contextMenu.setPosition(event.clientX, event.clientY);\r\n    contextMenu.setContent(content);\r\n};\r\n  if (context.view.bottomNavBar) {\r\n    return (\r\n      <nav onContextMenu={(event) => handleContextMenu(event)}>\r\n        {context.tool === \"Text\" &&\r\n          <>\r\n            <button\r\n              title=\"Confirm Text\"\r\n              onClick={() => setAction(\"confirm\")}\r\n            ><small>Confirm</small>\r\n            </button>\r\n            <vertical-rect ></vertical-rect>\r\n            <input\r\n              type=\"text\"\r\n              title=\"Text Input\"\r\n              value={context.text.text}\r\n              onChange={(e) => context.setText({ ...context.text, text: e.target.value })}\r\n            />\r\n          </>}\r\n        {context.tool === \"Select\" ?\r\n          <>{action === \"clipping\" && context.clipboard.state === \"carry\" ?\r\n            <button\r\n              title=\"Paste\"\r\n              onClick={() => { setAction(\"confirm\"); context.setClipboard({ ...context.clipboard, state: \"paste\" }) }}\r\n            ><small>Paste</small></button>\r\n            :\r\n            <>\r\n              <button\r\n                title=\"Cut\"\r\n                onClick={() => { setAction(\"clipping\"); context.setClipboard({ ...context.clipboard, state: \"cut\" }) }}\r\n              ><small>Cut</small></button>\r\n              <vertical-rect ></vertical-rect>\r\n              <button\r\n                title=\"Copy\"\r\n                onClick={() => { setAction(\"clipping\"); context.setClipboard({ ...context.clipboard, state: \"copy\" }) }}\r\n              ><small>Copy</small></button>\r\n            </>\r\n          }</>\r\n          : null}\r\n        {context.tool === \"Shape\" ?\r\n          <>\r\n            <button\r\n              title=\"Confirm Shape\"\r\n              onClick={() => setAction(\"confirm\")}\r\n            ><small>Confirm</small></button>\r\n            <vertical-rect ></vertical-rect>\r\n            {context.subTool.shape === \"Curve\" && \r\n            <button\r\n            title=\"Cancel Shape\"\r\n            onClick={() => setAction(\"cancel\")}\r\n            ><small>Cancel</small></button>\r\n              }\r\n            {context.subTool.shape !== \"Line\" && context.subTool.shape !== \"Curve\" ?\r\n              <>\r\n                <button\r\n                  title=\"Fill\"\r\n                  className={context.subTool.fill ? \"appMenuButtonON\" : \"\"}\r\n                  onClick={() => context.setSubTool({ ...context.subTool, fill: !context.subTool.fill })}\r\n                ><small>Fill</small></button>\r\n                <vertical-rect ></vertical-rect>\r\n                <button\r\n                  title=\"Stretch\"\r\n                  className={context.subTool.stretch ? \"appMenuButtonON\" : \"\"}\r\n                  onClick={() => context.setSubTool({ ...context.subTool, stretch: !context.subTool.stretch })}\r\n                ><small>Stretch</small>\r\n                </button>\r\n                <vertical-rect ></vertical-rect>\r\n                <button>\r\n                  <label htmlFor=\"rotationAngle\">Rotation</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    title=\"Rotation Angle\"\r\n                    id=\"rotationAngle\"\r\n                    value={context.subTool.angle}\r\n                    onChange={(e) => context.setSubTool({ ...context.subTool, angle: e.target.value })}\r\n                    step=\"1\" />\r\n                </button>\r\n                <vertical-rect ></vertical-rect>\r\n                {context.subTool.shape === \"Polygon\" || context.subTool.shape === \"Star\" ?\r\n                  <>\r\n                    <button>\r\n                      <label htmlFor=\"startAngle\">Start Angle</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        title=\"Start Angle\"\r\n                        id=\"startAngle\"\r\n                        value={context.subTool.startAngle}\r\n                        onChange={(e) => context.setSubTool({ ...context.subTool, startAngle: e.target.value })}\r\n                        step=\"1\" />\r\n                    </button>\r\n                    <vertical-rect ></vertical-rect>\r\n                  </> : null}\r\n              </>\r\n              : null}\r\n          </> : null}\r\n      </nav>\r\n    )\r\n  }\r\n}","// Paint.exe style editor in javascript, makes use of two overlapping canvas elements\r\nimport { useEffect, useContext } from \"react\";\r\n\r\nimport Provider from \"./Context.jsx\";\r\nimport { Context } from \"./Context.jsx\";\r\nimport { DrawCanvas } from \"./Components/DrawCanvas.jsx\";\r\nimport { PreviewCanvas } from \"./Components/PreviewCanvas.jsx\";\r\nimport { TopNavBar } from \"./Components/TopNavBar.jsx\";\r\nimport { ToolBar } from \"./Components/ToolBar.jsx\";\r\nimport { BottomNavBar } from \"./Components/BottomNavBar.jsx\";\r\n\r\nimport \"./style.css\";\r\nexport default function DrawDoc({ isSelected, action, setAction, appMenu, setAppMenu, appDialog, setAppDialog, contextMenu, canClose, setCanClose }) {\r\n  const context = useContext(Context);\r\n\r\n  return (\r\n    <Provider>\r\n      <app-container>\r\n        <TopNavBar \r\n        setAction={setAction} \r\n        contextMenu={contextMenu} \r\n        />\r\n        <app-body>\r\n          <ToolBar \r\n          setAction={setAction} \r\n          contextMenu={contextMenu}\r\n          />\r\n          <canvas-container>\r\n            <DrawCanvas\r\n              action={action}\r\n              setAction={setAction}\r\n              appMenu={appMenu}\r\n              setAppMenu={setAppMenu}\r\n              appDialog={appDialog}\r\n              setAppDialog={setAppDialog}\r\n              contextMenu={contextMenu}\r\n              canClose={canClose}\r\n              setCanClose={setCanClose}\r\n            />\r\n            <PreviewCanvas\r\n              setAction={setAction}\r\n              contextMenu={contextMenu}\r\n            />\r\n          </canvas-container>\r\n        </app-body>\r\n        <BottomNavBar\r\n          action={action}\r\n          setAction={setAction}\r\n          contextMenu={contextMenu}\r\n        />\r\n      </app-container>\r\n    </Provider>\r\n  );\r\n};","export default function rgbToHsl(rgb) {\r\n    let r = rgb[0],\r\n        g = rgb[1],\r\n        b = rgb[2];\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n    let cmin = Math.min(r, g, b),\r\n        cmax = Math.max(r, g, b),\r\n        delta = cmax - cmin,\r\n        h = 0,\r\n        s = 0,\r\n        l = ((cmax + cmin) / 2);\r\n    if (delta === 0) {\r\n        s = 0;\r\n        h = 0;\r\n    }else {\r\n        if (l <= 0.5) {\r\n            s = delta / (cmax + cmin);\r\n        } else {\r\n            s = delta / (2 - cmax-cmin);\r\n        };\r\n        if (cmax === r) {\r\n            h = (g - b) / delta;\r\n        } else if (cmax === g) {\r\n            h = ((b - r) / delta) + 2;\r\n        } else if(cmax === b) {\r\n            h = ((r - g) / delta) + 4;\r\n        }\r\n    }\r\n    h = Math.round(h * 60);\r\n    if (h < 0) {\r\n        h += 360;\r\n    }\r\n    s = Math.abs(s * 100).toFixed(0);\r\n    l = (l * 100 ).toFixed(0);\r\n    let hsl = [h, s + '%', l + '%'];\r\n    return hsl;\r\n}","export default function rgbaToHsla(rgba) {\r\n    var r = rgba[0],\r\n        g = rgba[1],\r\n        b = rgba[2],\r\n        a = rgba[3];\r\n        var r = parseInt(rgba[1], 16);\r\n        var g = parseInt(rgba[2], 16);\r\n        var b = parseInt(rgba[3], 16);\r\n        var a = parseInt(rgba[4], 16);\r\n        r /= 255;\r\n        g /= 255;\r\n        b /= 255;\r\n        let cmin = Math.min(r, g, b),\r\n            cmax = Math.max(r, g, b),\r\n            delta = cmax - cmin,\r\n            h = 0,\r\n            s = 0,\r\n            l = ((cmax + cmin) / 2);\r\n        if (delta === 0) {\r\n            s = 0;\r\n            h = 0;\r\n        }else {\r\n            if (l <= 0.5) {\r\n                s = delta / (cmax + cmin);\r\n            } else {\r\n                s = delta / (2 - cmax-cmin);\r\n            };\r\n            if (cmax === r) {\r\n                h = (g - b) / delta;\r\n            } else if (cmax === g) {\r\n                h = ((b - r) / delta) + 2;\r\n            } else if(cmax === b) {\r\n                h = ((r - g) / delta) + 4;\r\n            }\r\n        }\r\n        h = Math.round(h * 60);\r\n        if (h < 0) {\r\n            h += 360;\r\n        }\r\n        s = Math.abs(s * 100).toFixed(0);\r\n        l = (l * 100 ).toFixed(0);\r\n        let hsla = [h, s + '%', l + '%', a];\r\n        return hsla;\r\n    }","/*\r\nCustom color picker to replace default color picker from input[type=\"color\"],\r\nallowing for the use of alpha channel. The color picker is open on click,\r\nand closes on blur. \r\nThe color preview is set on color change, and applied when confirmed, by use \r\nof the callback function setColor, which is passed as props.\r\nThe return value is always in hsl or hsla format.\r\nThe alpha channel is used only if the useAlpha prop is true.\r\n\r\nTODO: \r\nAdd support for gradients,\r\nAdd support for color values RGB, RGBA, hex, and hex with alpha\r\n*/\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport hexToRgb from \"./Converters/hexToRgb\";\r\nimport hexToRgba from \"./Converters/hexToRgba\";\r\nimport rgbToHsl from \"./Converters/rgbToHsl\";\r\nimport rgbaToHsla from \"./Converters/rgbaToHsla\";\r\nimport nameToHsl from \"./Converters/nameToHsl\";\r\nimport \"../styles.css\";\r\n\r\nexport default function ColorPicker({ color, setColor, useAlpha }) {\r\n    const colorPickerRef = useRef(null);\r\n    const hueLumRef = useRef(null);\r\n    const saturationRef = useRef(null);\r\n    const alphaRef = useRef(null);\r\n    const [colorSelectorPos, setColorSelectorPos] = useState({ x: 0, y: 0 });\r\n    const [saturationSliderPos, setSaturationSliderPos] = useState(0);\r\n    const [alphaSliderPos, setAlphaSliderPos] = useState(0);\r\n    const [open, setOpen] = useState(false);\r\n    const [hue, setHue] = useState(0);\r\n    const [lightness, setLightness] = useState(50);\r\n    const [saturation, setSaturation] = useState(100);\r\n    const [alpha, setAlpha] = useState(100);\r\n\r\n    // Focus color picker when open, allowing its closing on blur\r\n    useEffect(() => {\r\n        if (open) {\r\n            colorPickerRef.current.focus();\r\n        }\r\n    }, [open]);\r\n\r\n    // Closes color picker on blur\r\n    const handleBlur = (event) => {\r\n        if (!event.currentTarget.contains(event.relatedTarget)) {\r\n            setOpen(false);\r\n        }\r\n    };\r\n\r\n    // Set displayed color based on current hue, saturation, and lightness, and uptades slider positions\r\n    useEffect(() => {\r\n        if (color) {\r\n            if (useAlpha) {\r\n                let hslaColor = [];\r\n                if (color[0] === \"#\") {\r\n                    hslaColor = rgbaToHsla(hexToRgba(color));\r\n                } else if (color.slice(0, 4) === \"rgba\") {\r\n                    hslaColor = rgbaToHsla(color);\r\n                } else if (color.slice(0, 4) === \"hsla\") {\r\n                    for (let i = 0; i < color.length; i++) {\r\n                        var start;\r\n                        var end;\r\n                        if (color[i] === \"(\") {\r\n                            start = i + 1;\r\n                        } else if (color[i] === \")\") {\r\n                            end = i;\r\n                            hslaColor.push(color.slice(start, end));\r\n                        } else if (color[i] === \",\") {\r\n                            hslaColor.push(color.slice(start, i));\r\n                            start = i + 1;\r\n                        }\r\n                    }\r\n                }\r\n                setHue(Number(hslaColor[0]));\r\n                setSaturation(Number(hslaColor[1].slice(0, hslaColor[1].length - 1)));\r\n                setLightness(Number(hslaColor[2].slice(0, hslaColor[2].length - 1)));\r\n                setAlpha(Number(hslaColor[3]));\r\n                if (open) {\r\n                    const hueLumRect = hueLumRef.current.getBoundingClientRect();\r\n                    setColorSelectorPos({\r\n                        x: hslaColor[0] / 360 * hueLumRect.width,\r\n                        y: (100 - hslaColor[2].slice(0, hslaColor[2].length - 1)) / 100 * hueLumRect.height\r\n                    });\r\n                    const saturationRect = saturationRef.current.getBoundingClientRect();\r\n                    setSaturationSliderPos(((100 - hslaColor[1].slice(0, hslaColor[1].length - 1)) / 100) * saturationRect.height);\r\n                    const alphaRect = alphaRef.current.getBoundingClientRect();\r\n                    setAlphaSliderPos(hslaColor[3] * alphaRect.width);\r\n                }\r\n            } else {\r\n                let hslColor = [];\r\n                if (color[0] === \"#\") {\r\n                    hslColor = rgbToHsl(hexToRgb(color));\r\n                } else if (color.slice(0, 3) === \"rgb\") {\r\n                    hslColor = rgbToHsl(color);\r\n                } else if (color.slice(0, 3) === \"hsl\") {\r\n                    for (let i = 0; i < color.length; i++) {\r\n                        var start;\r\n                        var end;\r\n                        if (color[i] === \"(\") {\r\n                            start = i + 1;\r\n                        } else if (color[i] === \")\") {\r\n                            end = i;\r\n                            hslColor.push(color.slice(start, end));\r\n                        } else if (color[i] === \",\") {\r\n                            hslColor.push(color.slice(start, i));\r\n                            start = i + 1;\r\n                        }\r\n                    }\r\n                }else{\r\n                    hslColor = nameToHsl(color);\r\n                }\r\n                setHue(Number(hslColor[0]));\r\n                setSaturation(Number(hslColor[1].slice(0, hslColor[1].length - 1)));\r\n                setLightness(Number(hslColor[2].slice(0, hslColor[2].length - 1)));\r\n                if (open) {\r\n                    const hueLumRect = hueLumRef.current.getBoundingClientRect();\r\n                    setColorSelectorPos({\r\n                        x: hslColor[0] / 360 * hueLumRect.width,\r\n                        y: (100 - hslColor[2].slice(0, hslColor[2].length - 1)) / 100 * hueLumRect.height\r\n                    });\r\n                    const saturationRect = saturationRef.current.getBoundingClientRect();\r\n                    setSaturationSliderPos(((100 - hslColor[1].slice(0, hslColor[1].length - 1)) / 100) * saturationRect.height);\r\n                }\r\n            }\r\n        }\r\n    }, [open, color, useAlpha])\r\n\r\n    // Draw color map for hue on the x axis and lightness on the y axis, for the current saturation value\r\n    const drawColorMap = (ctx) => {\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        let blockwidth = ctx.canvas.width / 360;\r\n        let blockheight = ctx.canvas.height / 100;\r\n        for (let i = 0; i < 360; i++) {\r\n            for (let j = 0; j < 100; j++) {\r\n                ctx.fillStyle = `hsl(${i},${saturation}%,${100 - j}%)`;\r\n                ctx.fillRect(i * blockwidth, j * blockheight, (i + 1) * blockwidth, (j + 1) * blockheight);\r\n            }\r\n        }\r\n    };\r\n\r\n    //Updates color map when saturation changes\r\n    useEffect(() => {\r\n        if (hueLumRef.current) {\r\n            const ctxColorPicker = hueLumRef.current.getContext(\"2d\", { alpha: false });\r\n            drawColorMap(ctxColorPicker);\r\n        }\r\n\r\n    }, [open, saturation]);\r\n\r\n    //Updates hue and luminance map slider positions when mouse moves, as well as their respective values\r\n    const handleHueLumMap = (event) => {\r\n        if (event.buttons !== 0) {\r\n            const rect = hueLumRef.current.getBoundingClientRect();\r\n            let x = event.clientX - rect.left;\r\n            let y = event.clientY - rect.top;\r\n            if (x >= 0 && x <= rect.width && y >= 0 && y <= rect.height) {\r\n                setColorSelectorPos({ x, y });\r\n                setHue(Math.floor(360 * x / rect.width));\r\n                setLightness(100 - Math.floor(100 * y / rect.height));\r\n            }\r\n        }\r\n    };\r\n    const touchHueLumMap = (event) => {\r\n        if (event.touches.length === 1) {\r\n        const rect = hueLumRef.current.getBoundingClientRect();\r\n        let x = event.touches[0].clientX - rect.left;\r\n        let y = event.touches[0].clientY - rect.top;\r\n        if (x >= 0 && x <= rect.width && y >= 0 && y <= rect.height) {\r\n            setColorSelectorPos({ x, y });\r\n            setHue(Math.floor(360 * x / rect.width));\r\n            setLightness(100 - Math.floor(100 * y / rect.height));\r\n        }\r\n    }\r\n    };\r\n\r\n    //Updates saturation slider position when mouse moves, as well as its value\r\n    const handleSaturationSlider = (event) => {\r\n        if (event.buttons !== 0) {\r\n            const rect = saturationRef.current.getBoundingClientRect();\r\n            let x = event.clientX - rect.left;\r\n            let y = event.clientY - rect.top;\r\n            if (x >= 0 && x <= rect.width && y >= 0 && y <= rect.height) {\r\n                setSaturation(100 - Math.floor(100 * y / rect.height));\r\n                setSaturationSliderPos(y);\r\n            }\r\n        }\r\n    };\r\n    const touchSaturationSlider = (event) => {        \r\n        if (event.touches.length === 1) {\r\n        const rect = saturationRef.current.getBoundingClientRect();\r\n        let x = event.touches[0].clientX - rect.left;\r\n        let y = event.touches[0].clientY - rect.top;\r\n        if (x >= 0 && x <= rect.width && y >= 0 && y <= rect.height) {\r\n            setSaturation(100 - Math.floor(100 * y / rect.height));\r\n            setSaturationSliderPos(y);\r\n        }\r\n    }\r\n    };\r\n\r\n    //Updates alpha slider position when mouse moves, as well as its value\r\n    const handleAlphaSlider = (event) => {\r\n        if (event.buttons !== 0) {\r\n            const rect = alphaRef.current.getBoundingClientRect();\r\n            let x = event.clientX - rect.left;\r\n            let y = event.clientY - rect.top;\r\n            if (x >= 0 && x <= rect.width && y >= 0 && y <= rect.height) {\r\n                setAlpha((Math.floor(100 * x / rect.width)) / 100);\r\n                setAlphaSliderPos(x);\r\n            }\r\n        }\r\n    };\r\n    const touchAlphaSlider = (event) => {\r\n        if (event.touches.length === 1) {\r\n        const rect = alphaRef.current.getBoundingClientRect();\r\n        let x = event.touches[0].clientX - rect.left;\r\n        let y = event.touches[0].clientY - rect.top;\r\n        if (x >= 0 && x <= rect.width && y >= 0 && y <= rect.height) {\r\n            setAlpha((Math.floor(100 * x / rect.width)) / 100);\r\n            setAlphaSliderPos(x);\r\n        }\r\n    }\r\n    };\r\n\r\n\r\n    const handleHueInput = (value) => {\r\n        setHue(value);\r\n        const rect = hueLumRef.current.getBoundingClientRect();\r\n        setColorSelectorPos({ ...colorSelectorPos, x: value / 360 * rect.width });\r\n    };\r\n\r\n    const handleLumInput = (value) => {\r\n        setLightness(value);\r\n        const rect = hueLumRef.current.getBoundingClientRect();\r\n        setColorSelectorPos({ ...colorSelectorPos, y: (100 - value) / 100 * rect.height });\r\n    };\r\n\r\n    const handleSaturationInput = (value) => {\r\n        setSaturation(value);\r\n        const rect = saturationRef.current.getBoundingClientRect();\r\n        setSaturationSliderPos(((100 - value) / 100) * rect.height);\r\n    };\r\n\r\n    const handleAlphaInput = (value) => {\r\n        setAlpha(value);\r\n        const rect = alphaRef.current.getBoundingClientRect();\r\n        setAlphaSliderPos(value * rect.width);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <color-picker-button onClick={() => setOpen(!open)} >\r\n                <button style={{ background: color }} />\r\n            </color-picker-button>\r\n            {open && createPortal(\r\n                <color-picker-window\r\n                    tabIndex=\"0\"\r\n                    ref={colorPickerRef}\r\n                    onBlur={(e) => handleBlur(e)}\r\n                >\r\n                    <div>\r\n                        <hue-light-map>\r\n                            <canvas \r\n                            onMouseDown={(e) => handleHueLumMap(e)} \r\n                            onMouseMove={(e) => handleHueLumMap(e)} \r\n                            onTouchMove={(e) => touchHueLumMap(e)}\r\n                            onTouchStart={(e) => touchHueLumMap(e)}\r\n                            onTouchEnd={(e) => touchHueLumMap(e)}\r\n                            ref={hueLumRef} width=\"180\" height=\"180\"\r\n                                style={{ opacity: useAlpha ? alpha : 1 }}\r\n                            />\r\n                            <slider-thumb\r\n                                style={{\r\n                                    top: colorSelectorPos.y,\r\n                                    left: colorSelectorPos.x,\r\n                                    background:\r\n                                        useAlpha ?\r\n                                            `hsla(${hue},${saturation}%,${lightness}%, ${alpha})` :\r\n                                            `hsl(${hue},${saturation}%,${lightness}%)`\r\n                                }}\r\n                                onMouseDown={(e) => handleHueLumMap(e)}\r\n                                onMouseMove={(e) => handleHueLumMap(e)}\r\n                                onTouchMove={(e) => touchHueLumMap(e)}\r\n                                onTouchStart={(e) => touchHueLumMap(e)}\r\n                                onTouchEnd={(e) => touchHueLumMap(e)}\r\n                            />\r\n                        </hue-light-map>\r\n                        <saturation-slider title=\"Saturation\">\r\n                            <div\r\n                                ref={saturationRef}\r\n                                style={{\r\n                                    background:\r\n                                        `linear-gradient(0deg, hsl(${hue},0%,${lightness}%), hsla(${hue},100%,${lightness}%))`\r\n                                }}\r\n                                onMouseDown={(e) => handleSaturationSlider(e)}\r\n                                onMouseMove={(e) => handleSaturationSlider(e)}\r\n                                onTouchMove={(e) => touchSaturationSlider(e)}\r\n                                onTouchStart={(e) => touchSaturationSlider(e)}\r\n                                onTouchEnd={(e) => touchSaturationSlider(e)}\r\n                            />\r\n                            <slider-thumb\r\n                                style={{\r\n                                    top: saturationSliderPos,\r\n                                    background: `hsla(${hue},${saturation}%,${lightness}%, ${alpha})`\r\n                                }}\r\n                                onMouseDown={(e) => handleSaturationSlider(e)}\r\n                                onMouseMove={(e) => handleSaturationSlider(e)}\r\n                                onTouchMove={(e) => touchSaturationSlider(e)}\r\n                                onTouchStart={(e) => touchSaturationSlider(e)}\r\n                                onTouchEnd={(e) => touchSaturationSlider(e)}\r\n                            />\r\n                        </saturation-slider>\r\n                    </div>\r\n                    {useAlpha &&\r\n                        <alpha-slider title=\"Alpha\">\r\n                            <div\r\n                                ref={alphaRef}\r\n                                style={{\r\n                                    background:\r\n                                        `linear-gradient(90deg, hsla(${hue},${saturation}%,${lightness}%, 0), hsla(${hue},${saturation}%,${lightness}%, 1))`\r\n                                }}\r\n                                onMouseDown={(e) => handleAlphaSlider(e)}\r\n                                onMouseMove={(e) => handleAlphaSlider(e)}\r\n                                onTouchMove={(e) => touchAlphaSlider(e)}\r\n                                onTouchStart={(e) => touchAlphaSlider(e)}\r\n                                onTouchEnd={(e) => touchAlphaSlider(e)}\r\n                            />\r\n                            <slider-thumb\r\n                                style={{\r\n                                    left: alphaSliderPos,\r\n                                    background: `hsl(${hue},${saturation}%,${lightness}%, ${alpha})`\r\n                                }}\r\n                                onMouseDown={(e) => handleAlphaSlider(e)}\r\n                                onMouseMove={(e) => handleAlphaSlider(e)}\r\n                                onTouchMove={(e) => touchAlphaSlider(e)}\r\n                                onTouchStart={(e) => touchAlphaSlider(e)}\r\n                                onTouchEnd={(e) => touchAlphaSlider(e)}\r\n                            />\r\n                        </alpha-slider>\r\n                    }\r\n                    <color-inputs>\r\n                        <div>\r\n                            Hue\r\n                            <input type=\"number\" min=\"0\" max=\"360\" value={hue}\r\n                                onChange={(e) => handleHueInput(e.target.value)} />\r\n                        </div>\r\n                        <div>\r\n                            Lum.\r\n                            <input type=\"number\" min=\"0\" max=\"100\" value={lightness}\r\n                                onChange={(e) => handleLumInput(e.target.value)} />\r\n                        </div>\r\n                        <div>\r\n                            Sat.\r\n                            <input type=\"number\" min=\"0\" max=\"100\" value={saturation}\r\n                                onChange={(e) => handleSaturationInput(e.target.value)} />\r\n                        </div>\r\n                        {useAlpha &&\r\n                            <div>\r\n                                Alpha\r\n                                <input type=\"number\" min=\"0\" max=\"1\" step=\"0.01\" value={alpha}\r\n                                    onChange={(e) => handleAlphaInput(e.target.value)} />\r\n                            </div>\r\n                        }\r\n                    </color-inputs>\r\n                    <color-button >\r\n                        <button\r\n                            style={{\r\n                                background: useAlpha ? `hsla(${hue},${saturation}%,${lightness}%, ${alpha})` : `hsl(${hue},${saturation}%,${lightness}%)`\r\n                            }}\r\n                            onClick={() => { useAlpha ? setColor(`hsla(${hue},${saturation}%,${lightness}%, ${alpha})`) : setColor(`hsl(${hue},${saturation}%,${lightness}%)`) }}\r\n                        >\r\n                            Apply\r\n                        </button>\r\n                    </color-button>\r\n                </color-picker-window>\r\n                , document.getElementById(\"root\"))}\r\n        </>\r\n    );\r\n}","export default function hexToRgba(hex) {\r\n    var result;\r\n    if (hex.length === 5) {\r\n        result = /^#?([a-f\\d]{1})([a-f\\d]{1})([a-f\\d]{1})([a-f\\d]{1})$/i.exec(hex);\r\n        if(result[4] == 0){\r\n            result[4] = 'ff';\r\n        }\r\n    } else if(hex.length === 9) {\r\n        result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    }else if(hex.length === 8) {\r\n        result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        result[4] = 'ff';\r\n    }\r\n        return result\r\n            ? [\r\n                parseInt(result[1], 16),\r\n                parseInt(result[2], 16),\r\n                parseInt(result[3], 16),\r\n                parseInt(result[4], 16) / 255,\r\n            ]\r\n            : null;\r\n}","export default function hexToRgb(hex) {\r\n    var result;\r\n    if(hex.length === 4){\r\n        result = /^#?([a-f\\d]{1})([a-f\\d]{1})([a-f\\d]{1})$/i.exec(hex);\r\n    }else{\r\n        result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    }\r\n    return result\r\n        ? [\r\n               parseInt(result[1], 16),\r\n               parseInt(result[2], 16),\r\n               parseInt(result[3], 16),\r\n          ]\r\n        : null;\r\n}","export default function nameToHsl(name) {\r\n    switch(name){\r\n        case \"red\":\r\n            return [0, \"100%\", \"50%\"];\r\n        case \"green\":\r\n            return [120, \"100%\", \"50%\"];\r\n        case \"blue\":\r\n            return [240, \"100%\", \"50%\"];\r\n        case \"yellow\":\r\n            return [60, \"100%\", \"50%\"];\r\n        case \"cyan\":\r\n            return [180, \"100%\", \"50%\"];\r\n        case \"magenta\":\r\n            return [300, \"100%\", \"50%\"];\r\n        case \"black\":\r\n            return [0, \"0%\", \"0%\"];\r\n        case \"white\":\r\n            return [0, \"0%\", \"100%\"];\r\n        case \"gray\":\r\n        case \"grey\":\r\n            return [0, \"0%\", \"50%\"];\r\n        case \"lightgray\":\r\n        case \"lightgrey\":\r\n            return [0, \"0%\", \"75%\"];\r\n        case \"darkgray\":\r\n        case \"darkgrey\":\r\n            return [0, \"0%\", \"25%\"];\r\n        case \"brown\":\r\n            return [30, \"50%\", \"50%\"];\r\n        case \"orange\":\r\n            return [30, \"100%\", \"50%\"];\r\n        case \"purple\":\r\n            return [270, \"100%\", \"50%\"];\r\n        case \"pink\":\r\n            return [330, \"100%\", \"50%\"];\r\n        case \"lime\":\r\n            return [120, \"100%\", \"50%\"];\r\n        case \"teal\":\r\n            return [180, \"100%\", \"50%\"];\r\n        case \"aqua\":\r\n            return [240, \"100%\", \"50%\"];\r\n        case \"maroon\":\r\n            return [0, \"100%\", \"50%\"];\r\n        case \"navy\":\r\n            return [240, \"100%\", \"50%\"];\r\n        case \"olive\":\r\n            return [60, \"100%\", \"50%\"];\r\n        default:\r\n            return [0, \"0%\", \"0%\"];\r\n    }\r\n}"],"names":["Context","createContext","name","setName","history","setHistory","dimention","setDimention","tool","setTool","subTool","setSubTool","curveControls","setCurveControls","color","setColor","size","setSize","text","setText","clipboard","setClipboard","zoom","setZoom","cursor","setCursor","view","setView","_ref","children","useState","index","canUndo","canRedo","dimentions","setDimentions","width","height","shape","fill","stretch","sides","angle","startAngle","state","start","x","y","end","controlPoint1","controlPoint2","selected","top","left","fontSize","fontFamily","data","current","down","toolBar","topNavBar","bottomNavBar","menu","contextValue","_jsx","Provider","value","handleDraw","canvas","param","preview","ctx","getContext","alpha","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","imageSmoothingEnabled","boundary","getBoundingClientRect","scaleX","scaleY","startX","startY","endX","endY","drawEraser","strokeStyle","selectedColor","fillStyle","lineWidth","setLineDash","beginPath","arc","Math","PI","stroke","closePath","drawFunctions","drawBrush","drawSpray","randomX","random","randomNegativeX","randomY","randomNegativeY","sqrt","pow","fillRect","drawBucket","r","g","b","h","s","l","hslaColor","i","length","push","slice","temp1","temp2","tempR","tempG","tempB","secondTest","finalTest","tempColor","round","componentToHex","c","hex","Number","toString","hexColor","spans","parseInt","imageData","getImageData","pixelData","Uint32Array","buffer","getPixel","currX","currY","targetColor","addSpan","right","line","direction","checkSpan","column","flag","whileBreak","pop","lineOffset","putImageData","drawText","font","String","fillText","drawPipette","pixel","cmin","min","cmax","max","delta","abs","toFixed","color1","setColor1","setColor2","drawSelect","color2","strokeRect","drawShape","radius","centerX","centerY","stretchX","stretchY","save","translate","rotate","restore","drawCircleSelection","drawEllipseSelection","ellipse","drawLine","moveTo","lineTo","drawCurve","startPoint","endPoint","bezierCurveTo","drawCircle","drawRectangle","drawPolygon","cos","sin","drawStar","drawArrow","drawHeart","scale","clearRect","handleTools","params","action","setAction","newState","newStart","newEnd","newControlPoint1","newControlPoint2","handleTopMenu","appMenu","setAppMenu","args","updatedAppMenu","hasHistory","handleHistory","context","command","setCanClose","updatedHistory","hist","histIndex","undoAction","undoFlag","redoAction","redoFlag","handleFile","newFile","downloadLink","document","createElement","setAttribute","url","toDataURL","replace","click","saveFile","handleAction","appDialog","setAppDialog","contextMenu","canCLose","dialogNew","info","_jsxs","_Fragment","htmlFor","id","type","onChange","e","target","actions","Confirm","Cancel","title","dialogChangeName","Save","Close","DrawCanvas","canClose","canvasMainRef","useRef","useContext","v","useEffect","willReadFrequently","offsetX","offsetY","getElementById","style","transform","ref","PreviewCanvas","canvasPreviewRef","handleCursor","button","clientX","clientY","buttons","handleTouch","preventDefault","touches","className","onMouseDown","onMouseUp","onMouseMove","onMouseLeave","onMouseEnter","onTouchStart","onTouchEnd","onTouchMove","onTouchCancel","onContextMenu","event","content","disabled","setOpen","setPosition","setContent","handleContextMenu","TopNavBar","onClick","BiUndo","BiRedo","TfiFile","TfiSave","display","ColorPicker","useAlpha","handleZoom","step","SubToolIcon","subtool","canvasSubToolRef","functionList","drawCircleIcon","drawEllipseIcon","drawRectangleIcon","drawPolygonIcon","drawLineIcon","drawCurveIcon","drawStarIcon","drawArrowIcon","drawHeartIcon","ToolBar","toolComponents","Brush","GiPaintBrush","Eraser","TfiEraser","Bucket","TfiPaintBucket","Spray","TfiSpray","Text","RxLetterCaseCapitalize","Pipette","CgColorPicker","Magnifier","HiOutlineMagnifyingGlass","Select","LuBoxSelect","Shape","Object","keys","map","BottomNavBar","DrawDoc","isSelected","rgbToHsl","rgb","rgbaToHsla","rgba","a","colorPickerRef","hueLumRef","saturationRef","alphaRef","colorSelectorPos","setColorSelectorPos","saturationSliderPos","setSaturationSliderPos","alphaSliderPos","setAlphaSliderPos","open","hue","setHue","lightness","setLightness","saturation","setSaturation","setAlpha","focus","result","exec","hexToRgba","hueLumRect","saturationRect","alphaRect","hslColor","hexToRgb","nameToHsl","blockwidth","blockheight","j","drawColorMap","handleHueLumMap","rect","floor","touchHueLumMap","handleSaturationSlider","touchSaturationSlider","handleAlphaSlider","touchAlphaSlider","background","createPortal","tabIndex","onBlur","currentTarget","contains","relatedTarget","opacity","handleHueInput","handleLumInput","handleSaturationInput","handleAlphaInput"],"sourceRoot":""}